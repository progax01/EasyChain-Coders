{
	"id": "221cf91568999dd0499f1c5917858631",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./OmniERC20.sol\";  // Import the abstract OmniERC20 contract\n\ncontract MyOmniToken is OmniERC20 {\naddress omniPortal=0xcB60A0451831E4865bC49f41F9C67665Fc9b75C3;\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint256 initialSupply,\n        address initialMinterAddress,\n        bool ismainChain\n    ) OmniERC20(name_, symbol_, omniPortal) {\n        // Mint initial supply to the deployer (you can change this as needed)\n        if(ismainChain== true){\n        _mint(initialMinterAddress, initialSupply);\n        }\n        else {\n              _mint(address(this), initialSupply);\n        }\n    }\n\n    // Public mint function, callable by the owner (if you wish to allow minting after deployment)\n    function mint(address account, uint256 value) public {\n        // Add your own access control here, e.g., onlyOwner modifier\n        _mint(account, value);\n    }\n\n    // Internal mint function\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n}\n"
			},
			"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\nimport {XApp} from \"../../../../../lib/omni/contracts/core/src/pkg/XApp.sol\";\nimport {ConfLevel} from \"../../../../../lib/omni/contracts/core/src/libraries/ConfLevel.sol\";\n\n\nabstract contract OmniERC20 is Context, IERC20, IERC20Metadata, IERC20Errors, XApp {\n    mapping(address account => uint256) private _balances;\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n    uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n\n    constructor(string memory name_, string memory symbol_, address omniPortal) XApp(omniPortal, ConfLevel.Latest) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint256 value) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n\n    function transfer(address to, uint256 value) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n   function transfer(uint64 destChain, address destToken, address to, uint256 value) external payable {\n\n        address from = _msgSender();\n        _transfer(from, address(this), value);  // Lock the tokens in this contract\n        bytes memory data = abi.encodeCall(OmniERC20.receiveTransfer, (address(this), to, value));\n        uint256 fee = xcall(destChain, destToken, data, 150000);\n        require(msg.value >= fee, \"OmniERC20: Insufficient fee\");\n\n    }\n\n    function receiveTransfer(address from, address to, uint256 value) external xrecv {\n\n        require(isXCall(), \"OmniERC20: Only callable via cross-chain message\");\n        _update(from, to, value);\n\n    }\n\n    function _transfer(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n\n        _update(from, to, value);\n    }\n\n\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\n/**\n * @title ConfLevel\n * @notice XMsg confirmation levels. Matches ConfLevels in lib/xchain/types.go\n * @dev We prefer explicit constants over Enums, because we want uint8 values to start at 1, not 0, as they do in\n *      lib/xchain/types.go, such that 0 can represent \"unset\". Note only latest and finalized levels are supported\n *      on-chain.\n */\nlibrary ConfLevel {\n    /**\n     * @notice XMsg confirmation level \"latest\", last byte of xmsg.shardId.\n     */\n    uint8 internal constant Latest = 1;\n\n    /**\n     * @notice XMsg confirmation level \"finalized\", last byte of xmsg.shardId.\n     */\n    uint8 internal constant Finalized = 4;\n\n    /**\n     * @notice Returns true if the given level is valid.\n     */\n    function isValid(uint8 level) internal pure returns (bool) {\n        return level == Latest || level == Finalized;\n    }\n\n    /**\n     * @notice Returns broadcast shard version of the given level.\n     */\n    function toBroadcastShard(uint8 level) internal pure returns (uint64) {\n        return uint64(level) | 0x0100;\n    }\n}\n"
			},
			"xstake/lib/omni/contracts/core/src/pkg/XApp.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\nimport { XAppBase } from \"./XAppBase.sol\";\n\n/**\n * @title XApp\n * @notice Base contract for Omni cross-chain applications\n */\nabstract contract XApp is XAppBase {\n    constructor(address omni_, uint8 defaultConfLevel_) {\n        _setOmniPortal(omni_);\n        _setDefaultConfLevel(defaultConfLevel_);\n    }\n}\n"
			},
			"xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"xstake/src/wstf token launch/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"xstake/src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"xstake/src/wstf token launch/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\nimport { IOmniPortal } from \"../interfaces/IOmniPortal.sol\";\nimport { XTypes } from \"../libraries/XTypes.sol\";\nimport { ConfLevel } from \"../libraries/ConfLevel.sol\";\n\n/**\n * @title XAppBase\n * @notice Shared XApp storage and logic.\n */\nabstract contract XAppBase {\n    /**\n     * @notice Emitted when the OmniPortal contract address is set\n     */\n    event OmniPortalSet(address omni);\n\n    /**\n     * @notice Emitted when the default confirmation level is set\n     * @param conf  Confirmation level\n     */\n    event DefaultConfLevelSet(uint8 conf);\n\n    /**\n     * @notice The OmniPortal contract\n     */\n    IOmniPortal public omni;\n\n    /**\n     * @notice Default confirmation level for xcalls\n     */\n    uint8 public defaultConfLevel;\n\n    /**\n     * @notice Transient storage for the current xmsg\n     */\n    XTypes.MsgContext internal xmsg;\n\n    /**\n     * @notice Read current xmsg into storage before execution, delete it afterwards\n     */\n    modifier xrecv() {\n        xmsg = omni.xmsg();\n        _;\n        delete xmsg;\n    }\n\n    /**\n     * @notice Return true if the current call is an xcall from the OmniPortal\n     */\n    function isXCall() internal view returns (bool) {\n        return omni.isXCall() && msg.sender == address(omni);\n    }\n\n    /**\n     * @notice Retruns the fee for calling a contract on another chain, with the specified gas limit\n     */\n    function feeFor(uint64 destChainId, bytes memory data, uint64 gasLimit) internal view returns (uint256) {\n        return omni.feeFor(destChainId, data, gasLimit);\n    }\n\n    /**\n     * @notice Returns the chain ID of the Omni EVM in this Omni network\n     */\n    function omniChainId() internal view returns (uint64) {\n        return omni.omniChainId();\n    }\n\n    /**\n     * @notice Call a contract on another. (Default ConfLevel)\n     * @param destChainId   Destination chain ID\n     * @param to            Address of contract to call on destination chain\n     * @param data          ABI Encoded function calldata\n     * @param gasLimit      Execution gas limit, enforced on destination chain\n     */\n    function xcall(uint64 destChainId, address to, bytes memory data, uint64 gasLimit) internal returns (uint256) {\n        uint256 fee = omni.feeFor(destChainId, data, gasLimit);\n        require(address(this).balance >= fee || msg.value >= fee, \"XApp: insufficient funds\");\n        omni.xcall{ value: fee }(destChainId, defaultConfLevel, to, data, gasLimit);\n        return fee;\n    }\n\n    /**\n     * @notice Call a contract on another chain. (Explicit ConfLevel)\n     * @param destChainId   Destination chain ID\n     * @param conf          Confirmation level\n     * @param to            Address of contract to call on destination chain\n     * @param data          ABI Encoded function calldata\n     * @param gasLimit      Execution gas limit, enforced on destination chain\n     */\n    function xcall(uint64 destChainId, uint8 conf, address to, bytes memory data, uint64 gasLimit)\n        internal\n        returns (uint256)\n    {\n        uint256 fee = omni.feeFor(destChainId, data, gasLimit);\n        require(address(this).balance >= fee || msg.value >= fee, \"XApp: insufficient funds\");\n        omni.xcall{ value: fee }(destChainId, conf, to, data, gasLimit);\n        return fee;\n    }\n\n    /**\n     * @notice Set the default confirmation level for xcalls\n     * @param conf  Confirmation level\n     */\n    function _setDefaultConfLevel(uint8 conf) internal {\n        require(ConfLevel.isValid(conf), \"XApp: invalid conf level\");\n        defaultConfLevel = conf;\n        emit DefaultConfLevelSet(conf);\n    }\n\n    /**\n     * @notice Set the OmniPortal contract address\n     * @param _omni    The OmniPortal contract address\n     */\n    function _setOmniPortal(address _omni) internal {\n        require(_omni != address(0), \"XApp: no zero omni\");\n        omni = IOmniPortal(_omni);\n        emit OmniPortalSet(_omni);\n    }\n}\n"
			},
			"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\n/**\n * @title XTypes\n * @dev Defines xchain types, core to Omni's xchain messaging protocol. These\n *      types mirror those defined in omni/lib/xchain/types.go.\n */\nlibrary XTypes {\n    /**\n     * @notice A cross chain message - the product of an xcall. This matches the XMsg type used\n     *        throughout Omni's cross-chain messaging protocol. Msg is used to construct and verify\n     *        XSubmission merkle trees / proofs.\n     * @custom:field destChainId    Chain ID of the destination chain\n     * @custom:field shardId        Shard ID of the XStream (first byte is the confirmation level)\n     * @custom:field offset         Monotonically incremented offset of Msg in source -> dest Stream\n     * @custom:field sender         msg.sender of xcall on source chain\n     * @custom:field to             Target address to call on destination chain\n     * @custom:field data           Data to provide to call on destination chain\n     * @custom:field gasLimit       Gas limit to use for call execution on destination chain\n     */\n    struct Msg {\n        uint64 destChainId;\n        uint64 shardId;\n        uint64 offset;\n        address sender;\n        address to;\n        bytes data;\n        uint64 gasLimit;\n    }\n\n    /**\n     * @notice Msg context exposed during its execution to consuming xapps.\n     * @custom:field sourceChainId  Chain ID of the source chain\n     * @custom:field sender         msg.sender of xcall on source chain\n     */\n    struct MsgContext {\n        uint64 sourceChainId;\n        address sender;\n    }\n\n    /**\n     * @notice BlockHeader of an XBlock.\n     * @custom:field sourceChainId      Chain ID of the source chain\n     * @custom:field sourceChainId      Chain ID of the Omni consensus chain\n     * @custom:field confLevel          Confirmation level of the cross chain block\n     * @custom:field offset             Offset of the cross chain block\n     * @custom:field sourceBlockHeight  Height of the source chain block\n     * @custom:field sourceBlockHash    Hash of the source chain block\n     */\n    struct BlockHeader {\n        uint64 sourceChainId;\n        uint64 consensusChainId;\n        uint8 confLevel;\n        uint64 offset;\n        uint64 sourceBlockHeight;\n        bytes32 sourceBlockHash;\n    }\n\n    /**\n     * @notice The required parameters to submit xmsgs to an OmniPortal. Constructed by the relayer\n     *         by watching Omni's consensus chain, and source chain blocks.\n     * @custom:field attestationRoot  Merkle root of xchain block (XBlockRoot), attested to and signed by validators\n     * @custom:field validatorSetId   Unique identifier of the validator set that attested to this root\n     * @custom:field blockHeader      Block header, identifies xchain block\n     * @custom:field msgs             Messages to execute\n     * @custom:field proof            Multi proof of block header and messages, proven against attestationRoot\n     * @custom:field proofFlags       Multi proof flags\n     * @custom:field signatures       Array of validator signatures of the attestationRoot, and their public keys\n     */\n    struct Submission {\n        bytes32 attestationRoot;\n        uint64 validatorSetId;\n        BlockHeader blockHeader;\n        Msg[] msgs;\n        bytes32[] proof;\n        bool[] proofFlags;\n        SigTuple[] signatures;\n    }\n\n    /**\n     * @notice A tuple of a validator's ethereum address and signature over some digest.\n     * @custom:field validatorAddr  Validator ethereum address\n     * @custom:field signature      Validator signature over some digest; Ethereum 65 bytes [R || S || V] format.\n     */\n    struct SigTuple {\n        address validatorAddr;\n        bytes signature;\n    }\n\n    /**\n     * @notice An Omni validator, specified by their etheruem address and voting power.\n     * @custom:field addr   Validator ethereum address\n     * @custom:field power  Validator voting power\n     */\n    struct Validator {\n        address addr;\n        uint64 power;\n    }\n\n    /**\n     * @notice A chain in the \"omni network\" specified by its chain ID and supported shards.\n     * @custom:field chainId  Chain ID\n     * @custom:field shards   Supported shards\n     */\n    struct Chain {\n        uint64 chainId;\n        uint64[] shards;\n    }\n}\n"
			},
			"xstake/lib/omni/contracts/core/src/interfaces/IOmniPortal.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\nimport { XTypes } from \"../libraries/XTypes.sol\";\n\n/**\n * @title IOmniPortal\n * @notice The OmniPortal is the on-chain interface to Omni's cross-chain\n *         messaging protocol. It is used to initiate and execute cross-chain calls.\n */\ninterface IOmniPortal {\n    /**\n     * @notice Emitted when an xcall is made to a contract on another chain\n     * @param destChainId   Destination chain ID\n     * @param offset        Offset this XMsg in the source -> dest XStream\n     * @param sender        msg.sender of the source xcall\n     * @param to            Address of the contract to call on the destination chain\n     * @param data          Encoded function calldata\n     * @param gasLimit      Gas limit for execution on destination chain\n     * @param fees          Fees paid for the xcall\n     */\n    event XMsg(\n        uint64 indexed destChainId,\n        uint64 indexed shardId,\n        uint64 indexed offset,\n        address sender,\n        address to,\n        bytes data,\n        uint64 gasLimit,\n        uint256 fees\n    );\n\n    /**\n     * @notice Emitted when an XMsg is executed on its destination chain\n     * @param sourceChainId Source chain ID\n     * @param shardId       Shard ID of the XStream (first byte is the confirmation level)\n     * @param offset        Offset the XMsg in the source -> dest XStream\n     * @param gasUsed       Gas used in execution of the XMsg\n     * @param success       Whether the execution succeeded\n     * @param relayer       Address of the relayer who submitted the XMsg\n     * @param error         Result of XMsg execution, if success == false. Limited to\n     *                      xreceiptMaxErrorBytes(). Empty if success == true.\n     */\n    event XReceipt(\n        uint64 indexed sourceChainId,\n        uint64 indexed shardId,\n        uint64 indexed offset,\n        uint256 gasUsed,\n        address relayer,\n        bool success,\n        bytes error\n    );\n\n    /**\n     * @notice Maximum allowed xmsg gas limit\n     */\n    function xmsgMaxGasLimit() external view returns (uint64);\n\n    /**\n     * @notice Minimum allowed xmsg gas limit\n     */\n    function xmsgMinGasLimit() external view returns (uint64);\n\n    /**\n     * @notice Maximum number of bytes allowed in xmsg data\n     */\n    function xmsgMaxDataSize() external view returns (uint16);\n\n    /**\n     * @notice Maxium number of bytes allowed in xreceipt result\n     */\n    function xreceiptMaxErrorSize() external view returns (uint16);\n\n    /**\n     * @notice Returns the fee oracle address\n     */\n    function feeOracle() external view returns (address);\n\n    /**\n     * @notice Returns the chain ID of the chain to which this portal is deployed\n     */\n    function chainId() external view returns (uint64);\n\n    /**\n     * @notice Returns the chain ID of Omni's EVM execution chain\n     */\n    function omniChainId() external view returns (uint64);\n\n    /**\n     * @notice Returns the offset of the last outbound XMsg sent to destChainId in shardId\n     */\n    function outXMsgOffset(uint64 destChainId, uint64 shardId) external view returns (uint64);\n\n    /**\n     * @notice Returns the offset of the last inbound XMsg received from srcChainId in shardId\n     */\n    function inXMsgOffset(uint64 srcChainId, uint64 shardId) external view returns (uint64);\n\n    /**\n     * @notice Returns the offset of the last inbound XBlock received from srcChainId in shardId\n     */\n    function inXBlockOffset(uint64 srcChainId, uint64 shardId) external view returns (uint64);\n\n    /**\n     * @notice Returns the current XMsg being executed via this portal.\n     *          - xmsg().sourceChainId  Chain ID of the source xcall\n     *          - xmsg().sender         msg.sender of the source xcall\n     *         If no XMsg is being executed, all fields will be zero.\n     *          - xmsg().sourceChainId  == 0\n     *          - xmsg().sender         == address(0)\n     */\n    function xmsg() external view returns (XTypes.MsgContext memory);\n\n    /**\n     * @notice Returns true the current transaction is an xcall, false otherwise\n     */\n    function isXCall() external view returns (bool);\n\n    /**\n     * @notice Returns the shard ID is supported by this portal\n     */\n    function isSupportedShard(uint64 shardId) external view returns (bool);\n\n    /**\n     * @notice Returns the destination chain ID is supported by this portal\n     */\n    function isSupportedDest(uint64 destChainId) external view returns (bool);\n\n    /**\n     * @notice Calculate the fee for calling a contract on another chain\n     *         Fees denominated in wei.\n     * @param destChainId   Destination chain ID\n     * @param data          Encoded function calldata\n     * @param gasLimit      Execution gas limit, enforced on destination chain\n     */\n    function feeFor(uint64 destChainId, bytes calldata data, uint64 gasLimit) external view returns (uint256);\n\n    /**\n     * @notice Call a contract on another chain.\n     * @param destChainId   Destination chain ID\n     * @param conf          Confirmation level;\n     * @param to            Address of contract to call on destination chain\n     * @param data          ABI Encoded function calldata\n     * @param gasLimit      Execution gas limit, enforced on destination chain\n     */\n    function xcall(uint64 destChainId, uint8 conf, address to, bytes calldata data, uint64 gasLimit) external payable;\n\n    /**\n     * @notice Submit a batch of XMsgs to be executed on this chain\n     * @param xsub  An xchain submisison, including an attestation root w/ validator signatures,\n     *              and a block header and message batch, proven against the attestation root.\n     */\n    function xsubmit(XTypes.Submission calldata xsub) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"xstake/lib/omni/contracts/core/src/interfaces/IOmniPortal.sol": {
				"IOmniPortal": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "destChainId",
									"type": "uint64"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "shardId",
									"type": "uint64"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "offset",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "gasLimit",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fees",
									"type": "uint256"
								}
							],
							"name": "XMsg",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sourceChainId",
									"type": "uint64"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "shardId",
									"type": "uint64"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "offset",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gasUsed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "relayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "error",
									"type": "bytes"
								}
							],
							"name": "XReceipt",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChainId",
									"type": "uint64"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "uint64",
									"name": "gasLimit",
									"type": "uint64"
								}
							],
							"name": "feeFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "srcChainId",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "shardId",
									"type": "uint64"
								}
							],
							"name": "inXBlockOffset",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "srcChainId",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "shardId",
									"type": "uint64"
								}
							],
							"name": "inXMsgOffset",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChainId",
									"type": "uint64"
								}
							],
							"name": "isSupportedDest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "shardId",
									"type": "uint64"
								}
							],
							"name": "isSupportedShard",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isXCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "omniChainId",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChainId",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "shardId",
									"type": "uint64"
								}
							],
							"name": "outXMsgOffset",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChainId",
									"type": "uint64"
								},
								{
									"internalType": "uint8",
									"name": "conf",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "uint64",
									"name": "gasLimit",
									"type": "uint64"
								}
							],
							"name": "xcall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xmsg",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint64",
											"name": "sourceChainId",
											"type": "uint64"
										},
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										}
									],
									"internalType": "struct XTypes.MsgContext",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xmsgMaxDataSize",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xmsgMaxGasLimit",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xmsgMinGasLimit",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xreceiptMaxErrorSize",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "attestationRoot",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "validatorSetId",
											"type": "uint64"
										},
										{
											"components": [
												{
													"internalType": "uint64",
													"name": "sourceChainId",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "consensusChainId",
													"type": "uint64"
												},
												{
													"internalType": "uint8",
													"name": "confLevel",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "offset",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "sourceBlockHeight",
													"type": "uint64"
												},
												{
													"internalType": "bytes32",
													"name": "sourceBlockHash",
													"type": "bytes32"
												}
											],
											"internalType": "struct XTypes.BlockHeader",
											"name": "blockHeader",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "uint64",
													"name": "destChainId",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "shardId",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "offset",
													"type": "uint64"
												},
												{
													"internalType": "address",
													"name": "sender",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "to",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "data",
													"type": "bytes"
												},
												{
													"internalType": "uint64",
													"name": "gasLimit",
													"type": "uint64"
												}
											],
											"internalType": "struct XTypes.Msg[]",
											"name": "msgs",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32[]",
											"name": "proof",
											"type": "bytes32[]"
										},
										{
											"internalType": "bool[]",
											"name": "proofFlags",
											"type": "bool[]"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "validatorAddr",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "signature",
													"type": "bytes"
												}
											],
											"internalType": "struct XTypes.SigTuple[]",
											"name": "signatures",
											"type": "tuple[]"
										}
									],
									"internalType": "struct XTypes.Submission",
									"name": "xsub",
									"type": "tuple"
								}
							],
							"name": "xsubmit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"XMsg(uint64,uint64,uint64,address,address,bytes,uint64,uint256)": {
								"params": {
									"data": "Encoded function calldata",
									"destChainId": "Destination chain ID",
									"fees": "Fees paid for the xcall",
									"gasLimit": "Gas limit for execution on destination chain",
									"offset": "Offset this XMsg in the source -> dest XStream",
									"sender": "msg.sender of the source xcall",
									"to": "Address of the contract to call on the destination chain"
								}
							},
							"XReceipt(uint64,uint64,uint64,uint256,address,bool,bytes)": {
								"params": {
									"error": "Result of XMsg execution, if success == false. Limited to                      xreceiptMaxErrorBytes(). Empty if success == true.",
									"gasUsed": "Gas used in execution of the XMsg",
									"offset": "Offset the XMsg in the source -> dest XStream",
									"relayer": "Address of the relayer who submitted the XMsg",
									"shardId": "Shard ID of the XStream (first byte is the confirmation level)",
									"sourceChainId": "Source chain ID",
									"success": "Whether the execution succeeded"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"feeFor(uint64,bytes,uint64)": {
								"params": {
									"data": "Encoded function calldata",
									"destChainId": "Destination chain ID",
									"gasLimit": "Execution gas limit, enforced on destination chain"
								}
							},
							"xcall(uint64,uint8,address,bytes,uint64)": {
								"params": {
									"conf": "Confirmation level;",
									"data": "ABI Encoded function calldata",
									"destChainId": "Destination chain ID",
									"gasLimit": "Execution gas limit, enforced on destination chain",
									"to": "Address of contract to call on destination chain"
								}
							},
							"xsubmit((bytes32,uint64,(uint64,uint64,uint8,uint64,uint64,bytes32),(uint64,uint64,uint64,address,address,bytes,uint64)[],bytes32[],bool[],(address,bytes)[]))": {
								"params": {
									"xsub": "An xchain submisison, including an attestation root w/ validator signatures,              and a block header and message batch, proven against the attestation root."
								}
							}
						},
						"title": "IOmniPortal",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"chainId()": "9a8a0592",
							"feeFor(uint64,bytes,uint64)": "8dd9523c",
							"feeOracle()": "500b19e7",
							"inXBlockOffset(uint64,uint64)": "3fd3b15e",
							"inXMsgOffset(uint64,uint64)": "d051c97d",
							"isSupportedDest(uint64)": "24278bbe",
							"isSupportedShard(uint64)": "aaf1bc97",
							"isXCall()": "55e2448e",
							"omniChainId()": "110ff5f1",
							"outXMsgOffset(uint64,uint64)": "3aa87330",
							"xcall(uint64,uint8,address,bytes,uint64)": "c21dda4f",
							"xmsg()": "2f32700e",
							"xmsgMaxDataSize()": "b4d5afd1",
							"xmsgMaxGasLimit()": "cf84c818",
							"xmsgMinGasLimit()": "78fe5307",
							"xreceiptMaxErrorSize()": "c26dfc05",
							"xsubmit((bytes32,uint64,(uint64,uint64,uint8,uint64,uint64,bytes32),(uint64,uint64,uint64,address,address,bytes,uint64)[],bytes32[],bool[],(address,bytes)[]))": "66a1eaf3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"destChainId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"shardId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"XMsg\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sourceChainId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"shardId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"error\",\"type\":\"bytes\"}],\"name\":\"XReceipt\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"}],\"name\":\"feeFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"srcChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"shardId\",\"type\":\"uint64\"}],\"name\":\"inXBlockOffset\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"srcChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"shardId\",\"type\":\"uint64\"}],\"name\":\"inXMsgOffset\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainId\",\"type\":\"uint64\"}],\"name\":\"isSupportedDest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"shardId\",\"type\":\"uint64\"}],\"name\":\"isSupportedShard\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isXCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"omniChainId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"shardId\",\"type\":\"uint64\"}],\"name\":\"outXMsgOffset\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"conf\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"}],\"name\":\"xcall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xmsg\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"sourceChainId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"internalType\":\"struct XTypes.MsgContext\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xmsgMaxDataSize\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xmsgMaxGasLimit\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xmsgMinGasLimit\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xreceiptMaxErrorSize\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"attestationRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"validatorSetId\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"sourceChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"consensusChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"confLevel\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"sourceBlockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"sourceBlockHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct XTypes.BlockHeader\",\"name\":\"blockHeader\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"destChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"shardId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"}],\"internalType\":\"struct XTypes.Msg[]\",\"name\":\"msgs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"proofFlags\",\"type\":\"bool[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"validatorAddr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct XTypes.SigTuple[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"}],\"internalType\":\"struct XTypes.Submission\",\"name\":\"xsub\",\"type\":\"tuple\"}],\"name\":\"xsubmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"XMsg(uint64,uint64,uint64,address,address,bytes,uint64,uint256)\":{\"params\":{\"data\":\"Encoded function calldata\",\"destChainId\":\"Destination chain ID\",\"fees\":\"Fees paid for the xcall\",\"gasLimit\":\"Gas limit for execution on destination chain\",\"offset\":\"Offset this XMsg in the source -> dest XStream\",\"sender\":\"msg.sender of the source xcall\",\"to\":\"Address of the contract to call on the destination chain\"}},\"XReceipt(uint64,uint64,uint64,uint256,address,bool,bytes)\":{\"params\":{\"error\":\"Result of XMsg execution, if success == false. Limited to                      xreceiptMaxErrorBytes(). Empty if success == true.\",\"gasUsed\":\"Gas used in execution of the XMsg\",\"offset\":\"Offset the XMsg in the source -> dest XStream\",\"relayer\":\"Address of the relayer who submitted the XMsg\",\"shardId\":\"Shard ID of the XStream (first byte is the confirmation level)\",\"sourceChainId\":\"Source chain ID\",\"success\":\"Whether the execution succeeded\"}}},\"kind\":\"dev\",\"methods\":{\"feeFor(uint64,bytes,uint64)\":{\"params\":{\"data\":\"Encoded function calldata\",\"destChainId\":\"Destination chain ID\",\"gasLimit\":\"Execution gas limit, enforced on destination chain\"}},\"xcall(uint64,uint8,address,bytes,uint64)\":{\"params\":{\"conf\":\"Confirmation level;\",\"data\":\"ABI Encoded function calldata\",\"destChainId\":\"Destination chain ID\",\"gasLimit\":\"Execution gas limit, enforced on destination chain\",\"to\":\"Address of contract to call on destination chain\"}},\"xsubmit((bytes32,uint64,(uint64,uint64,uint8,uint64,uint64,bytes32),(uint64,uint64,uint64,address,address,bytes,uint64)[],bytes32[],bool[],(address,bytes)[]))\":{\"params\":{\"xsub\":\"An xchain submisison, including an attestation root w/ validator signatures,              and a block header and message batch, proven against the attestation root.\"}}},\"title\":\"IOmniPortal\",\"version\":1},\"userdoc\":{\"events\":{\"XMsg(uint64,uint64,uint64,address,address,bytes,uint64,uint256)\":{\"notice\":\"Emitted when an xcall is made to a contract on another chain\"},\"XReceipt(uint64,uint64,uint64,uint256,address,bool,bytes)\":{\"notice\":\"Emitted when an XMsg is executed on its destination chain\"}},\"kind\":\"user\",\"methods\":{\"chainId()\":{\"notice\":\"Returns the chain ID of the chain to which this portal is deployed\"},\"feeFor(uint64,bytes,uint64)\":{\"notice\":\"Calculate the fee for calling a contract on another chain         Fees denominated in wei.\"},\"feeOracle()\":{\"notice\":\"Returns the fee oracle address\"},\"inXBlockOffset(uint64,uint64)\":{\"notice\":\"Returns the offset of the last inbound XBlock received from srcChainId in shardId\"},\"inXMsgOffset(uint64,uint64)\":{\"notice\":\"Returns the offset of the last inbound XMsg received from srcChainId in shardId\"},\"isSupportedDest(uint64)\":{\"notice\":\"Returns the destination chain ID is supported by this portal\"},\"isSupportedShard(uint64)\":{\"notice\":\"Returns the shard ID is supported by this portal\"},\"isXCall()\":{\"notice\":\"Returns true the current transaction is an xcall, false otherwise\"},\"omniChainId()\":{\"notice\":\"Returns the chain ID of Omni's EVM execution chain\"},\"outXMsgOffset(uint64,uint64)\":{\"notice\":\"Returns the offset of the last outbound XMsg sent to destChainId in shardId\"},\"xcall(uint64,uint8,address,bytes,uint64)\":{\"notice\":\"Call a contract on another chain.\"},\"xmsg()\":{\"notice\":\"Returns the current XMsg being executed via this portal.          - xmsg().sourceChainId  Chain ID of the source xcall          - xmsg().sender         msg.sender of the source xcall         If no XMsg is being executed, all fields will be zero.          - xmsg().sourceChainId  == 0          - xmsg().sender         == address(0)\"},\"xmsgMaxDataSize()\":{\"notice\":\"Maximum number of bytes allowed in xmsg data\"},\"xmsgMaxGasLimit()\":{\"notice\":\"Maximum allowed xmsg gas limit\"},\"xmsgMinGasLimit()\":{\"notice\":\"Minimum allowed xmsg gas limit\"},\"xreceiptMaxErrorSize()\":{\"notice\":\"Maxium number of bytes allowed in xreceipt result\"},\"xsubmit((bytes32,uint64,(uint64,uint64,uint8,uint64,uint64,bytes32),(uint64,uint64,uint64,address,address,bytes,uint64)[],bytes32[],bool[],(address,bytes)[]))\":{\"notice\":\"Submit a batch of XMsgs to be executed on this chain\"}},\"notice\":\"The OmniPortal is the on-chain interface to Omni's cross-chain         messaging protocol. It is used to initiate and execute cross-chain calls.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"xstake/lib/omni/contracts/core/src/interfaces/IOmniPortal.sol\":\"IOmniPortal\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xstake/lib/omni/contracts/core/src/interfaces/IOmniPortal.sol\":{\"keccak256\":\"0x8010a586e7abcf478044249c104a6f01c1c6830b96f14273289e01303163342d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ac0f21a8ef960f9752f9dca194e53eb7073f66c9124ba86d827087b5e9ce6656\",\"dweb:/ipfs/QmT1UYic7cJg58iEN8pNF6CbhXyYiR16G4ihB9NsDwZpkG\"]},\"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol\":{\"keccak256\":\"0x1a670aafb257d8d16c08b03b70a9ba2e4b9f4755198f52d14f5c8e6c5dc3b96a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7513bb80e3db2dbaccb687304988f3992f7097b16967f1844acb4038e833e511\",\"dweb:/ipfs/QmYBPaJ3PWnxxKywRVeZZ14YWH7bSMcKuUCPhcfjk8PENT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"XMsg(uint64,uint64,uint64,address,address,bytes,uint64,uint256)": {
								"notice": "Emitted when an xcall is made to a contract on another chain"
							},
							"XReceipt(uint64,uint64,uint64,uint256,address,bool,bytes)": {
								"notice": "Emitted when an XMsg is executed on its destination chain"
							}
						},
						"kind": "user",
						"methods": {
							"chainId()": {
								"notice": "Returns the chain ID of the chain to which this portal is deployed"
							},
							"feeFor(uint64,bytes,uint64)": {
								"notice": "Calculate the fee for calling a contract on another chain         Fees denominated in wei."
							},
							"feeOracle()": {
								"notice": "Returns the fee oracle address"
							},
							"inXBlockOffset(uint64,uint64)": {
								"notice": "Returns the offset of the last inbound XBlock received from srcChainId in shardId"
							},
							"inXMsgOffset(uint64,uint64)": {
								"notice": "Returns the offset of the last inbound XMsg received from srcChainId in shardId"
							},
							"isSupportedDest(uint64)": {
								"notice": "Returns the destination chain ID is supported by this portal"
							},
							"isSupportedShard(uint64)": {
								"notice": "Returns the shard ID is supported by this portal"
							},
							"isXCall()": {
								"notice": "Returns true the current transaction is an xcall, false otherwise"
							},
							"omniChainId()": {
								"notice": "Returns the chain ID of Omni's EVM execution chain"
							},
							"outXMsgOffset(uint64,uint64)": {
								"notice": "Returns the offset of the last outbound XMsg sent to destChainId in shardId"
							},
							"xcall(uint64,uint8,address,bytes,uint64)": {
								"notice": "Call a contract on another chain."
							},
							"xmsg()": {
								"notice": "Returns the current XMsg being executed via this portal.          - xmsg().sourceChainId  Chain ID of the source xcall          - xmsg().sender         msg.sender of the source xcall         If no XMsg is being executed, all fields will be zero.          - xmsg().sourceChainId  == 0          - xmsg().sender         == address(0)"
							},
							"xmsgMaxDataSize()": {
								"notice": "Maximum number of bytes allowed in xmsg data"
							},
							"xmsgMaxGasLimit()": {
								"notice": "Maximum allowed xmsg gas limit"
							},
							"xmsgMinGasLimit()": {
								"notice": "Minimum allowed xmsg gas limit"
							},
							"xreceiptMaxErrorSize()": {
								"notice": "Maxium number of bytes allowed in xreceipt result"
							},
							"xsubmit((bytes32,uint64,(uint64,uint64,uint8,uint64,uint64,bytes32),(uint64,uint64,uint64,address,address,bytes,uint64)[],bytes32[],bool[],(address,bytes)[]))": {
								"notice": "Submit a batch of XMsgs to be executed on this chain"
							}
						},
						"notice": "The OmniPortal is the on-chain interface to Omni's cross-chain         messaging protocol. It is used to initiate and execute cross-chain calls.",
						"version": 1
					}
				}
			},
			"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol": {
				"ConfLevel": {
					"abi": [],
					"devdoc": {
						"details": "We prefer explicit constants over Enums, because we want uint8 values to start at 1, not 0, as they do in      lib/xchain/types.go, such that 0 can represent \"unset\". Note only latest and finalized levels are supported      on-chain.",
						"kind": "dev",
						"methods": {},
						"title": "ConfLevel",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":422:1118  library ConfLevel {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":422:1118  library ConfLevel {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f5743c6e0abe7e7c1758885be85087d3e6a044aa84730bd649bce08ceb20993464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f5743c6e0abe7e7c1758885be85087d3e6a044aa84730bd649bce08ceb20993464736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH21 0x3C6E0ABE7E7C1758885BE85087D3E6A044AA84730B 0xD6 BLOBHASH 0xBC 0xE0 DUP13 0xEB KECCAK256 SWAP10 CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "422:696:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;422:696:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f5743c6e0abe7e7c1758885be85087d3e6a044aa84730bd649bce08ceb20993464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH21 0x3C6E0ABE7E7C1758885BE85087D3E6A044AA84730B 0xD6 BLOBHASH 0xBC 0xE0 DUP13 0xEB KECCAK256 SWAP10 CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "422:696:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"isValid(uint8)": "infinite",
								"toBroadcastShard(uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f5743c6e0abe7e7c1758885be85087d3e6a044aa84730bd649bce08ceb20993464736f6c634300081a0033",
									".code": [
										{
											"begin": 422,
											"end": 1118,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"xstake/lib/omni/contracts/core/src/interfaces/IOmniPortal.sol",
								"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol",
								"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol",
								"xstake/lib/omni/contracts/core/src/pkg/XApp.sol",
								"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol",
								"xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol",
								"xstake/src/wstf token launch/contracts/token/ERC20/IERC20.sol",
								"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol",
								"xstake/src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol",
								"xstake/src/wstf token launch/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"We prefer explicit constants over Enums, because we want uint8 values to start at 1, not 0, as they do in      lib/xchain/types.go, such that 0 can represent \\\"unset\\\". Note only latest and finalized levels are supported      on-chain.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ConfLevel\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"XMsg confirmation levels. Matches ConfLevels in lib/xchain/types.go\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":\"ConfLevel\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":{\"keccak256\":\"0xfce1f35d6bbec9bb0729a7322657cec8f1f7a8a25ae6318531b08ad928f58c32\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://cb8e1467528079ac0ff70e86207f1b4d25bbb236e5830fab9991c1c76b6ca623\",\"dweb:/ipfs/QmawXHbFRrPppPAG45mHRnCWJuQMYhe534CoicW4pF43EZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "XMsg confirmation levels. Matches ConfLevels in lib/xchain/types.go",
						"version": 1
					}
				}
			},
			"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol": {
				"XTypes": {
					"abi": [],
					"devdoc": {
						"details": "Defines xchain types, core to Omni's xchain messaging protocol. These      types mirror those defined in omni/lib/xchain/types.go.",
						"kind": "dev",
						"methods": {},
						"title": "XTypes",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol\":234:4303  library XTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol\":234:4303  library XTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203bfffdf73c921cf5e558326b3a5715b9cf4920c8147f078f12be716ed527066764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203bfffdf73c921cf5e558326b3a5715b9cf4920c8147f078f12be716ed527066764736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE SELFDESTRUCT REVERT 0xF7 EXTCODECOPY SWAP3 SHR CREATE2 0xE5 PC ORIGIN PUSH12 0x3A5715B9CF4920C8147F078F SLT 0xBE PUSH18 0x6ED527066764736F6C634300081A00330000 ",
							"sourceMap": "234:4069:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;234:4069:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203bfffdf73c921cf5e558326b3a5715b9cf4920c8147f078f12be716ed527066764736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE SELFDESTRUCT REVERT 0xF7 EXTCODECOPY SWAP3 SHR CREATE2 0xE5 PC ORIGIN PUSH12 0x3A5715B9CF4920C8147F078F SLT 0xBE PUSH18 0x6ED527066764736F6C634300081A00330000 ",
							"sourceMap": "234:4069:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203bfffdf73c921cf5e558326b3a5715b9cf4920c8147f078f12be716ed527066764736f6c634300081a0033",
									".code": [
										{
											"begin": 234,
											"end": 4303,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"xstake/lib/omni/contracts/core/src/interfaces/IOmniPortal.sol",
								"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol",
								"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol",
								"xstake/lib/omni/contracts/core/src/pkg/XApp.sol",
								"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol",
								"xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol",
								"xstake/src/wstf token launch/contracts/token/ERC20/IERC20.sol",
								"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol",
								"xstake/src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol",
								"xstake/src/wstf token launch/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Defines xchain types, core to Omni's xchain messaging protocol. These      types mirror those defined in omni/lib/xchain/types.go.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"XTypes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol\":\"XTypes\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol\":{\"keccak256\":\"0x1a670aafb257d8d16c08b03b70a9ba2e4b9f4755198f52d14f5c8e6c5dc3b96a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7513bb80e3db2dbaccb687304988f3992f7097b16967f1844acb4038e833e511\",\"dweb:/ipfs/QmYBPaJ3PWnxxKywRVeZZ14YWH7bSMcKuUCPhcfjk8PENT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"xstake/lib/omni/contracts/core/src/pkg/XApp.sol": {
				"XApp": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "conf",
									"type": "uint8"
								}
							],
							"name": "DefaultConfLevelSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "omni",
									"type": "address"
								}
							],
							"name": "OmniPortalSet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "defaultConfLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "omni",
							"outputs": [
								{
									"internalType": "contract IOmniPortal",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"DefaultConfLevelSet(uint8)": {
								"params": {
									"conf": "Confirmation level"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "XApp",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"defaultConfLevel()": "74eeb847",
							"omni()": "39acf9f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"conf\",\"type\":\"uint8\"}],\"name\":\"DefaultConfLevelSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"omni\",\"type\":\"address\"}],\"name\":\"OmniPortalSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"defaultConfLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"omni\",\"outputs\":[{\"internalType\":\"contract IOmniPortal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DefaultConfLevelSet(uint8)\":{\"params\":{\"conf\":\"Confirmation level\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"XApp\",\"version\":1},\"userdoc\":{\"events\":{\"DefaultConfLevelSet(uint8)\":{\"notice\":\"Emitted when the default confirmation level is set\"},\"OmniPortalSet(address)\":{\"notice\":\"Emitted when the OmniPortal contract address is set\"}},\"kind\":\"user\",\"methods\":{\"defaultConfLevel()\":{\"notice\":\"Default confirmation level for xcalls\"},\"omni()\":{\"notice\":\"The OmniPortal contract\"}},\"notice\":\"Base contract for Omni cross-chain applications\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"xstake/lib/omni/contracts/core/src/pkg/XApp.sol\":\"XApp\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xstake/lib/omni/contracts/core/src/interfaces/IOmniPortal.sol\":{\"keccak256\":\"0x8010a586e7abcf478044249c104a6f01c1c6830b96f14273289e01303163342d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ac0f21a8ef960f9752f9dca194e53eb7073f66c9124ba86d827087b5e9ce6656\",\"dweb:/ipfs/QmT1UYic7cJg58iEN8pNF6CbhXyYiR16G4ihB9NsDwZpkG\"]},\"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":{\"keccak256\":\"0xfce1f35d6bbec9bb0729a7322657cec8f1f7a8a25ae6318531b08ad928f58c32\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://cb8e1467528079ac0ff70e86207f1b4d25bbb236e5830fab9991c1c76b6ca623\",\"dweb:/ipfs/QmawXHbFRrPppPAG45mHRnCWJuQMYhe534CoicW4pF43EZ\"]},\"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol\":{\"keccak256\":\"0x1a670aafb257d8d16c08b03b70a9ba2e4b9f4755198f52d14f5c8e6c5dc3b96a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7513bb80e3db2dbaccb687304988f3992f7097b16967f1844acb4038e833e511\",\"dweb:/ipfs/QmYBPaJ3PWnxxKywRVeZZ14YWH7bSMcKuUCPhcfjk8PENT\"]},\"xstake/lib/omni/contracts/core/src/pkg/XApp.sol\":{\"keccak256\":\"0x05f07a7701a5c34ecac52efcb76856b995fd655d97b4360118cb8ccb2ae49a8f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://fb3d62b18f80c88d04eb0489194be62be66d09390d75b1b4f18faa5df247959a\",\"dweb:/ipfs/QmZPmYoUw4BBfVBbfeBPcRHwcnHjSf9XJa7iu7CmfjUg4T\"]},\"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":{\"keccak256\":\"0xf2344afc8b2e59b84582a80db601c7550b8b96b2a0c55cc10dc734ff57d0e959\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://72ebf8503ca6283b1002be4f2d9309dafe5082514820dae3268115b5501c08f3\",\"dweb:/ipfs/QmTTbmECQD7p8mBjhgwPS2mpZkW8iQvKdaBFRaunw1BxKJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "xstake/lib/omni/contracts/core/src/pkg/XApp.sol:XApp",
								"label": "omni",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IOmniPortal)175"
							},
							{
								"astId": 352,
								"contract": "xstake/lib/omni/contracts/core/src/pkg/XApp.sol:XApp",
								"label": "defaultConfLevel",
								"offset": 20,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 356,
								"contract": "xstake/lib/omni/contracts/core/src/pkg/XApp.sol:XApp",
								"label": "xmsg",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(MsgContext)245_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IOmniPortal)175": {
								"encoding": "inplace",
								"label": "contract IOmniPortal",
								"numberOfBytes": "20"
							},
							"t_struct(MsgContext)245_storage": {
								"encoding": "inplace",
								"label": "struct XTypes.MsgContext",
								"members": [
									{
										"astId": 242,
										"contract": "xstake/lib/omni/contracts/core/src/pkg/XApp.sol:XApp",
										"label": "sourceChainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 244,
										"contract": "xstake/lib/omni/contracts/core/src/pkg/XApp.sol:XApp",
										"label": "sender",
										"offset": 8,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"DefaultConfLevelSet(uint8)": {
								"notice": "Emitted when the default confirmation level is set"
							},
							"OmniPortalSet(address)": {
								"notice": "Emitted when the OmniPortal contract address is set"
							}
						},
						"kind": "user",
						"methods": {
							"defaultConfLevel()": {
								"notice": "Default confirmation level for xcalls"
							},
							"omni()": {
								"notice": "The OmniPortal contract"
							}
						},
						"notice": "Base contract for Omni cross-chain applications",
						"version": 1
					}
				}
			},
			"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol": {
				"XAppBase": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "conf",
									"type": "uint8"
								}
							],
							"name": "DefaultConfLevelSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "omni",
									"type": "address"
								}
							],
							"name": "OmniPortalSet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "defaultConfLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "omni",
							"outputs": [
								{
									"internalType": "contract IOmniPortal",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"DefaultConfLevelSet(uint8)": {
								"params": {
									"conf": "Confirmation level"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "XAppBase",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"defaultConfLevel()": "74eeb847",
							"omni()": "39acf9f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"conf\",\"type\":\"uint8\"}],\"name\":\"DefaultConfLevelSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"omni\",\"type\":\"address\"}],\"name\":\"OmniPortalSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"defaultConfLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"omni\",\"outputs\":[{\"internalType\":\"contract IOmniPortal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DefaultConfLevelSet(uint8)\":{\"params\":{\"conf\":\"Confirmation level\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"XAppBase\",\"version\":1},\"userdoc\":{\"events\":{\"DefaultConfLevelSet(uint8)\":{\"notice\":\"Emitted when the default confirmation level is set\"},\"OmniPortalSet(address)\":{\"notice\":\"Emitted when the OmniPortal contract address is set\"}},\"kind\":\"user\",\"methods\":{\"defaultConfLevel()\":{\"notice\":\"Default confirmation level for xcalls\"},\"omni()\":{\"notice\":\"The OmniPortal contract\"}},\"notice\":\"Shared XApp storage and logic.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":\"XAppBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xstake/lib/omni/contracts/core/src/interfaces/IOmniPortal.sol\":{\"keccak256\":\"0x8010a586e7abcf478044249c104a6f01c1c6830b96f14273289e01303163342d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ac0f21a8ef960f9752f9dca194e53eb7073f66c9124ba86d827087b5e9ce6656\",\"dweb:/ipfs/QmT1UYic7cJg58iEN8pNF6CbhXyYiR16G4ihB9NsDwZpkG\"]},\"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":{\"keccak256\":\"0xfce1f35d6bbec9bb0729a7322657cec8f1f7a8a25ae6318531b08ad928f58c32\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://cb8e1467528079ac0ff70e86207f1b4d25bbb236e5830fab9991c1c76b6ca623\",\"dweb:/ipfs/QmawXHbFRrPppPAG45mHRnCWJuQMYhe534CoicW4pF43EZ\"]},\"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol\":{\"keccak256\":\"0x1a670aafb257d8d16c08b03b70a9ba2e4b9f4755198f52d14f5c8e6c5dc3b96a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7513bb80e3db2dbaccb687304988f3992f7097b16967f1844acb4038e833e511\",\"dweb:/ipfs/QmYBPaJ3PWnxxKywRVeZZ14YWH7bSMcKuUCPhcfjk8PENT\"]},\"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":{\"keccak256\":\"0xf2344afc8b2e59b84582a80db601c7550b8b96b2a0c55cc10dc734ff57d0e959\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://72ebf8503ca6283b1002be4f2d9309dafe5082514820dae3268115b5501c08f3\",\"dweb:/ipfs/QmTTbmECQD7p8mBjhgwPS2mpZkW8iQvKdaBFRaunw1BxKJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol:XAppBase",
								"label": "omni",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IOmniPortal)175"
							},
							{
								"astId": 352,
								"contract": "xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol:XAppBase",
								"label": "defaultConfLevel",
								"offset": 20,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 356,
								"contract": "xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol:XAppBase",
								"label": "xmsg",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(MsgContext)245_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IOmniPortal)175": {
								"encoding": "inplace",
								"label": "contract IOmniPortal",
								"numberOfBytes": "20"
							},
							"t_struct(MsgContext)245_storage": {
								"encoding": "inplace",
								"label": "struct XTypes.MsgContext",
								"members": [
									{
										"astId": 242,
										"contract": "xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol:XAppBase",
										"label": "sourceChainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 244,
										"contract": "xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol:XAppBase",
										"label": "sender",
										"offset": 8,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"DefaultConfLevelSet(uint8)": {
								"notice": "Emitted when the default confirmation level is set"
							},
							"OmniPortalSet(address)": {
								"notice": "Emitted when the OmniPortal contract address is set"
							}
						},
						"kind": "user",
						"methods": {
							"defaultConfLevel()": {
								"notice": "Default confirmation level for xcalls"
							},
							"omni()": {
								"notice": "The OmniPortal contract"
							}
						},
						"notice": "Shared XApp storage and logic.",
						"version": 1
					}
				}
			},
			"xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"xstake/src/wstf token launch/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xstake/src/wstf token launch/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xstake/src/wstf token launch/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol": {
				"OmniERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "conf",
									"type": "uint8"
								}
							],
							"name": "DefaultConfLevelSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "omni",
									"type": "address"
								}
							],
							"name": "OmniPortalSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultConfLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "omni",
							"outputs": [
								{
									"internalType": "contract IOmniPortal",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "receiveTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChain",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "destToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"DefaultConfLevelSet(uint8)": {
								"params": {
									"conf": "Confirmation level"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"defaultConfLevel()": "74eeb847",
							"name()": "06fdde03",
							"omni()": "39acf9f1",
							"receiveTransfer(address,address,uint256)": "4a536a06",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transfer(uint64,address,address,uint256)": "bdb3c8e6",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"conf\",\"type\":\"uint8\"}],\"name\":\"DefaultConfLevelSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"omni\",\"type\":\"address\"}],\"name\":\"OmniPortalSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultConfLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"omni\",\"outputs\":[{\"internalType\":\"contract IOmniPortal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"receiveTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChain\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"destToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DefaultConfLevelSet(uint8)\":{\"params\":{\"conf\":\"Confirmation level\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DefaultConfLevelSet(uint8)\":{\"notice\":\"Emitted when the default confirmation level is set\"},\"OmniPortalSet(address)\":{\"notice\":\"Emitted when the OmniPortal contract address is set\"}},\"kind\":\"user\",\"methods\":{\"defaultConfLevel()\":{\"notice\":\"Default confirmation level for xcalls\"},\"omni()\":{\"notice\":\"The OmniPortal contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":\"OmniERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xstake/lib/omni/contracts/core/src/interfaces/IOmniPortal.sol\":{\"keccak256\":\"0x8010a586e7abcf478044249c104a6f01c1c6830b96f14273289e01303163342d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ac0f21a8ef960f9752f9dca194e53eb7073f66c9124ba86d827087b5e9ce6656\",\"dweb:/ipfs/QmT1UYic7cJg58iEN8pNF6CbhXyYiR16G4ihB9NsDwZpkG\"]},\"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":{\"keccak256\":\"0xfce1f35d6bbec9bb0729a7322657cec8f1f7a8a25ae6318531b08ad928f58c32\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://cb8e1467528079ac0ff70e86207f1b4d25bbb236e5830fab9991c1c76b6ca623\",\"dweb:/ipfs/QmawXHbFRrPppPAG45mHRnCWJuQMYhe534CoicW4pF43EZ\"]},\"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol\":{\"keccak256\":\"0x1a670aafb257d8d16c08b03b70a9ba2e4b9f4755198f52d14f5c8e6c5dc3b96a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7513bb80e3db2dbaccb687304988f3992f7097b16967f1844acb4038e833e511\",\"dweb:/ipfs/QmYBPaJ3PWnxxKywRVeZZ14YWH7bSMcKuUCPhcfjk8PENT\"]},\"xstake/lib/omni/contracts/core/src/pkg/XApp.sol\":{\"keccak256\":\"0x05f07a7701a5c34ecac52efcb76856b995fd655d97b4360118cb8ccb2ae49a8f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://fb3d62b18f80c88d04eb0489194be62be66d09390d75b1b4f18faa5df247959a\",\"dweb:/ipfs/QmZPmYoUw4BBfVBbfeBPcRHwcnHjSf9XJa7iu7CmfjUg4T\"]},\"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":{\"keccak256\":\"0xf2344afc8b2e59b84582a80db601c7550b8b96b2a0c55cc10dc734ff57d0e959\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://72ebf8503ca6283b1002be4f2d9309dafe5082514820dae3268115b5501c08f3\",\"dweb:/ipfs/QmTTbmECQD7p8mBjhgwPS2mpZkW8iQvKdaBFRaunw1BxKJ\"]},\"xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"xstake/src/wstf token launch/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":{\"keccak256\":\"0x68fc61e71067c6c1162ae4febeb1aea4aac92b1be7e012afcd3ad94eadcfbacb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18c8002a8a5d0e7f9aacbf319e729be3ea09a62b599aa22bbcdf2060d6b3c2c9\",\"dweb:/ipfs/QmUFhg9KPDZFbzMKr9AzJmGXD1X9gCkYPhz8equEPFh9M6\"]},\"xstake/src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"xstake/src/wstf token launch/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "omni",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IOmniPortal)175"
							},
							{
								"astId": 352,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "defaultConfLevel",
								"offset": 20,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 356,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "xmsg",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(MsgContext)245_storage"
							},
							{
								"astId": 824,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 830,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 832,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 834,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 836,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IOmniPortal)175": {
								"encoding": "inplace",
								"label": "contract IOmniPortal",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(MsgContext)245_storage": {
								"encoding": "inplace",
								"label": "struct XTypes.MsgContext",
								"members": [
									{
										"astId": 242,
										"contract": "xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
										"label": "sourceChainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 244,
										"contract": "xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
										"label": "sender",
										"offset": 8,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"DefaultConfLevelSet(uint8)": {
								"notice": "Emitted when the default confirmation level is set"
							},
							"OmniPortalSet(address)": {
								"notice": "Emitted when the OmniPortal contract address is set"
							}
						},
						"kind": "user",
						"methods": {
							"defaultConfLevel()": {
								"notice": "Default confirmation level for xcalls"
							},
							"omni()": {
								"notice": "The OmniPortal contract"
							}
						},
						"version": 1
					}
				}
			},
			"xstake/src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xstake/src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xstake/src/wstf token launch/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"xstake/src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol": {
				"MyOmniToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "initialMinterAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "ismainChain",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "conf",
									"type": "uint8"
								}
							],
							"name": "DefaultConfLevelSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "omni",
									"type": "address"
								}
							],
							"name": "OmniPortalSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultConfLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "omni",
							"outputs": [
								{
									"internalType": "contract IOmniPortal",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "receiveTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChain",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "destToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"DefaultConfLevelSet(uint8)": {
								"params": {
									"conf": "Confirmation level"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":128:1210  contract MyOmniToken is OmniERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":164:225  address omniPortal=0xcB60A0451831E4865bC49f41F9C67665Fc9b75C3 */\n  0x07\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":183:225  0xcB60A0451831E4865bC49f41F9C67665Fc9b75C3 */\n  0xcb60a0451831e4865bc49f41f9c67665fc9b75c3\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":164:225  address omniPortal=0xcB60A0451831E4865bC49f41F9C67665Fc9b75C3 */\n  or\n  swap1\n  sstore\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":231:698  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":430:440  omniPortal */\n  sload(0x07)\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":414:419  name_ */\n  dup6\n  swap1\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":421:428  symbol_ */\n  dup6\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":430:440  omniPortal */\n  and\n  dup1\n  0x01\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XApp.sol\":296:317  _setOmniPortal(omni_) */\n  tag_8\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":430:440  omniPortal */\n  dup3\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XApp.sol\":296:310  _setOmniPortal */\n  tag_9\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XApp.sol\":296:317  _setOmniPortal(omni_) */\n  jump\t// in\ntag_8:\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XApp.sol\":327:366  _setDefaultConfLevel(defaultConfLevel_) */\n  tag_10\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XApp.sol\":348:365  defaultConfLevel_ */\n  dup2\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XApp.sol\":327:347  _setDefaultConfLevel */\n  tag_11\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XApp.sol\":327:366  _setDefaultConfLevel(defaultConfLevel_) */\n  jump\t// in\ntag_10:\n  pop\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":895:900  _name */\n  0x05\n  swap1\n  pop\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":895:908  _name = name_ */\n  tag_13\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":903:908  name_ */\n  dup5\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":895:900  _name */\n  dup3\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":895:908  _name = name_ */\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":918:925  _symbol */\n  0x06\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":918:935  _symbol = symbol_ */\n  tag_15\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":928:935  symbol_ */\n  dup4\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":918:925  _symbol */\n  dup3\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":918:935  _symbol = symbol_ */\n  tag_14\n  jump\t// in\ntag_15:\n  pop\n  pop\n  pop\n  pop\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":534:552  ismainChain== true */\n  dup1\n  iszero\n  iszero\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":548:552  true */\n  0x01\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":534:552  ismainChain== true */\n  sub\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":531:692  if(ismainChain== true){... */\n  tag_17\n  jumpi\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":563:605  _mint(initialMinterAddress, initialSupply) */\n  tag_18\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":569:589  initialMinterAddress */\n  dup3\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":591:604  initialSupply */\n  dup5\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":563:568  _mint */\n  tag_19\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":563:605  _mint(initialMinterAddress, initialSupply) */\n  jump\t// in\ntag_18:\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":531:692  if(ismainChain== true){... */\n  jump(tag_21)\ntag_17:\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":646:681  _mint(address(this), initialSupply) */\n  tag_21\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":660:664  this */\n  address\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":667:680  initialSupply */\n  dup5\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":646:651  _mint */\n  tag_19\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":646:681  _mint(address(this), initialSupply) */\n  jump\t// in\ntag_21:\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":231:698  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":128:1210  contract MyOmniToken is OmniERC20 {... */\n  jump(tag_62)\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3791:3976  function _setOmniPortal(address _omni) internal {... */\ntag_9:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3857:3876  _omni != address(0) */\n  dup2\n  and\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3849:3899  require(_omni != address(0), \"XApp: no zero omni\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4560:4562   */\n  0x20\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3849:3899  require(_omni != address(0), \"XApp: no zero omni\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4542:4563   */\n  mstore\n    /* \"#utility.yul\":4599:4601   */\n  0x12\n    /* \"#utility.yul\":4579:4597   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4572:4602   */\n  mstore\n  shl(0x70, 0x584170703a206e6f207a65726f206f6d6e69)\n    /* \"#utility.yul\":4618:4636   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4611:4659   */\n  mstore\n    /* \"#utility.yul\":4676:4694   */\n  0x64\n  add\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3849:3899  require(_omni != address(0), \"XApp: no zero omni\") */\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_24:\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3909:3913  omni */\n  0x00\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3909:3934  omni = IOmniPortal(_omni) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3949:3969  OmniPortalSet(_omni) */\n  mload(0x40)\n    /* \"#utility.yul\":4851:4902   */\n  swap1\n  dup2\n  mstore\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3949:3969  OmniPortalSet(_omni) */\n  0x79162c8d053a07e70cdc1ccc536f0440b571f8508377d2bef51094fadab98f47\n  swap1\n    /* \"#utility.yul\":4839:4841   */\n  0x20\n    /* \"#utility.yul\":4824:4842   */\n  add\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3949:3969  OmniPortalSet(_omni) */\ntag_27:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3791:3976  function _setOmniPortal(address _omni) internal {... */\n  pop\n  jump\t// out\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3462:3663  function _setDefaultConfLevel(uint8 conf) internal {... */\ntag_11:\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3531:3554  ConfLevel.isValid(conf) */\n  tag_30\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3549:3553  conf */\n  dup2\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3531:3548  ConfLevel.isValid */\n  tag_31\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3531:3554  ConfLevel.isValid(conf) */\n  jump\t// in\ntag_30:\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3523:3583  require(ConfLevel.isValid(conf), \"XApp: invalid conf level\") */\n  tag_32\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5115:5117   */\n  0x20\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3523:3583  require(ConfLevel.isValid(conf), \"XApp: invalid conf level\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5097:5118   */\n  mstore\n    /* \"#utility.yul\":5154:5156   */\n  0x18\n    /* \"#utility.yul\":5134:5152   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5127:5157   */\n  mstore\n    /* \"#utility.yul\":5193:5219   */\n  0x584170703a20696e76616c696420636f6e66206c6576656c0000000000000000\n    /* \"#utility.yul\":5173:5191   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5166:5220   */\n  mstore\n    /* \"#utility.yul\":5237:5255   */\n  0x64\n  add\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3523:3583  require(ConfLevel.isValid(conf), \"XApp: invalid conf level\") */\n  tag_25\n    /* \"#utility.yul\":4913:5261   */\n  jump\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3523:3583  require(ConfLevel.isValid(conf), \"XApp: invalid conf level\") */\ntag_32:\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3593:3609  defaultConfLevel */\n  0x00\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3593:3616  defaultConfLevel = conf */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  shl(0xa0, 0x01)\n  0xff\n  dup5\n  and\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3631:3656  DefaultConfLevelSet(conf) */\n  mload(0x40)\n    /* \"#utility.yul\":5408:5444   */\n  swap1\n  dup2\n  mstore\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3631:3656  DefaultConfLevelSet(conf) */\n  0x8de08a798b4e50b4f351c1eaa91a11530043802be3ffac2df87db0c45a2e8483\n  swap1\n    /* \"#utility.yul\":5396:5398   */\n  0x20\n    /* \"#utility.yul\":5381:5399   */\n  add\n    /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":3631:3656  DefaultConfLevelSet(conf) */\n  tag_27\n    /* \"#utility.yul\":5266:5450   */\n  jump\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1000:1208  function _mint(address account, uint256 value) internal {... */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1070:1091  account == address(0) */\n  dup3\n  and\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1066:1157  if (account == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1114:1146  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1143:1144  0 */\n  0x00\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1114:1146  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4851:4902   */\n  mstore\n    /* \"#utility.yul\":4824:4842   */\n  0x24\n  add\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1114:1146  ERC20InvalidReceiver(address(0)) */\n  tag_25\n    /* \"#utility.yul\":4705:4908   */\n  jump\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1066:1157  if (account == address(0)) {... */\ntag_38:\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1166:1201  _update(address(0), account, value) */\n  tag_40\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1182:1183  0 */\n  0x00\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1186:1193  account */\n  dup4\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1195:1200  value */\n  dup4\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1166:1173  _update */\n  tag_41\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1166:1201  _update(address(0), account, value) */\n  jump\t// in\ntag_40:\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1000:1208  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":791:911  function isValid(uint8 level) internal pure returns (bool) {... */\ntag_31:\n    /* \"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":844:848  bool */\n  0x00\n    /* \"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":867:882  level == Latest */\n  0xff\n  dup3\n  and\n    /* \"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":571:572  1 */\n  0x01\n    /* \"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":867:882  level == Latest */\n  eq\n  dup1\n    /* \"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":867:904  level == Latest || level == Finalized */\n  tag_43\n  jumpi\n  pop\n    /* \"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":886:904  level == Finalized */\n  0xff\n  dup3\n  and\n    /* \"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":710:711  4 */\n  0x04\n    /* \"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":886:904  level == Finalized */\n  eq\n    /* \"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":867:904  level == Latest || level == Finalized */\ntag_43:\n    /* \"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":860:904  return level == Latest || level == Finalized */\n  swap3\n    /* \"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":791:911  function isValid(uint8 level) internal pure returns (bool) {... */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3300:4006  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_41:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3389:3407  from == address(0) */\n  dup4\n  and\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3385:3744  if (from == address(0)) {... */\n  tag_45\n  jumpi\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3439:3444  value */\n  dup1\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3423:3435  _totalSupply */\n  0x04\n  0x00\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3423:3444  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_46\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3385:3744  if (from == address(0)) {... */\n  tag_48\n  swap1\n  pop\n  jump\ntag_45:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3497:3512  _balances[from] */\n  dup4\n  and\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3475:3494  uint256 fromBalance */\n  0x00\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3497:3512  _balances[from] */\n  swap1\n  dup2\n  mstore\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3497:3506  _balances */\n  0x02\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3497:3512  _balances[from] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3530:3549  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3526:3641  if (fromBalance < value) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3576:3626  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5902:5934   */\n  dup6\n  and\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3576:3626  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5884:5935   */\n  mstore\n    /* \"#utility.yul\":5951:5969   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5944:5978   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5994:6012   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5987:6021   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5857:5875   */\n  0x64\n  add\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3576:3626  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_25\n    /* \"#utility.yul\":5682:6027   */\n  jump\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3526:3641  if (fromBalance < value) {... */\ntag_49:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3682:3697  _balances[from] */\n  dup5\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3682:3691  _balances */\n  0x02\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3682:3697  _balances[from] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3700:3719  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3682:3719  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3385:3744  if (from == address(0)) {... */\ntag_48:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3758:3774  to == address(0) */\n  dup3\n  and\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3754:3959  if (to == address(0)) {... */\n  tag_52\n  jumpi\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3818:3830  _totalSupply */\n  0x04\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3818:3839  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3754:3959  if (to == address(0)) {... */\n  jump(tag_53)\ntag_52:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3912:3925  _balances[to] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3912:3921  _balances */\n  0x02\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3912:3925  _balances[to] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3912:3934  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3754:3959  if (to == address(0)) {... */\ntag_53:\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3989:3991  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3974:3999  Transfer(from, to, value) */\n  and\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3983:3987  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3974:3999  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3993:3998  value */\n  dup4\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3974:3999  Transfer(from, to, value) */\n  mload(0x40)\n  tag_54\n  swap2\n    /* \"#utility.yul\":6178:6203   */\n  dup2\n  mstore\n    /* \"#utility.yul\":6166:6168   */\n  0x20\n    /* \"#utility.yul\":6151:6169   */\n  add\n  swap1\n    /* \"#utility.yul\":6032:6209   */\n  jump\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3974:3999  Transfer(from, to, value) */\ntag_54:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3300:4006  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_56:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:869   */\ntag_57:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_65:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_67\n  tag_56\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_69\n  tag_56\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_70:\n    /* \"#utility.yul\":782:788   */\n  dup2\n    /* \"#utility.yul\":775:779   */\n  0x20\n    /* \"#utility.yul\":767:773   */\n  dup6\n    /* \"#utility.yul\":763:780   */\n  add\n    /* \"#utility.yul\":756:760   */\n  0x20\n    /* \"#utility.yul\":748:754   */\n  dup4\n    /* \"#utility.yul\":744:761   */\n  add\n    /* \"#utility.yul\":738:789   */\n  mcopy\n    /* \"#utility.yul\":837:838   */\n  0x00\n    /* \"#utility.yul\":809:828   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":805:835   */\n  add\n    /* \"#utility.yul\":798:839   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":813:819   */\n  swap4\n    /* \"#utility.yul\":146:869   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":874:1844   */\ntag_3:\n    /* \"#utility.yul\":997:1003   */\n  0x00\n    /* \"#utility.yul\":1005:1011   */\n  dup1\n    /* \"#utility.yul\":1013:1019   */\n  0x00\n    /* \"#utility.yul\":1021:1027   */\n  dup1\n    /* \"#utility.yul\":1029:1035   */\n  0x00\n    /* \"#utility.yul\":1082:1085   */\n  0xa0\n    /* \"#utility.yul\":1070:1079   */\n  dup7\n    /* \"#utility.yul\":1061:1068   */\n  dup9\n    /* \"#utility.yul\":1057:1080   */\n  sub\n    /* \"#utility.yul\":1053:1086   */\n  slt\n    /* \"#utility.yul\":1050:1103   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1099:1100   */\n  0x00\n    /* \"#utility.yul\":1096:1097   */\n  dup1\n    /* \"#utility.yul\":1089:1101   */\n  revert\n    /* \"#utility.yul\":1050:1103   */\ntag_72:\n    /* \"#utility.yul\":1126:1142   */\n  dup6\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1154:1184   */\n  dup2\n  gt\n    /* \"#utility.yul\":1151:1201   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1197:1198   */\n  0x00\n    /* \"#utility.yul\":1194:1195   */\n  dup1\n    /* \"#utility.yul\":1187:1199   */\n  revert\n    /* \"#utility.yul\":1151:1201   */\ntag_73:\n    /* \"#utility.yul\":1220:1281   */\n  tag_74\n    /* \"#utility.yul\":1273:1280   */\n  dup9\n    /* \"#utility.yul\":1264:1270   */\n  dup3\n    /* \"#utility.yul\":1253:1262   */\n  dup10\n    /* \"#utility.yul\":1249:1271   */\n  add\n    /* \"#utility.yul\":1220:1281   */\n  tag_57\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1327:1329   */\n  0x20\n    /* \"#utility.yul\":1312:1330   */\n  dup9\n  add\n    /* \"#utility.yul\":1306:1331   */\n  mload\n    /* \"#utility.yul\":1210:1281   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":1306:1331   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1343:1375   */\n  dup2\n  gt\n    /* \"#utility.yul\":1340:1392   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1388:1389   */\n  0x00\n    /* \"#utility.yul\":1385:1386   */\n  dup1\n    /* \"#utility.yul\":1378:1390   */\n  revert\n    /* \"#utility.yul\":1340:1392   */\ntag_75:\n    /* \"#utility.yul\":1411:1474   */\n  tag_76\n    /* \"#utility.yul\":1466:1473   */\n  dup9\n    /* \"#utility.yul\":1455:1463   */\n  dup3\n    /* \"#utility.yul\":1444:1453   */\n  dup10\n    /* \"#utility.yul\":1440:1464   */\n  add\n    /* \"#utility.yul\":1411:1474   */\n  tag_57\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1514:1516   */\n  0x40\n    /* \"#utility.yul\":1499:1517   */\n  dup9\n  add\n    /* \"#utility.yul\":1493:1518   */\n  mload\n    /* \"#utility.yul\":1561:1563   */\n  0x60\n    /* \"#utility.yul\":1546:1564   */\n  dup10\n  add\n    /* \"#utility.yul\":1540:1565   */\n  mload\n    /* \"#utility.yul\":1401:1474   */\n  swap2\n  swap7\n  pop\n    /* \"#utility.yul\":1493:1518   */\n  swap5\n  pop\n    /* \"#utility.yul\":1540:1565   */\n  swap1\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1594:1625   */\n  dup2\n  and\n    /* \"#utility.yul\":1584:1626   */\n  dup2\n  eq\n    /* \"#utility.yul\":1574:1644   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1640:1641   */\n  0x00\n    /* \"#utility.yul\":1637:1638   */\n  dup1\n    /* \"#utility.yul\":1630:1642   */\n  revert\n    /* \"#utility.yul\":1574:1644   */\ntag_77:\n    /* \"#utility.yul\":1734:1737   */\n  0x80\n    /* \"#utility.yul\":1719:1738   */\n  dup8\n  add\n    /* \"#utility.yul\":1713:1739   */\n  mload\n    /* \"#utility.yul\":1663:1668   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":1777:1792   */\n  dup1\n  iszero\n    /* \"#utility.yul\":1770:1793   */\n  iszero\n    /* \"#utility.yul\":1758:1794   */\n  dup2\n  eq\n    /* \"#utility.yul\":1748:1812   */\n  tag_78\n  jumpi\n    /* \"#utility.yul\":1808:1809   */\n  0x00\n    /* \"#utility.yul\":1805:1806   */\n  dup1\n    /* \"#utility.yul\":1798:1810   */\n  revert\n    /* \"#utility.yul\":1748:1812   */\ntag_78:\n    /* \"#utility.yul\":1831:1838   */\n  dup1\n    /* \"#utility.yul\":1821:1838   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":874:1844   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1849:2229   */\ntag_58:\n    /* \"#utility.yul\":1928:1929   */\n  0x01\n    /* \"#utility.yul\":1924:1936   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1971:1983   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1992:2053   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2046:2050   */\n  0x7f\n    /* \"#utility.yul\":2038:2044   */\n  dup3\n    /* \"#utility.yul\":2034:2051   */\n  and\n    /* \"#utility.yul\":2024:2051   */\n  swap2\n  pop\n    /* \"#utility.yul\":1992:2053   */\ntag_80:\n    /* \"#utility.yul\":2099:2101   */\n  0x20\n    /* \"#utility.yul\":2091:2097   */\n  dup3\n    /* \"#utility.yul\":2088:2102   */\n  lt\n    /* \"#utility.yul\":2068:2086   */\n  dup2\n    /* \"#utility.yul\":2065:2103   */\n  sub\n    /* \"#utility.yul\":2062:2223   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2145:2155   */\n  0x4e487b71\n    /* \"#utility.yul\":2140:2143   */\n  0xe0\n    /* \"#utility.yul\":2136:2156   */\n  shl\n    /* \"#utility.yul\":2133:2134   */\n  0x00\n    /* \"#utility.yul\":2126:2157   */\n  mstore\n    /* \"#utility.yul\":2180:2184   */\n  0x22\n    /* \"#utility.yul\":2177:2178   */\n  0x04\n    /* \"#utility.yul\":2170:2185   */\n  mstore\n    /* \"#utility.yul\":2208:2212   */\n  0x24\n    /* \"#utility.yul\":2205:2206   */\n  0x00\n    /* \"#utility.yul\":2198:2213   */\n  revert\n    /* \"#utility.yul\":2062:2223   */\ntag_81:\n  pop\n    /* \"#utility.yul\":1849:2229   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2360:2878   */\ntag_60:\n    /* \"#utility.yul\":2462:2464   */\n  0x1f\n    /* \"#utility.yul\":2457:2460   */\n  dup3\n    /* \"#utility.yul\":2454:2465   */\n  gt\n    /* \"#utility.yul\":2451:2872   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2498:2503   */\n  dup1\n    /* \"#utility.yul\":2495:2496   */\n  0x00\n    /* \"#utility.yul\":2488:2504   */\n  mstore\n    /* \"#utility.yul\":2542:2546   */\n  0x20\n    /* \"#utility.yul\":2539:2540   */\n  0x00\n    /* \"#utility.yul\":2529:2547   */\n  keccak256\n    /* \"#utility.yul\":2612:2614   */\n  0x1f\n    /* \"#utility.yul\":2600:2610   */\n  dup5\n    /* \"#utility.yul\":2596:2615   */\n  add\n    /* \"#utility.yul\":2593:2594   */\n  0x05\n    /* \"#utility.yul\":2589:2616   */\n  shr\n    /* \"#utility.yul\":2583:2587   */\n  dup2\n    /* \"#utility.yul\":2579:2617   */\n  add\n    /* \"#utility.yul\":2648:2652   */\n  0x20\n    /* \"#utility.yul\":2636:2646   */\n  dup6\n    /* \"#utility.yul\":2633:2653   */\n  lt\n    /* \"#utility.yul\":2630:2677   */\n  iszero\n  tag_85\n  jumpi\n  pop\n    /* \"#utility.yul\":2671:2675   */\n  dup1\n    /* \"#utility.yul\":2630:2677   */\ntag_85:\n    /* \"#utility.yul\":2726:2728   */\n  0x1f\n    /* \"#utility.yul\":2721:2724   */\n  dup5\n    /* \"#utility.yul\":2717:2729   */\n  add\n    /* \"#utility.yul\":2714:2715   */\n  0x05\n    /* \"#utility.yul\":2710:2730   */\n  shr\n    /* \"#utility.yul\":2704:2708   */\n  dup3\n    /* \"#utility.yul\":2700:2731   */\n  add\n    /* \"#utility.yul\":2690:2731   */\n  swap2\n  pop\n    /* \"#utility.yul\":2781:2862   */\ntag_86:\n    /* \"#utility.yul\":2799:2801   */\n  dup2\n    /* \"#utility.yul\":2792:2797   */\n  dup2\n    /* \"#utility.yul\":2789:2802   */\n  lt\n    /* \"#utility.yul\":2781:2862   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2858:2859   */\n  0x00\n    /* \"#utility.yul\":2844:2860   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2825:2826   */\n  0x01\n    /* \"#utility.yul\":2814:2827   */\n  add\n    /* \"#utility.yul\":2781:2862   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":2785:2788   */\n  pop\n  pop\n    /* \"#utility.yul\":2451:2872   */\ntag_84:\n    /* \"#utility.yul\":2360:2878   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3054:4353   */\ntag_14:\n    /* \"#utility.yul\":3174:3184   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3196:3226   */\n  dup2\n  gt\n    /* \"#utility.yul\":3193:3249   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3229:3247   */\n  tag_92\n  tag_56\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3258:3355   */\n  tag_93\n    /* \"#utility.yul\":3348:3354   */\n  dup2\n    /* \"#utility.yul\":3308:3346   */\n  tag_94\n    /* \"#utility.yul\":3340:3344   */\n  dup5\n    /* \"#utility.yul\":3334:3345   */\n  sload\n    /* \"#utility.yul\":3308:3346   */\n  tag_58\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3302:3306   */\n  dup5\n    /* \"#utility.yul\":3258:3355   */\n  tag_60\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3404:3408   */\n  0x20\n    /* \"#utility.yul\":3435:3437   */\n  0x1f\n    /* \"#utility.yul\":3424:3438   */\n  dup3\n  gt\n    /* \"#utility.yul\":3452:3453   */\n  0x01\n    /* \"#utility.yul\":3447:4096   */\n  dup2\n  eq\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4140:4141   */\n  0x00\n    /* \"#utility.yul\":4157:4163   */\n  dup4\n    /* \"#utility.yul\":4154:4243   */\n  iszero\n  tag_97\n  jumpi\n  pop\n    /* \"#utility.yul\":4209:4228   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":4203:4229   */\n  mload\n    /* \"#utility.yul\":4154:4243   */\ntag_97:\n  not(0x00)\n    /* \"#utility.yul\":3011:3012   */\n  0x03\n    /* \"#utility.yul\":3007:3018   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3003:3027   */\n  shr\n    /* \"#utility.yul\":2999:3028   */\n  not\n    /* \"#utility.yul\":2989:3029   */\n  and\n    /* \"#utility.yul\":3035:3036   */\n  0x01\n    /* \"#utility.yul\":3031:3042   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2986:3043   */\n  or\n    /* \"#utility.yul\":4256:4337   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3417:4347   */\n  jump(tag_88)\n    /* \"#utility.yul\":3447:4096   */\ntag_96:\n    /* \"#utility.yul\":2307:2308   */\n  0x00\n    /* \"#utility.yul\":2300:2314   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2344:2348   */\n  0x20\n    /* \"#utility.yul\":2331:2349   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3483:3503   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3601:3823   */\ntag_100:\n    /* \"#utility.yul\":3615:3622   */\n  dup3\n    /* \"#utility.yul\":3612:3613   */\n  dup2\n    /* \"#utility.yul\":3609:3623   */\n  lt\n    /* \"#utility.yul\":3601:3823   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":3697:3716   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3691:3717   */\n  mload\n    /* \"#utility.yul\":3676:3718   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3804:3808   */\n  0x20\n    /* \"#utility.yul\":3789:3809   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3757:3758   */\n  0x01\n    /* \"#utility.yul\":3745:3759   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3631:3643   */\n  add\n    /* \"#utility.yul\":3601:3823   */\n  jump(tag_100)\ntag_102:\n    /* \"#utility.yul\":3605:3608   */\n  pop\n    /* \"#utility.yul\":3851:3857   */\n  dup5\n    /* \"#utility.yul\":3842:3849   */\n  dup3\n    /* \"#utility.yul\":3839:3858   */\n  lt\n    /* \"#utility.yul\":3836:4037   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":3912:3931   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3906:3932   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3995:3996   */\n  0x03\n    /* \"#utility.yul\":3991:4005   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":4007:4010   */\n  0xf8\n    /* \"#utility.yul\":3987:4011   */\n  and\n    /* \"#utility.yul\":3983:4020   */\n  shr\n    /* \"#utility.yul\":3979:4021   */\n  not\n    /* \"#utility.yul\":3964:4022   */\n  and\n    /* \"#utility.yul\":3949:4023   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3836:4037   */\ntag_103:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4083:4084   */\n  0x01\n    /* \"#utility.yul\":4067:4081   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4063:4085   */\n  add\n    /* \"#utility.yul\":4050:4086   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3054:4353   */\n  jump\t// out\n    /* \"#utility.yul\":5455:5677   */\ntag_47:\n    /* \"#utility.yul\":5520:5529   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5541:5551   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5538:5671   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":5593:5603   */\n  0x4e487b71\n    /* \"#utility.yul\":5588:5591   */\n  0xe0\n    /* \"#utility.yul\":5584:5604   */\n  shl\n    /* \"#utility.yul\":5581:5582   */\n  0x00\n    /* \"#utility.yul\":5574:5605   */\n  mstore\n    /* \"#utility.yul\":5628:5632   */\n  0x11\n    /* \"#utility.yul\":5625:5626   */\n  0x04\n    /* \"#utility.yul\":5618:5633   */\n  mstore\n    /* \"#utility.yul\":5656:5660   */\n  0x24\n    /* \"#utility.yul\":5653:5654   */\n  0x00\n    /* \"#utility.yul\":5646:5661   */\n  revert\n    /* \"#utility.yul\":6032:6209   */\ntag_62:\n    /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":128:1210  contract MyOmniToken is OmniERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":128:1210  contract MyOmniToken is OmniERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4a536a06\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbdb3c8e6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x4a536a06\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x74eeb847\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x23b872dd\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x39acf9f1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":948:1046  function name() public view virtual override returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1656:1851  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1206:1220   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1199:1221   */\n      iszero\n        /* \"#utility.yul\":1181:1222   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1169:1171   */\n      0x20\n        /* \"#utility.yul\":1154:1172   */\n      add\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1656:1851  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n      tag_22\n        /* \"#utility.yul\":1041:1228   */\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1257:1363  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1344:1356  _totalSupply */\n      sload(0x04)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1257:1363  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1379:1404   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1367:1369   */\n      0x20\n        /* \"#utility.yul\":1352:1370   */\n      add\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1257:1363  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":1233:1410   */\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1857:2110  function transferFrom(address from, address to, uint256 value) public virtual override returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_25\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1160:1251  function decimals() public view virtual override returns (uint8) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1242:1244  18 */\n      0x12\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1160:1251  function decimals() public view virtual override returns (uint8) {... */\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":2100:2104   */\n      0xff\n        /* \"#utility.yul\":2088:2105   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2070:2106   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2058:2060   */\n      0x20\n        /* \"#utility.yul\":2043:2061   */\n      add\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1160:1251  function decimals() public view virtual override returns (uint8) {... */\n      tag_22\n        /* \"#utility.yul\":1928:2112   */\n      jump\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":680:703  IOmniPortal public omni */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sload(0x00)\n      tag_48\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2300:2332   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2282:2333   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2270:2272   */\n      0x20\n        /* \"#utility.yul\":2255:2273   */\n      add\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":680:703  IOmniPortal public omni */\n      tag_22\n        /* \"#utility.yul\":2117:2339   */\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":803:964  function mint(address account, uint256 value) public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2774:2978  function receiveTransfer(address from, address to, uint256 value) external xrecv {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_53\n      tag_58\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1369:1494  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_32\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1469:1487  _balances[account] */\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1443:1450  uint256 */\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1469:1487  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1469:1478  _balances */\n      0x02\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1469:1487  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1369:1494  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":779:808  uint8 public defaultConfLevel */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      sload(0x00)\n      tag_43\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1052:1154  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_20\n      tag_72\n      jump\t// in\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2117:2304  function transfer(address to, uint256 value) public virtual override returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_25\n      tag_76\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2309:2768  function transfer(uint64 destChain, address destToken, address to, uint256 value) external payable {... */\n    tag_14:\n      tag_53\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1501:1650  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_32\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1634  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1590:1597  uint256 */\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1634  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1627  _allowances */\n      0x03\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1634  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1643  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1501:1650  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":948:1046  function name() public view virtual override returns (string memory) {... */\n    tag_21:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1002:1015  string memory */\n      0x60\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1034:1039  _name */\n      0x05\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1027:1039  return _name */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_91\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":948:1046  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1656:1851  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1738:1742  bool */\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1792:1823  _approve(owner, spender, value) */\n      tag_99\n        /* \"xstake/src/wstf token launch/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1808:1815  spender */\n      dup6\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1817:1822  value */\n      dup6\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1792:1800  _approve */\n      tag_100\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1792:1823  _approve(owner, spender, value) */\n      jump\t// in\n    tag_99:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1840:1844  true */\n      0x01\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1833:1844  return true */\n      swap2\n      pop\n      pop\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1656:1851  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_96:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1857:2110  function transferFrom(address from, address to, uint256 value) public virtual override returns (bool) {... */\n    tag_40:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1953:1957  bool */\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2009:2046  _spendAllowance(from, spender, value) */\n      tag_104\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2025:2029  from */\n      dup6\n        /* \"xstake/src/wstf token launch/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2040:2045  value */\n      dup6\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2009:2024  _spendAllowance */\n      tag_105\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2009:2046  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_104:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2056:2082  _transfer(from, to, value) */\n      tag_106\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2066:2070  from */\n      dup6\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2072:2074  to */\n      dup6\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2076:2081  value */\n      dup6\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2056:2065  _transfer */\n      tag_107\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2056:2082  _transfer(from, to, value) */\n      jump\t// in\n    tag_106:\n      pop\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2099:2103  true */\n      0x01\n      swap5\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1857:2110  function transferFrom(address from, address to, uint256 value) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":803:964  function mint(address account, uint256 value) public {... */\n    tag_55:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":936:957  _mint(account, value) */\n      tag_110\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":942:949  account */\n      dup3\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":951:956  value */\n      dup3\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":936:941  _mint */\n      tag_111\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":936:957  _mint(account, value) */\n      jump\t// in\n    tag_110:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":803:964  function mint(address account, uint256 value) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2774:2978  function receiveTransfer(address from, address to, uint256 value) external xrecv {... */\n    tag_59:\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1058:1062  omni */\n      sload(0x00)\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1058:1069  omni.xmsg() */\n      0x40\n      dup1\n      mload\n      shl(0xe1, 0x17993807)\n      dup2\n      mstore\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1058:1062  omni */\n      swap1\n      swap4\n      and\n      swap3\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1058:1067  omni.xmsg */\n      0x2f32700e\n      swap3\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1058:1069  omni.xmsg() */\n      0x04\n      dup1\n      dup5\n      add\n      swap4\n      swap2\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1058:1062  omni */\n      dup7\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1058:1069  omni.xmsg() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1051:1069  xmsg = omni.xmsg() */\n      dup1\n      mload\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1051:1055  xmsg */\n      0x01\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1051:1069  xmsg = omni.xmsg() */\n      dup1\n      sload\n      0x20\n      swap1\n      swap4\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0x010000000000000000\n      mul\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      0xffffffffffffffff\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2874:2883  isXCall() */\n      tag_118\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2874:2881  isXCall */\n      tag_119\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2874:2883  isXCall() */\n      jump\t// in\n    tag_118:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2866:2936  require(isXCall(), \"OmniERC20: Only callable via cross-chain message\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5144:5146   */\n      0x20\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2866:2936  require(isXCall(), \"OmniERC20: Only callable via cross-chain message\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5126:5147   */\n      mstore\n        /* \"#utility.yul\":5183:5185   */\n      0x30\n        /* \"#utility.yul\":5163:5181   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5156:5186   */\n      mstore\n        /* \"#utility.yul\":5222:5256   */\n      0x4f6d6e6945524332303a204f6e6c792063616c6c61626c65207669612063726f\n        /* \"#utility.yul\":5202:5220   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5195:5257   */\n      mstore\n      shl(0x80, 0x73732d636861696e206d657373616765)\n        /* \"#utility.yul\":5273:5291   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5266:5312   */\n      mstore\n        /* \"#utility.yul\":5329:5348   */\n      0x84\n      add\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2866:2936  require(isXCall(), \"OmniERC20: Only callable via cross-chain message\") */\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2946:2970  _update(from, to, value) */\n      tag_123\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2954:2958  from */\n      dup4\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2960:2962  to */\n      dup4\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2964:2969  value */\n      dup4\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2946:2953  _update */\n      tag_124\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2946:2970  _update(from, to, value) */\n      jump\t// in\n    tag_123:\n      pop\n      pop\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1097:1101  xmsg */\n      0x01\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1090:1101  delete xmsg */\n      dup1\n      sload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      pop\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2774:2978  function receiveTransfer(address from, address to, uint256 value) external xrecv {... */\n      jump\t// out\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1052:1154  function symbol() public view virtual override returns (string memory) {... */\n    tag_72:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1108:1121  string memory */\n      0x60\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1140:1147  _symbol */\n      0x06\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1133:1147  return _symbol */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2117:2304  function transfer(address to, uint256 value) public virtual override returns (bool) {... */\n    tag_77:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2195:2199  bool */\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2249:2276  _transfer(owner, to, value) */\n      tag_99\n        /* \"xstake/src/wstf token launch/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2266:2268  to */\n      dup6\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2270:2275  value */\n      dup6\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2249:2258  _transfer */\n      tag_107\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2249:2276  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2309:2768  function transfer(uint64 destChain, address destToken, address to, uint256 value) external payable {... */\n    tag_82:\n        /* \"xstake/src/wstf token launch/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2456:2493  _transfer(from, address(this), value) */\n      tag_137\n        /* \"xstake/src/wstf token launch/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2480:2484  this */\n      address\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2487:2492  value */\n      dup5\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2456:2465  _transfer */\n      tag_107\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2456:2493  _transfer(from, address(this), value) */\n      jump\t// in\n    tag_137:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2560:2629  abi.encodeCall(OmniERC20.receiveTransfer, (address(this), to, value)) */\n      mload(0x40)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2611:2615  this */\n      address\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2560:2629  abi.encodeCall(OmniERC20.receiveTransfer, (address(this), to, value)) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5561:5612   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5648:5680   */\n      dup5\n      and\n        /* \"#utility.yul\":5628:5646   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5621:5681   */\n      mstore\n        /* \"#utility.yul\":5697:5715   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":5690:5724   */\n      dup4\n      swap1\n      mstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2540:2557  bytes memory data */\n      0x00\n      swap1\n        /* \"#utility.yul\":5534:5552   */\n      0x84\n      add\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2560:2629  abi.encodeCall(OmniERC20.receiveTransfer, (address(this), to, value)) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe1, 0x2529b503)\n      or\n      swap1\n      mstore\n      swap1\n      pop\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2653:2694  xcall(destChain, destToken, data, 150000) */\n      tag_140\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2659:2668  destChain */\n      dup8\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2670:2679  destToken */\n      dup8\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2560:2629  abi.encodeCall(OmniERC20.receiveTransfer, (address(this), to, value)) */\n      dup5\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2687:2693  150000 */\n      0x0249f0\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2653:2658  xcall */\n      tag_141\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2653:2694  xcall(destChain, destToken, data, 150000) */\n      jump\t// in\n    tag_140:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2639:2694  uint256 fee = xcall(destChain, destToken, data, 150000) */\n      swap1\n      pop\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2725:2728  fee */\n      dup1\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2712:2721  msg.value */\n      callvalue\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2712:2728  msg.value >= fee */\n      lt\n      iszero\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2704:2760  require(msg.value >= fee, \"OmniERC20: Insufficient fee\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5937:5939   */\n      0x20\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2704:2760  require(msg.value >= fee, \"OmniERC20: Insufficient fee\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5919:5940   */\n      mstore\n        /* \"#utility.yul\":5976:5978   */\n      0x1b\n        /* \"#utility.yul\":5956:5974   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5949:5979   */\n      mstore\n        /* \"#utility.yul\":6015:6044   */\n      0x4f6d6e6945524332303a20496e73756666696369656e74206665650000000000\n        /* \"#utility.yul\":5995:6013   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5988:6045   */\n      mstore\n        /* \"#utility.yul\":6062:6080   */\n      0x64\n      add\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2704:2760  require(msg.value >= fee, \"OmniERC20: Insufficient fee\") */\n      tag_121\n        /* \"#utility.yul\":5735:6086   */\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2704:2760  require(msg.value >= fee, \"OmniERC20: Insufficient fee\") */\n    tag_142:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2408:2768  {... */\n      pop\n      pop\n      pop\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2309:2768  function transfer(uint64 destChain, address destToken, address to, uint256 value) external payable {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4013:4141  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_100:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4097:4134  _approve(owner, spender, value, true) */\n      tag_148\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4106:4111  owner */\n      dup4\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4113:4120  spender */\n      dup4\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4122:4127  value */\n      dup4\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4129:4133  true */\n      0x01\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4097:4105  _approve */\n      tag_149\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4097:4134  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_148:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4013:4141  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4585:5062  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1634  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4684:4708  uint256 currentAllowance */\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1634  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1627  _allowances */\n      0x03\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1634  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1643  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4750:4787  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4746:5056  if (currentAllowance != type(uint256).max) {... */\n      tag_156\n      jumpi\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4826:4831  value */\n      dup2\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4807:4823  currentAllowance */\n      dup2\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4807:4831  currentAllowance < value */\n      lt\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4803:4933  if (currentAllowance < value) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4858:4918  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6311:6343   */\n      dup5\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4858:4918  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6293:6344   */\n      mstore\n        /* \"#utility.yul\":6360:6378   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6353:6387   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6403:6421   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6396:6430   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6266:6284   */\n      0x64\n      add\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4858:4918  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_121\n        /* \"#utility.yul\":6091:6436   */\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4803:4933  if (currentAllowance < value) {... */\n    tag_153:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4974:5031  _approve(owner, spender, currentAllowance - value, false) */\n      tag_156\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4983:4988  owner */\n      dup5\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4990:4997  spender */\n      dup5\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":5018:5023  value */\n      dup5\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4999:5015  currentAllowance */\n      dup5\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4999:5023  currentAllowance - value */\n      sub\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":5025:5030  false */\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4974:4982  _approve */\n      tag_149\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4974:5031  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_156:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4674:5062  {... */\n      pop\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4585:5062  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2984:3293  function _transfer(address from, address to, uint256 value) internal virtual {... */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3075:3093  from == address(0) */\n      dup4\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3071:3157  if (from == address(0)) {... */\n      tag_158\n      jumpi\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3116:3146  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3143:3144  0 */\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3116:3146  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2282:2333   */\n      mstore\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      add\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3116:3146  ERC20InvalidSender(address(0)) */\n      tag_121\n        /* \"#utility.yul\":2117:2339   */\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3071:3157  if (from == address(0)) {... */\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3170:3186  to == address(0) */\n      dup3\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3166:3252  if (to == address(0)) {... */\n      tag_161\n      jumpi\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3209:3241  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3238:3239  0 */\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3209:3241  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2282:2333   */\n      mstore\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      add\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3209:3241  ERC20InvalidReceiver(address(0)) */\n      tag_121\n        /* \"#utility.yul\":2117:2339   */\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3166:3252  if (to == address(0)) {... */\n    tag_161:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3262:3286  _update(from, to, value) */\n      tag_148\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3270:3274  from */\n      dup4\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3276:3278  to */\n      dup4\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3280:3285  value */\n      dup4\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3262:3269  _update */\n      tag_124\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3262:3286  _update(from, to, value) */\n      jump\t// in\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1000:1208  function _mint(address account, uint256 value) internal {... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1070:1091  account == address(0) */\n      dup3\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1066:1157  if (account == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1114:1146  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1143:1144  0 */\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1114:1146  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2282:2333   */\n      mstore\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      add\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1114:1146  ERC20InvalidReceiver(address(0)) */\n      tag_121\n        /* \"#utility.yul\":2117:2339   */\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1066:1157  if (account == address(0)) {... */\n    tag_165:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1166:1201  _update(address(0), account, value) */\n      tag_110\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1182:1183  0 */\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1186:1193  account */\n      dup4\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1195:1200  value */\n      dup4\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1166:1173  _update */\n      tag_124\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":1166:1201  _update(address(0), account, value) */\n      jump\t// in\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1209:1326  function isXCall() internal view returns (bool) {... */\n    tag_119:\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1251:1255  bool */\n      0x00\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1274:1278  omni */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1274:1286  omni.isXCall */\n      and\n      0x55e2448e\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1274:1288  omni.isXCall() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1274:1319  omni.isXCall() && msg.sender == address(omni) */\n      dup1\n      iszero\n      tag_173\n      jumpi\n      pop\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1314:1318  omni */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1292:1302  msg.sender */\n      caller\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1292:1319  msg.sender == address(omni) */\n      eq\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1274:1319  omni.isXCall() && msg.sender == address(omni) */\n    tag_173:\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1267:1319  return omni.isXCall() && msg.sender == address(omni) */\n      swap1\n      pop\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":1209:1326  function isXCall() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3300:4006  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3389:3407  from == address(0) */\n      dup4\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3385:3744  if (from == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3439:3444  value */\n      dup1\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3423:3435  _totalSupply */\n      0x04\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3423:3444  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3385:3744  if (from == address(0)) {... */\n      tag_178\n      swap1\n      pop\n      jump\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3497:3512  _balances[from] */\n      dup4\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3475:3494  uint256 fromBalance */\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3497:3512  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3497:3506  _balances */\n      0x02\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3497:3512  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3530:3549  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3526:3641  if (fromBalance < value) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3576:3626  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6311:6343   */\n      dup6\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3576:3626  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6293:6344   */\n      mstore\n        /* \"#utility.yul\":6360:6378   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6353:6387   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6403:6421   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6396:6430   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6266:6284   */\n      0x64\n      add\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3576:3626  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_121\n        /* \"#utility.yul\":6091:6436   */\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3526:3641  if (fromBalance < value) {... */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3682:3697  _balances[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3682:3691  _balances */\n      0x02\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3682:3697  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3700:3719  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3682:3719  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3385:3744  if (from == address(0)) {... */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3758:3774  to == address(0) */\n      dup3\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3754:3959  if (to == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3818:3830  _totalSupply */\n      0x04\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3818:3839  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3754:3959  if (to == address(0)) {... */\n      jump(tag_182)\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3912:3925  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3912:3921  _balances */\n      0x02\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3912:3925  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3912:3934  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3754:3959  if (to == address(0)) {... */\n    tag_182:\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3989:3991  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3974:3999  Transfer(from, to, value) */\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3983:3987  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3974:3999  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3993:3998  value */\n      dup4\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3974:3999  Transfer(from, to, value) */\n      mload(0x40)\n      tag_183\n      swap2\n        /* \"#utility.yul\":1379:1404   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1367:1369   */\n      0x20\n        /* \"#utility.yul\":1352:1370   */\n      add\n      swap1\n        /* \"#utility.yul\":1233:1410   */\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3974:3999  Transfer(from, to, value) */\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3300:4006  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2156:2537  function xcall(uint64 destChainId, address to, bytes memory data, uint64 gasLimit) internal returns (uint256) {... */\n    tag_141:\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2257:2264  uint256 */\n      0x00\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2290:2294  omni */\n      dup1\n      sload\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2290:2330  omni.feeFor(destChainId, data, gasLimit) */\n      mload(0x40)\n      shl(0xe2, 0x2376548f)\n      dup2\n      mstore\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2257:2264  uint256 */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2290:2294  omni */\n      and\n      swap1\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2290:2301  omni.feeFor */\n      0x8dd9523c\n      swap1\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2290:2330  omni.feeFor(destChainId, data, gasLimit) */\n      tag_185\n      swap1\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2302:2313  destChainId */\n      dup10\n      swap1\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2315:2319  data */\n      dup9\n      swap1\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2321:2329  gasLimit */\n      dup9\n      swap1\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2290:2330  omni.feeFor(destChainId, data, gasLimit) */\n      0x04\n      add\n      tag_186\n      jump\t// in\n    tag_185:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2276:2330  uint256 fee = omni.feeFor(destChainId, data, gasLimit) */\n      swap1\n      pop\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2373:2376  fee */\n      dup1\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2348:2369  address(this).balance */\n      selfbalance\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2348:2376  address(this).balance >= fee */\n      lt\n      iszero\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2348:2396  address(this).balance >= fee || msg.value >= fee */\n      dup1\n      tag_191\n      jumpi\n      pop\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2393:2396  fee */\n      dup1\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2380:2389  msg.value */\n      callvalue\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2380:2396  msg.value >= fee */\n      lt\n      iszero\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2348:2396  address(this).balance >= fee || msg.value >= fee */\n    tag_191:\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2340:2425  require(address(this).balance >= fee || msg.value >= fee, \"XApp: insufficient funds\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7960:7962   */\n      0x20\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2340:2425  require(address(this).balance >= fee || msg.value >= fee, \"XApp: insufficient funds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7942:7963   */\n      mstore\n        /* \"#utility.yul\":7999:8001   */\n      0x18\n        /* \"#utility.yul\":7979:7997   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7972:8002   */\n      mstore\n        /* \"#utility.yul\":8038:8064   */\n      0x584170703a20696e73756666696369656e742066756e64730000000000000000\n        /* \"#utility.yul\":8018:8036   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8011:8065   */\n      mstore\n        /* \"#utility.yul\":8082:8100   */\n      0x64\n      add\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2340:2425  require(address(this).balance >= fee || msg.value >= fee, \"XApp: insufficient funds\") */\n      tag_121\n        /* \"#utility.yul\":7758:8106   */\n      jump\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2340:2425  require(address(this).balance >= fee || msg.value >= fee, \"XApp: insufficient funds\") */\n    tag_192:\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2435:2439  omni */\n      sload(0x00)\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2435:2510  omni.xcall{ value: fee }(destChainId, defaultConfLevel, to, data, gasLimit) */\n      mload(0x40)\n      shl(0xe0, 0xc21dda4f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2435:2439  omni */\n      dup3\n      and\n      swap2\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2435:2445  omni.xcall */\n      0xc21dda4f\n      swap2\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2454:2457  fee */\n      dup5\n      swap2\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2435:2510  omni.xcall{ value: fee }(destChainId, defaultConfLevel, to, data, gasLimit) */\n      tag_195\n      swap2\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2460:2471  destChainId */\n      dup12\n      swap2\n      shl(0xa0, 0x01)\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2473:2489  defaultConfLevel */\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2491:2493  to */\n      dup12\n      swap1\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2495:2499  data */\n      dup12\n      swap1\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2501:2509  gasLimit */\n      dup12\n      swap1\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2435:2510  omni.xcall{ value: fee }(destChainId, defaultConfLevel, to, data, gasLimit) */\n      0x04\n      add\n      tag_196\n      jump\t// in\n    tag_195:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_199\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_199:\n      pop\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2527:2530  fee */\n      swap4\n      swap10\n        /* \"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":2156:2537  function xcall(uint64 destChainId, address to, bytes memory data, uint64 gasLimit) internal returns (uint256) {... */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4147:4579  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4259:4278  owner == address(0) */\n      dup5\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4255:4344  if (owner == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4301:4333  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4330:4331  0 */\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4301:4333  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2282:2333   */\n      mstore\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      add\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4301:4333  ERC20InvalidApprover(address(0)) */\n      tag_121\n        /* \"#utility.yul\":2117:2339   */\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4255:4344  if (owner == address(0)) {... */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4357:4378  spender == address(0) */\n      dup4\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4353:4443  if (spender == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4401:4432  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4429:4430  0 */\n      0x00\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4401:4432  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2282:2333   */\n      mstore\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      add\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4401:4432  ERC20InvalidSpender(address(0)) */\n      tag_121\n        /* \"#utility.yul\":2117:2339   */\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4353:4443  if (spender == address(0)) {... */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4452:4470  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4452:4463  _allowances */\n      0x03\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4452:4470  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4452:4479  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4452:4487  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4497:4573  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_156\n      jumpi\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4547:4554  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4531:4562  Approval(owner, spender, value) */\n      and\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4540:4545  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4531:4562  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4556:4561  value */\n      dup5\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4531:4562  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_206\n      swap2\n        /* \"#utility.yul\":1379:1404   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1367:1369   */\n      0x20\n        /* \"#utility.yul\":1352:1370   */\n      add\n      swap1\n        /* \"#utility.yul\":1233:1410   */\n      jump\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4531:4562  Approval(owner, spender, value) */\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4147:4579  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:303   */\n    tag_207:\n        /* \"#utility.yul\":56:59   */\n      0x00\n        /* \"#utility.yul\":94:99   */\n      dup2\n        /* \"#utility.yul\":88:100   */\n      mload\n        /* \"#utility.yul\":121:127   */\n      dup1\n        /* \"#utility.yul\":116:119   */\n      dup5\n        /* \"#utility.yul\":109:128   */\n      mstore\n        /* \"#utility.yul\":177:183   */\n      dup1\n        /* \"#utility.yul\":170:174   */\n      0x20\n        /* \"#utility.yul\":163:168   */\n      dup5\n        /* \"#utility.yul\":159:175   */\n      add\n        /* \"#utility.yul\":152:156   */\n      0x20\n        /* \"#utility.yul\":147:150   */\n      dup7\n        /* \"#utility.yul\":143:157   */\n      add\n        /* \"#utility.yul\":137:184   */\n      mcopy\n        /* \"#utility.yul\":229:230   */\n      0x00\n        /* \"#utility.yul\":222:226   */\n      0x20\n        /* \"#utility.yul\":213:219   */\n      dup3\n        /* \"#utility.yul\":208:211   */\n      dup7\n        /* \"#utility.yul\":204:220   */\n      add\n        /* \"#utility.yul\":200:227   */\n      add\n        /* \"#utility.yul\":193:231   */\n      mstore\n        /* \"#utility.yul\":292:296   */\n      0x20\n        /* \"#utility.yul\":285:287   */\n      0x1f\n        /* \"#utility.yul\":281:288   */\n      not\n        /* \"#utility.yul\":276:278   */\n      0x1f\n        /* \"#utility.yul\":268:274   */\n      dup4\n        /* \"#utility.yul\":264:279   */\n      add\n        /* \"#utility.yul\":260:289   */\n      and\n        /* \"#utility.yul\":255:258   */\n      dup6\n        /* \"#utility.yul\":251:290   */\n      add\n        /* \"#utility.yul\":247:297   */\n      add\n        /* \"#utility.yul\":240:297   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":308:528   */\n    tag_23:\n        /* \"#utility.yul\":457:459   */\n      0x20\n        /* \"#utility.yul\":446:455   */\n      dup2\n        /* \"#utility.yul\":439:460   */\n      mstore\n        /* \"#utility.yul\":420:424   */\n      0x00\n        /* \"#utility.yul\":477:522   */\n      tag_213\n        /* \"#utility.yul\":518:520   */\n      0x20\n        /* \"#utility.yul\":507:516   */\n      dup4\n        /* \"#utility.yul\":503:521   */\n      add\n        /* \"#utility.yul\":495:501   */\n      dup5\n        /* \"#utility.yul\":477:522   */\n      tag_207\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":469:522   */\n      swap4\n        /* \"#utility.yul\":308:528   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":533:664   */\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":608:639   */\n      dup2\n      and\n        /* \"#utility.yul\":598:640   */\n      dup2\n      eq\n        /* \"#utility.yul\":588:658   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":654:655   */\n      0x00\n        /* \"#utility.yul\":651:652   */\n      dup1\n        /* \"#utility.yul\":644:656   */\n      revert\n        /* \"#utility.yul\":588:658   */\n    tag_215:\n        /* \"#utility.yul\":533:664   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":669:1036   */\n    tag_27:\n        /* \"#utility.yul\":737:743   */\n      0x00\n        /* \"#utility.yul\":745:751   */\n      dup1\n        /* \"#utility.yul\":798:800   */\n      0x40\n        /* \"#utility.yul\":786:795   */\n      dup4\n        /* \"#utility.yul\":777:784   */\n      dup6\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:818   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":814:815   */\n      0x00\n        /* \"#utility.yul\":811:812   */\n      dup1\n        /* \"#utility.yul\":804:816   */\n      revert\n        /* \"#utility.yul\":766:818   */\n    tag_217:\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":840:863   */\n      calldataload\n        /* \"#utility.yul\":872:903   */\n      tag_218\n        /* \"#utility.yul\":897:902   */\n      dup2\n        /* \"#utility.yul\":872:903   */\n      tag_208\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":922:927   */\n      swap5\n        /* \"#utility.yul\":1000:1002   */\n      0x20\n        /* \"#utility.yul\":985:1003   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":972:1004   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":669:1036   */\n      jump\t// out\n        /* \"#utility.yul\":1415:1923   */\n    tag_39:\n        /* \"#utility.yul\":1492:1498   */\n      0x00\n        /* \"#utility.yul\":1500:1506   */\n      dup1\n        /* \"#utility.yul\":1508:1514   */\n      0x00\n        /* \"#utility.yul\":1561:1563   */\n      0x60\n        /* \"#utility.yul\":1549:1558   */\n      dup5\n        /* \"#utility.yul\":1540:1547   */\n      dup7\n        /* \"#utility.yul\":1536:1559   */\n      sub\n        /* \"#utility.yul\":1532:1564   */\n      slt\n        /* \"#utility.yul\":1529:1581   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":1577:1578   */\n      0x00\n        /* \"#utility.yul\":1574:1575   */\n      dup1\n        /* \"#utility.yul\":1567:1579   */\n      revert\n        /* \"#utility.yul\":1529:1581   */\n    tag_222:\n        /* \"#utility.yul\":1616:1625   */\n      dup4\n        /* \"#utility.yul\":1603:1626   */\n      calldataload\n        /* \"#utility.yul\":1635:1666   */\n      tag_223\n        /* \"#utility.yul\":1660:1665   */\n      dup2\n        /* \"#utility.yul\":1635:1666   */\n      tag_208\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1685:1690   */\n      swap3\n      pop\n        /* \"#utility.yul\":1742:1744   */\n      0x20\n        /* \"#utility.yul\":1727:1745   */\n      dup5\n      add\n        /* \"#utility.yul\":1714:1746   */\n      calldataload\n        /* \"#utility.yul\":1755:1788   */\n      tag_224\n        /* \"#utility.yul\":1714:1746   */\n      dup2\n        /* \"#utility.yul\":1755:1788   */\n      tag_208\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":1415:1923   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1807:1814   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1887:1889   */\n      0x40\n        /* \"#utility.yul\":1872:1890   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1859:1891   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1415:1923   */\n      jump\t// out\n        /* \"#utility.yul\":2344:2591   */\n    tag_63:\n        /* \"#utility.yul\":2403:2409   */\n      0x00\n        /* \"#utility.yul\":2456:2458   */\n      0x20\n        /* \"#utility.yul\":2444:2453   */\n      dup3\n        /* \"#utility.yul\":2435:2442   */\n      dup5\n        /* \"#utility.yul\":2431:2454   */\n      sub\n        /* \"#utility.yul\":2427:2459   */\n      slt\n        /* \"#utility.yul\":2424:2476   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":2472:2473   */\n      0x00\n        /* \"#utility.yul\":2469:2470   */\n      dup1\n        /* \"#utility.yul\":2462:2474   */\n      revert\n        /* \"#utility.yul\":2424:2476   */\n    tag_228:\n        /* \"#utility.yul\":2511:2520   */\n      dup2\n        /* \"#utility.yul\":2498:2521   */\n      calldataload\n        /* \"#utility.yul\":2530:2561   */\n      tag_213\n        /* \"#utility.yul\":2555:2560   */\n      dup2\n        /* \"#utility.yul\":2530:2561   */\n      tag_208\n      jump\t// in\n        /* \"#utility.yul\":2596:2725   */\n    tag_209:\n        /* \"#utility.yul\":2681:2699   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2674:2679   */\n      dup2\n        /* \"#utility.yul\":2670:2700   */\n      and\n        /* \"#utility.yul\":2663:2668   */\n      dup2\n        /* \"#utility.yul\":2660:2701   */\n      eq\n        /* \"#utility.yul\":2650:2719   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2715:2716   */\n      0x00\n        /* \"#utility.yul\":2712:2713   */\n      dup1\n        /* \"#utility.yul\":2705:2717   */\n      revert\n        /* \"#utility.yul\":2730:3378   */\n    tag_81:\n        /* \"#utility.yul\":2815:2821   */\n      0x00\n        /* \"#utility.yul\":2823:2829   */\n      dup1\n        /* \"#utility.yul\":2831:2837   */\n      0x00\n        /* \"#utility.yul\":2839:2845   */\n      dup1\n        /* \"#utility.yul\":2892:2895   */\n      0x80\n        /* \"#utility.yul\":2880:2889   */\n      dup6\n        /* \"#utility.yul\":2871:2878   */\n      dup8\n        /* \"#utility.yul\":2867:2890   */\n      sub\n        /* \"#utility.yul\":2863:2896   */\n      slt\n        /* \"#utility.yul\":2860:2913   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":2909:2910   */\n      0x00\n        /* \"#utility.yul\":2906:2907   */\n      dup1\n        /* \"#utility.yul\":2899:2911   */\n      revert\n        /* \"#utility.yul\":2860:2913   */\n    tag_233:\n        /* \"#utility.yul\":2948:2957   */\n      dup5\n        /* \"#utility.yul\":2935:2958   */\n      calldataload\n        /* \"#utility.yul\":2967:2997   */\n      tag_234\n        /* \"#utility.yul\":2991:2996   */\n      dup2\n        /* \"#utility.yul\":2967:2997   */\n      tag_209\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3016:3021   */\n      swap4\n      pop\n        /* \"#utility.yul\":3073:3075   */\n      0x20\n        /* \"#utility.yul\":3058:3076   */\n      dup6\n      add\n        /* \"#utility.yul\":3045:3077   */\n      calldataload\n        /* \"#utility.yul\":3086:3119   */\n      tag_235\n        /* \"#utility.yul\":3045:3077   */\n      dup2\n        /* \"#utility.yul\":3086:3119   */\n      tag_208\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":3138:3145   */\n      swap3\n      pop\n        /* \"#utility.yul\":3197:3199   */\n      0x40\n        /* \"#utility.yul\":3182:3200   */\n      dup6\n      add\n        /* \"#utility.yul\":3169:3201   */\n      calldataload\n        /* \"#utility.yul\":3210:3243   */\n      tag_236\n        /* \"#utility.yul\":3169:3201   */\n      dup2\n        /* \"#utility.yul\":3210:3243   */\n      tag_208\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2730:3378   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n        /* \"#utility.yul\":3262:3269   */\n      swap3\n      swap4\n        /* \"#utility.yul\":3342:3344   */\n      0x60\n        /* \"#utility.yul\":3327:3345   */\n      add\n        /* \"#utility.yul\":3314:3346   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":2730:3378   */\n      jump\t// out\n        /* \"#utility.yul\":3383:3771   */\n    tag_86:\n        /* \"#utility.yul\":3451:3457   */\n      0x00\n        /* \"#utility.yul\":3459:3465   */\n      dup1\n        /* \"#utility.yul\":3512:3514   */\n      0x40\n        /* \"#utility.yul\":3500:3509   */\n      dup4\n        /* \"#utility.yul\":3491:3498   */\n      dup6\n        /* \"#utility.yul\":3487:3510   */\n      sub\n        /* \"#utility.yul\":3483:3515   */\n      slt\n        /* \"#utility.yul\":3480:3532   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":3528:3529   */\n      0x00\n        /* \"#utility.yul\":3525:3526   */\n      dup1\n        /* \"#utility.yul\":3518:3530   */\n      revert\n        /* \"#utility.yul\":3480:3532   */\n    tag_238:\n        /* \"#utility.yul\":3567:3576   */\n      dup3\n        /* \"#utility.yul\":3554:3577   */\n      calldataload\n        /* \"#utility.yul\":3586:3617   */\n      tag_239\n        /* \"#utility.yul\":3611:3616   */\n      dup2\n        /* \"#utility.yul\":3586:3617   */\n      tag_208\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3636:3641   */\n      swap2\n      pop\n        /* \"#utility.yul\":3693:3695   */\n      0x20\n        /* \"#utility.yul\":3678:3696   */\n      dup4\n      add\n        /* \"#utility.yul\":3665:3697   */\n      calldataload\n        /* \"#utility.yul\":3706:3739   */\n      tag_240\n        /* \"#utility.yul\":3665:3697   */\n      dup2\n        /* \"#utility.yul\":3706:3739   */\n      tag_208\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3758:3765   */\n      dup1\n        /* \"#utility.yul\":3748:3765   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3383:3771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3776:4156   */\n    tag_91:\n        /* \"#utility.yul\":3855:3856   */\n      0x01\n        /* \"#utility.yul\":3851:3863   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3898:3910   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3919:3980   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":3973:3977   */\n      0x7f\n        /* \"#utility.yul\":3965:3971   */\n      dup3\n        /* \"#utility.yul\":3961:3978   */\n      and\n        /* \"#utility.yul\":3951:3978   */\n      swap2\n      pop\n        /* \"#utility.yul\":3919:3980   */\n    tag_242:\n        /* \"#utility.yul\":4026:4028   */\n      0x20\n        /* \"#utility.yul\":4018:4024   */\n      dup3\n        /* \"#utility.yul\":4015:4029   */\n      lt\n        /* \"#utility.yul\":3995:4013   */\n      dup2\n        /* \"#utility.yul\":3992:4030   */\n      sub\n        /* \"#utility.yul\":3989:4150   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":4072:4082   */\n      0x4e487b71\n        /* \"#utility.yul\":4067:4070   */\n      0xe0\n        /* \"#utility.yul\":4063:4083   */\n      shl\n        /* \"#utility.yul\":4060:4061   */\n      0x00\n        /* \"#utility.yul\":4053:4084   */\n      mstore\n        /* \"#utility.yul\":4107:4111   */\n      0x22\n        /* \"#utility.yul\":4104:4105   */\n      0x04\n        /* \"#utility.yul\":4097:4112   */\n      mstore\n        /* \"#utility.yul\":4135:4139   */\n      0x24\n        /* \"#utility.yul\":4132:4133   */\n      0x00\n        /* \"#utility.yul\":4125:4140   */\n      revert\n        /* \"#utility.yul\":3989:4150   */\n    tag_243:\n      pop\n        /* \"#utility.yul\":3776:4156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4161:4937   */\n    tag_116:\n        /* \"#utility.yul\":4258:4264   */\n      0x00\n        /* \"#utility.yul\":4318:4320   */\n      0x40\n        /* \"#utility.yul\":4306:4315   */\n      dup3\n        /* \"#utility.yul\":4297:4304   */\n      dup5\n        /* \"#utility.yul\":4293:4316   */\n      sub\n        /* \"#utility.yul\":4289:4321   */\n      slt\n        /* \"#utility.yul\":4333:4335   */\n      dup1\n        /* \"#utility.yul\":4330:4352   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":4348:4349   */\n      0x00\n        /* \"#utility.yul\":4345:4346   */\n      dup1\n        /* \"#utility.yul\":4338:4350   */\n      revert\n        /* \"#utility.yul\":4330:4352   */\n    tag_245:\n      pop\n        /* \"#utility.yul\":4397:4399   */\n      0x40\n        /* \"#utility.yul\":4391:4400   */\n      dup1\n      mload\n      swap1\n        /* \"#utility.yul\":4427:4442   */\n      dup2\n      add\n        /* \"#utility.yul\":4472:4490   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4457:4491   */\n      dup2\n      gt\n        /* \"#utility.yul\":4493:4515   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":4454:4516   */\n      or\n        /* \"#utility.yul\":4451:4636   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":4558:4568   */\n      0x4e487b71\n        /* \"#utility.yul\":4553:4556   */\n      0xe0\n        /* \"#utility.yul\":4549:4569   */\n      shl\n        /* \"#utility.yul\":4546:4547   */\n      0x00\n        /* \"#utility.yul\":4539:4570   */\n      mstore\n        /* \"#utility.yul\":4593:4597   */\n      0x41\n        /* \"#utility.yul\":4590:4591   */\n      0x04\n        /* \"#utility.yul\":4583:4598   */\n      mstore\n        /* \"#utility.yul\":4621:4625   */\n      0x24\n        /* \"#utility.yul\":4618:4619   */\n      0x00\n        /* \"#utility.yul\":4611:4626   */\n      revert\n        /* \"#utility.yul\":4451:4636   */\n    tag_246:\n        /* \"#utility.yul\":4652:4654   */\n      0x40\n        /* \"#utility.yul\":4645:4667   */\n      mstore\n        /* \"#utility.yul\":4689:4705   */\n      dup3\n      mload\n        /* \"#utility.yul\":4714:4744   */\n      tag_247\n        /* \"#utility.yul\":4689:4705   */\n      dup2\n        /* \"#utility.yul\":4714:4744   */\n      tag_209\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4753:4774   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4819:4821   */\n      0x20\n        /* \"#utility.yul\":4804:4822   */\n      dup4\n      add\n        /* \"#utility.yul\":4798:4823   */\n      mload\n        /* \"#utility.yul\":4832:4865   */\n      tag_248\n        /* \"#utility.yul\":4798:4823   */\n      dup2\n        /* \"#utility.yul\":4832:4865   */\n      tag_208\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4893:4895   */\n      0x20\n        /* \"#utility.yul\":4881:4896   */\n      dup3\n      add\n        /* \"#utility.yul\":4874:4906   */\n      mstore\n        /* \"#utility.yul\":4885:4891   */\n      swap4\n        /* \"#utility.yul\":4161:4937   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6649:6926   */\n    tag_172:\n        /* \"#utility.yul\":6716:6722   */\n      0x00\n        /* \"#utility.yul\":6769:6771   */\n      0x20\n        /* \"#utility.yul\":6757:6766   */\n      dup3\n        /* \"#utility.yul\":6748:6755   */\n      dup5\n        /* \"#utility.yul\":6744:6767   */\n      sub\n        /* \"#utility.yul\":6740:6772   */\n      slt\n        /* \"#utility.yul\":6737:6789   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":6785:6786   */\n      0x00\n        /* \"#utility.yul\":6782:6783   */\n      dup1\n        /* \"#utility.yul\":6775:6787   */\n      revert\n        /* \"#utility.yul\":6737:6789   */\n    tag_255:\n        /* \"#utility.yul\":6817:6826   */\n      dup2\n        /* \"#utility.yul\":6811:6827   */\n      mload\n        /* \"#utility.yul\":6870:6875   */\n      dup1\n        /* \"#utility.yul\":6863:6876   */\n      iszero\n        /* \"#utility.yul\":6856:6877   */\n      iszero\n        /* \"#utility.yul\":6849:6854   */\n      dup2\n        /* \"#utility.yul\":6846:6878   */\n      eq\n        /* \"#utility.yul\":6836:6896   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":6892:6893   */\n      0x00\n        /* \"#utility.yul\":6889:6890   */\n      dup1\n        /* \"#utility.yul\":6882:6894   */\n      revert\n        /* \"#utility.yul\":6931:7153   */\n    tag_177:\n        /* \"#utility.yul\":6996:7005   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7017:7027   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7014:7147   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":7069:7079   */\n      0x4e487b71\n        /* \"#utility.yul\":7064:7067   */\n      0xe0\n        /* \"#utility.yul\":7060:7080   */\n      shl\n        /* \"#utility.yul\":7057:7058   */\n      0x00\n        /* \"#utility.yul\":7050:7081   */\n      mstore\n        /* \"#utility.yul\":7104:7108   */\n      0x11\n        /* \"#utility.yul\":7101:7102   */\n      0x04\n        /* \"#utility.yul\":7094:7109   */\n      mstore\n        /* \"#utility.yul\":7132:7136   */\n      0x24\n        /* \"#utility.yul\":7129:7130   */\n      0x00\n        /* \"#utility.yul\":7122:7137   */\n      revert\n        /* \"#utility.yul\":7158:7564   */\n    tag_186:\n        /* \"#utility.yul\":7369:7387   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7361:7367   */\n      dup5\n        /* \"#utility.yul\":7357:7388   */\n      and\n        /* \"#utility.yul\":7346:7355   */\n      dup2\n        /* \"#utility.yul\":7339:7389   */\n      mstore\n        /* \"#utility.yul\":7425:7427   */\n      0x60\n        /* \"#utility.yul\":7420:7422   */\n      0x20\n        /* \"#utility.yul\":7409:7418   */\n      dup3\n        /* \"#utility.yul\":7405:7423   */\n      add\n        /* \"#utility.yul\":7398:7428   */\n      mstore\n        /* \"#utility.yul\":7320:7324   */\n      0x00\n        /* \"#utility.yul\":7445:7490   */\n      tag_260\n        /* \"#utility.yul\":7486:7488   */\n      0x60\n        /* \"#utility.yul\":7475:7484   */\n      dup4\n        /* \"#utility.yul\":7471:7489   */\n      add\n        /* \"#utility.yul\":7463:7469   */\n      dup6\n        /* \"#utility.yul\":7445:7490   */\n      tag_207\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7437:7490   */\n      swap1\n      pop\n        /* \"#utility.yul\":7538:7556   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7530:7536   */\n      dup4\n        /* \"#utility.yul\":7526:7557   */\n      and\n        /* \"#utility.yul\":7521:7523   */\n      0x40\n        /* \"#utility.yul\":7510:7519   */\n      dup4\n        /* \"#utility.yul\":7506:7524   */\n      add\n        /* \"#utility.yul\":7499:7558   */\n      mstore\n        /* \"#utility.yul\":7158:7564   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7569:7753   */\n    tag_190:\n        /* \"#utility.yul\":7639:7645   */\n      0x00\n        /* \"#utility.yul\":7692:7694   */\n      0x20\n        /* \"#utility.yul\":7680:7689   */\n      dup3\n        /* \"#utility.yul\":7671:7678   */\n      dup5\n        /* \"#utility.yul\":7667:7690   */\n      sub\n        /* \"#utility.yul\":7663:7695   */\n      slt\n        /* \"#utility.yul\":7660:7712   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":7708:7709   */\n      0x00\n        /* \"#utility.yul\":7705:7706   */\n      dup1\n        /* \"#utility.yul\":7698:7710   */\n      revert\n        /* \"#utility.yul\":7660:7712   */\n    tag_262:\n      pop\n        /* \"#utility.yul\":7731:7747   */\n      mload\n      swap2\n        /* \"#utility.yul\":7569:7753   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8111:8695   */\n    tag_196:\n        /* \"#utility.yul\":8374:8392   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8362:8393   */\n      dup7\n      and\n        /* \"#utility.yul\":8344:8394   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8442:8446   */\n      0xff\n        /* \"#utility.yul\":8430:8447   */\n      dup6\n      and\n        /* \"#utility.yul\":8425:8427   */\n      0x20\n        /* \"#utility.yul\":8410:8428   */\n      dup3\n      add\n        /* \"#utility.yul\":8403:8448   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8484:8516   */\n      dup5\n      and\n        /* \"#utility.yul\":8479:8481   */\n      0x40\n        /* \"#utility.yul\":8464:8482   */\n      dup3\n      add\n        /* \"#utility.yul\":8457:8517   */\n      mstore\n        /* \"#utility.yul\":8504:8507   */\n      0xa0\n        /* \"#utility.yul\":8548:8550   */\n      0x60\n        /* \"#utility.yul\":8533:8551   */\n      dup3\n      add\n        /* \"#utility.yul\":8526:8557   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":8574:8620   */\n      tag_265\n      swap1\n        /* \"#utility.yul\":8600:8619   */\n      dup4\n      add\n        /* \"#utility.yul\":8592:8598   */\n      dup6\n        /* \"#utility.yul\":8574:8620   */\n      tag_207\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":8566:8620   */\n      swap1\n      pop\n        /* \"#utility.yul\":8669:8687   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8661:8667   */\n      dup4\n        /* \"#utility.yul\":8657:8688   */\n      and\n        /* \"#utility.yul\":8651:8654   */\n      0x80\n        /* \"#utility.yul\":8640:8649   */\n      dup4\n        /* \"#utility.yul\":8636:8655   */\n      add\n        /* \"#utility.yul\":8629:8689   */\n      mstore\n        /* \"#utility.yul\":8111:8695   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200c117be31930a09c16a0d20458dc7ecb44ce2b68fb44af9f81cc4ce2578f186364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1405": {
									"entryPoint": null,
									"id": 1405,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_325": {
									"entryPoint": null,
									"id": 325,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_859": {
									"entryPoint": null,
									"id": 859,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_1450": {
									"entryPoint": 524,
									"id": 1450,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setDefaultConfLevel_553": {
									"entryPoint": 362,
									"id": 553,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setOmniPortal_580": {
									"entryPoint": 198,
									"id": 580,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1209": {
									"entryPoint": 608,
									"id": 1209,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isValid_203": {
									"entryPoint": 580,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_bool_fromMemory": {
									"entryPoint": 1059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1281,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6211:11",
										"nodeType": "YulBlock",
										"src": "0:6211:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:11",
													"nodeType": "YulBlock",
													"src": "46:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:11",
																		"nodeType": "YulLiteral",
																		"src": "63:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:11",
																				"nodeType": "YulLiteral",
																				"src": "70:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:11",
																				"nodeType": "YulLiteral",
																				"src": "75:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:11"
																		},
																		"nativeSrc": "66:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:11"
																},
																"nativeSrc": "56:31:11",
																"nodeType": "YulFunctionCall",
																"src": "56:31:11"
															},
															"nativeSrc": "56:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:11",
																		"nodeType": "YulLiteral",
																		"src": "103:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:11",
																		"nodeType": "YulLiteral",
																		"src": "106:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:11"
																},
																"nativeSrc": "96:15:11",
																"nodeType": "YulFunctionCall",
																"src": "96:15:11"
															},
															"nativeSrc": "96:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:11",
																		"nodeType": "YulLiteral",
																		"src": "127:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:11",
																		"nodeType": "YulLiteral",
																		"src": "130:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:11"
																},
																"nativeSrc": "120:15:11",
																"nodeType": "YulFunctionCall",
																"src": "120:15:11"
															},
															"nativeSrc": "120:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:11"
											},
											{
												"body": {
													"nativeSrc": "210:659:11",
													"nodeType": "YulBlock",
													"src": "210:659:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:11",
																"nodeType": "YulBlock",
																"src": "259:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:11",
																					"nodeType": "YulLiteral",
																					"src": "268:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:11",
																					"nodeType": "YulLiteral",
																					"src": "271:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:11"
																			},
																			"nativeSrc": "261:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:11"
																		},
																		"nativeSrc": "261:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:11",
																						"nodeType": "YulLiteral",
																						"src": "246:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:11"
																				},
																				"nativeSrc": "234:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:11"
																		},
																		"nativeSrc": "230:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:11"
																},
																"nativeSrc": "223:35:11",
																"nodeType": "YulFunctionCall",
																"src": "223:35:11"
															},
															"nativeSrc": "220:55:11",
															"nodeType": "YulIf",
															"src": "220:55:11"
														},
														{
															"nativeSrc": "284:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:11"
																},
																"nativeSrc": "298:13:11",
																"nodeType": "YulFunctionCall",
																"src": "298:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:11",
																	"nodeType": "YulTypedName",
																	"src": "288:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:11",
																"nodeType": "YulBlock",
																"src": "354:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:11"
																			},
																			"nativeSrc": "356:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:11"
																		},
																		"nativeSrc": "356:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:11",
																						"nodeType": "YulLiteral",
																						"src": "342:2:11",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:11",
																						"nodeType": "YulLiteral",
																						"src": "346:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:11"
																				},
																				"nativeSrc": "338:10:11",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:11",
																				"nodeType": "YulLiteral",
																				"src": "350:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:11"
																		},
																		"nativeSrc": "334:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:11"
																},
																"nativeSrc": "323:30:11",
																"nodeType": "YulFunctionCall",
																"src": "323:30:11"
															},
															"nativeSrc": "320:56:11",
															"nodeType": "YulIf",
															"src": "320:56:11"
														},
														{
															"nativeSrc": "385:23:11",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:11",
																		"nodeType": "YulLiteral",
																		"src": "405:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:11"
																},
																"nativeSrc": "399:9:11",
																"nodeType": "YulFunctionCall",
																"src": "399:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:11",
																	"nodeType": "YulTypedName",
																	"src": "389:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:11",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:11",
																										"nodeType": "YulLiteral",
																										"src": "471:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:11"
																								},
																								"nativeSrc": "459:17:11",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:11"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:11",
																										"nodeType": "YulLiteral",
																										"src": "482:2:11",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:11"
																								},
																								"nativeSrc": "478:7:11",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:11"
																						},
																						"nativeSrc": "455:31:11",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:11",
																						"nodeType": "YulLiteral",
																						"src": "488:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:11"
																				},
																				"nativeSrc": "451:40:11",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:11",
																						"nodeType": "YulLiteral",
																						"src": "497:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:11"
																				},
																				"nativeSrc": "493:7:11",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:11"
																		},
																		"nativeSrc": "447:54:11",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:11"
																},
																"nativeSrc": "435:67:11",
																"nodeType": "YulFunctionCall",
																"src": "435:67:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:11",
																	"nodeType": "YulTypedName",
																	"src": "421:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:11",
																"nodeType": "YulBlock",
																"src": "577:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:11"
																			},
																			"nativeSrc": "579:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:11"
																		},
																		"nativeSrc": "579:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:11",
																								"nodeType": "YulLiteral",
																								"src": "540:2:11",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:11",
																								"nodeType": "YulLiteral",
																								"src": "544:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:11"
																						},
																						"nativeSrc": "536:10:11",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:11",
																						"nodeType": "YulLiteral",
																						"src": "548:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:11"
																				},
																				"nativeSrc": "532:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:11"
																		},
																		"nativeSrc": "517:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:11"
																		},
																		"nativeSrc": "553:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:11"
																},
																"nativeSrc": "514:62:11",
																"nodeType": "YulFunctionCall",
																"src": "514:62:11"
															},
															"nativeSrc": "511:88:11",
															"nodeType": "YulIf",
															"src": "511:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:11",
																		"nodeType": "YulLiteral",
																		"src": "615:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:11"
																},
																"nativeSrc": "608:22:11",
																"nodeType": "YulFunctionCall",
																"src": "608:22:11"
															},
															"nativeSrc": "608:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:11"
																},
																"nativeSrc": "639:22:11",
																"nodeType": "YulFunctionCall",
																"src": "639:22:11"
															},
															"nativeSrc": "639:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:11"
														},
														{
															"body": {
																"nativeSrc": "713:16:11",
																"nodeType": "YulBlock",
																"src": "713:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:11",
																					"nodeType": "YulLiteral",
																					"src": "722:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:11",
																					"nodeType": "YulLiteral",
																					"src": "725:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:11"
																			},
																			"nativeSrc": "715:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:11"
																		},
																		"nativeSrc": "715:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:11"
																				},
																				"nativeSrc": "680:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:11",
																				"nodeType": "YulLiteral",
																				"src": "701:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:11"
																		},
																		"nativeSrc": "676:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:11"
																},
																"nativeSrc": "673:39:11",
																"nodeType": "YulFunctionCall",
																"src": "673:39:11"
															},
															"nativeSrc": "670:59:11",
															"nodeType": "YulIf",
															"src": "670:59:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "748:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "756:4:11",
																				"nodeType": "YulLiteral",
																				"src": "756:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "744:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "744:3:11"
																		},
																		"nativeSrc": "744:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "744:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "767:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:4:11",
																				"nodeType": "YulLiteral",
																				"src": "775:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:11"
																		},
																		"nativeSrc": "763:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "763:17:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "738:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:11"
																},
																"nativeSrc": "738:51:11",
																"nodeType": "YulFunctionCall",
																"src": "738:51:11"
															},
															"nativeSrc": "738:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "738:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "813:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "821:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "821:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "809:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:11"
																				},
																				"nativeSrc": "809:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "809:19:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:4:11",
																				"nodeType": "YulLiteral",
																				"src": "830:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "805:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:11"
																		},
																		"nativeSrc": "805:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "805:30:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "837:1:11",
																		"nodeType": "YulLiteral",
																		"src": "837:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:11"
																},
																"nativeSrc": "798:41:11",
																"nodeType": "YulFunctionCall",
																"src": "798:41:11"
															},
															"nativeSrc": "798:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "798:41:11"
														},
														{
															"nativeSrc": "848:15:11",
															"nodeType": "YulAssignment",
															"src": "848:15:11",
															"value": {
																"name": "memPtr",
																"nativeSrc": "857:6:11",
																"nodeType": "YulIdentifier",
																"src": "857:6:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "848:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:723:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:11",
														"nodeType": "YulTypedName",
														"src": "184:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:11",
														"nodeType": "YulTypedName",
														"src": "192:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:11",
														"nodeType": "YulTypedName",
														"src": "200:5:11",
														"type": ""
													}
												],
												"src": "146:723:11"
											},
											{
												"body": {
													"nativeSrc": "1040:804:11",
													"nodeType": "YulBlock",
													"src": "1040:804:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1087:16:11",
																"nodeType": "YulBlock",
																"src": "1087:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1096:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1096:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1099:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1099:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1089:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1089:6:11"
																			},
																			"nativeSrc": "1089:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1089:12:11"
																		},
																		"nativeSrc": "1089:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1089:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1061:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1061:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1070:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1070:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1057:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1057:3:11"
																		},
																		"nativeSrc": "1057:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1057:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1082:3:11",
																		"nodeType": "YulLiteral",
																		"src": "1082:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1053:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1053:3:11"
																},
																"nativeSrc": "1053:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1053:33:11"
															},
															"nativeSrc": "1050:53:11",
															"nodeType": "YulIf",
															"src": "1050:53:11"
														},
														{
															"nativeSrc": "1112:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1112:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1132:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1132:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1126:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1126:5:11"
																},
																"nativeSrc": "1126:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1126:16:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1116:6:11",
																	"nodeType": "YulTypedName",
																	"src": "1116:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1185:16:11",
																"nodeType": "YulBlock",
																"src": "1185:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1194:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1194:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1197:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1197:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1187:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1187:6:11"
																			},
																			"nativeSrc": "1187:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1187:12:11"
																		},
																		"nativeSrc": "1187:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1187:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1157:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1157:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1173:2:11",
																						"nodeType": "YulLiteral",
																						"src": "1173:2:11",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1177:1:11",
																						"nodeType": "YulLiteral",
																						"src": "1177:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1169:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1169:3:11"
																				},
																				"nativeSrc": "1169:10:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1181:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1181:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1165:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1165:3:11"
																		},
																		"nativeSrc": "1165:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1165:18:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1154:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1154:2:11"
																},
																"nativeSrc": "1154:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1154:30:11"
															},
															"nativeSrc": "1151:50:11",
															"nodeType": "YulIf",
															"src": "1151:50:11"
														},
														{
															"nativeSrc": "1210:71:11",
															"nodeType": "YulAssignment",
															"src": "1210:71:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1253:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1253:9:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1264:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1264:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1249:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1249:3:11"
																		},
																		"nativeSrc": "1249:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1249:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1273:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "1273:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1220:28:11",
																	"nodeType": "YulIdentifier",
																	"src": "1220:28:11"
																},
																"nativeSrc": "1220:61:11",
																"nodeType": "YulFunctionCall",
																"src": "1220:61:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1210:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1210:6:11"
																}
															]
														},
														{
															"nativeSrc": "1290:41:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1290:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1316:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1316:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1327:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1327:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1312:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1312:3:11"
																		},
																		"nativeSrc": "1312:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1312:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1306:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1306:5:11"
																},
																"nativeSrc": "1306:25:11",
																"nodeType": "YulFunctionCall",
																"src": "1306:25:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1294:8:11",
																	"nodeType": "YulTypedName",
																	"src": "1294:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1376:16:11",
																"nodeType": "YulBlock",
																"src": "1376:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:11"
																			},
																			"nativeSrc": "1378:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:11"
																		},
																		"nativeSrc": "1378:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1346:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "1346:8:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1364:2:11",
																						"nodeType": "YulLiteral",
																						"src": "1364:2:11",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1368:1:11",
																						"nodeType": "YulLiteral",
																						"src": "1368:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1360:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1360:3:11"
																				},
																				"nativeSrc": "1360:10:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1360:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1372:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1372:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1356:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1356:3:11"
																		},
																		"nativeSrc": "1356:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1356:18:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1343:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1343:2:11"
																},
																"nativeSrc": "1343:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1343:32:11"
															},
															"nativeSrc": "1340:52:11",
															"nodeType": "YulIf",
															"src": "1340:52:11"
														},
														{
															"nativeSrc": "1401:73:11",
															"nodeType": "YulAssignment",
															"src": "1401:73:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1444:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1444:9:11"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1455:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "1455:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1440:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:11"
																		},
																		"nativeSrc": "1440:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1440:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1466:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "1466:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1411:28:11",
																	"nodeType": "YulIdentifier",
																	"src": "1411:28:11"
																},
																"nativeSrc": "1411:63:11",
																"nodeType": "YulFunctionCall",
																"src": "1411:63:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1401:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:11"
																}
															]
														},
														{
															"nativeSrc": "1483:35:11",
															"nodeType": "YulAssignment",
															"src": "1483:35:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1503:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1503:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1514:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1514:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1499:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:11"
																		},
																		"nativeSrc": "1499:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1493:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1493:5:11"
																},
																"nativeSrc": "1493:25:11",
																"nodeType": "YulFunctionCall",
																"src": "1493:25:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1483:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1483:6:11"
																}
															]
														},
														{
															"nativeSrc": "1527:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1527:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:11"
																		},
																		"nativeSrc": "1546:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1540:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1540:5:11"
																},
																"nativeSrc": "1540:25:11",
																"nodeType": "YulFunctionCall",
																"src": "1540:25:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1531:5:11",
																	"nodeType": "YulTypedName",
																	"src": "1531:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1628:16:11",
																"nodeType": "YulBlock",
																"src": "1628:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1637:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1637:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1640:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1640:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1630:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1630:6:11"
																			},
																			"nativeSrc": "1630:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1630:12:11"
																		},
																		"nativeSrc": "1630:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1630:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1587:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1587:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1598:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1598:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1613:3:11",
																										"nodeType": "YulLiteral",
																										"src": "1613:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1618:1:11",
																										"nodeType": "YulLiteral",
																										"src": "1618:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1609:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "1609:3:11"
																								},
																								"nativeSrc": "1609:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "1609:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1622:1:11",
																								"nodeType": "YulLiteral",
																								"src": "1622:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1605:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1605:3:11"
																						},
																						"nativeSrc": "1605:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1605:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1594:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1594:3:11"
																				},
																				"nativeSrc": "1594:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1594:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1584:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1584:2:11"
																		},
																		"nativeSrc": "1584:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1584:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1577:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:11"
																},
																"nativeSrc": "1577:50:11",
																"nodeType": "YulFunctionCall",
																"src": "1577:50:11"
															},
															"nativeSrc": "1574:70:11",
															"nodeType": "YulIf",
															"src": "1574:70:11"
														},
														{
															"nativeSrc": "1653:15:11",
															"nodeType": "YulAssignment",
															"src": "1653:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "1663:5:11",
																"nodeType": "YulIdentifier",
																"src": "1663:5:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1653:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1653:6:11"
																}
															]
														},
														{
															"nativeSrc": "1677:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1677:16:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1692:1:11",
																"nodeType": "YulLiteral",
																"src": "1692:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1681:7:11",
																	"nodeType": "YulTypedName",
																	"src": "1681:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1702:37:11",
															"nodeType": "YulAssignment",
															"src": "1702:37:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1723:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1723:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1734:3:11",
																				"nodeType": "YulLiteral",
																				"src": "1734:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1719:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1719:3:11"
																		},
																		"nativeSrc": "1719:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1719:19:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1713:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1713:5:11"
																},
																"nativeSrc": "1713:26:11",
																"nodeType": "YulFunctionCall",
																"src": "1713:26:11"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1702:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1702:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1796:16:11",
																"nodeType": "YulBlock",
																"src": "1796:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1805:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1805:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1808:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1808:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1798:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1798:6:11"
																			},
																			"nativeSrc": "1798:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1798:12:11"
																		},
																		"nativeSrc": "1798:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1798:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "1761:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1761:7:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_1",
																								"nativeSrc": "1784:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "1784:7:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "1777:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "1777:6:11"
																						},
																						"nativeSrc": "1777:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1777:15:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1770:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "1770:6:11"
																				},
																				"nativeSrc": "1770:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1770:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1758:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1758:2:11"
																		},
																		"nativeSrc": "1758:36:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1758:36:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1751:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1751:6:11"
																},
																"nativeSrc": "1751:44:11",
																"nodeType": "YulFunctionCall",
																"src": "1751:44:11"
															},
															"nativeSrc": "1748:64:11",
															"nodeType": "YulIf",
															"src": "1748:64:11"
														},
														{
															"nativeSrc": "1821:17:11",
															"nodeType": "YulAssignment",
															"src": "1821:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "1831:7:11",
																"nodeType": "YulIdentifier",
																"src": "1831:7:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1821:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_bool_fromMemory",
												"nativeSrc": "874:970:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "974:9:11",
														"nodeType": "YulTypedName",
														"src": "974:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "985:7:11",
														"nodeType": "YulTypedName",
														"src": "985:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "997:6:11",
														"nodeType": "YulTypedName",
														"src": "997:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1005:6:11",
														"nodeType": "YulTypedName",
														"src": "1005:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1013:6:11",
														"nodeType": "YulTypedName",
														"src": "1013:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1021:6:11",
														"nodeType": "YulTypedName",
														"src": "1021:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1029:6:11",
														"nodeType": "YulTypedName",
														"src": "1029:6:11",
														"type": ""
													}
												],
												"src": "874:970:11"
											},
											{
												"body": {
													"nativeSrc": "1904:325:11",
													"nodeType": "YulBlock",
													"src": "1904:325:11",
													"statements": [
														{
															"nativeSrc": "1914:22:11",
															"nodeType": "YulAssignment",
															"src": "1914:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1931:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1931:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1924:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1924:3:11"
																},
																"nativeSrc": "1924:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1924:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1914:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1914:6:11"
																}
															]
														},
														{
															"nativeSrc": "1945:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1945:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1975:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1975:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1981:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1981:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1971:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1971:3:11"
																},
																"nativeSrc": "1971:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1971:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1949:18:11",
																	"nodeType": "YulTypedName",
																	"src": "1949:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2022:31:11",
																"nodeType": "YulBlock",
																"src": "2022:31:11",
																"statements": [
																	{
																		"nativeSrc": "2024:27:11",
																		"nodeType": "YulAssignment",
																		"src": "2024:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2038:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "2038:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2046:4:11",
																					"nodeType": "YulLiteral",
																					"src": "2046:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2034:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2034:3:11"
																			},
																			"nativeSrc": "2034:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2034:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2024:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2024:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2002:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "2002:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1995:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1995:6:11"
																},
																"nativeSrc": "1995:26:11",
																"nodeType": "YulFunctionCall",
																"src": "1995:26:11"
															},
															"nativeSrc": "1992:61:11",
															"nodeType": "YulIf",
															"src": "1992:61:11"
														},
														{
															"body": {
																"nativeSrc": "2112:111:11",
																"nodeType": "YulBlock",
																"src": "2112:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2133:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2133:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2140:3:11",
																							"nodeType": "YulLiteral",
																							"src": "2140:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2145:10:11",
																							"nodeType": "YulLiteral",
																							"src": "2145:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2136:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "2136:3:11"
																					},
																					"nativeSrc": "2136:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2126:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2126:6:11"
																			},
																			"nativeSrc": "2126:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2126:31:11"
																		},
																		"nativeSrc": "2126:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2126:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2177:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2177:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2180:4:11",
																					"nodeType": "YulLiteral",
																					"src": "2180:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2170:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2170:6:11"
																			},
																			"nativeSrc": "2170:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2170:15:11"
																		},
																		"nativeSrc": "2170:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2170:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2205:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2205:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2208:4:11",
																					"nodeType": "YulLiteral",
																					"src": "2208:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2198:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2198:6:11"
																			},
																			"nativeSrc": "2198:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2198:15:11"
																		},
																		"nativeSrc": "2198:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2198:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2068:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "2068:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2091:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2091:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2099:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2099:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2088:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2088:2:11"
																		},
																		"nativeSrc": "2088:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2088:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2065:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2065:2:11"
																},
																"nativeSrc": "2065:38:11",
																"nodeType": "YulFunctionCall",
																"src": "2065:38:11"
															},
															"nativeSrc": "2062:161:11",
															"nodeType": "YulIf",
															"src": "2062:161:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1849:380:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1884:4:11",
														"nodeType": "YulTypedName",
														"src": "1884:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1893:6:11",
														"nodeType": "YulTypedName",
														"src": "1893:6:11",
														"type": ""
													}
												],
												"src": "1849:380:11"
											},
											{
												"body": {
													"nativeSrc": "2290:65:11",
													"nodeType": "YulBlock",
													"src": "2290:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2307:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2307:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2310:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2310:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2300:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2300:6:11"
																},
																"nativeSrc": "2300:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2300:14:11"
															},
															"nativeSrc": "2300:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "2300:14:11"
														},
														{
															"nativeSrc": "2323:26:11",
															"nodeType": "YulAssignment",
															"src": "2323:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2341:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2341:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2344:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2344:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2331:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2331:9:11"
																},
																"nativeSrc": "2331:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2331:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2323:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2323:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2234:121:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2273:3:11",
														"nodeType": "YulTypedName",
														"src": "2273:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2281:4:11",
														"nodeType": "YulTypedName",
														"src": "2281:4:11",
														"type": ""
													}
												],
												"src": "2234:121:11"
											},
											{
												"body": {
													"nativeSrc": "2441:437:11",
													"nodeType": "YulBlock",
													"src": "2441:437:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2474:398:11",
																"nodeType": "YulBlock",
																"src": "2474:398:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2495:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2495:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2498:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2498:5:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2488:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2488:6:11"
																			},
																			"nativeSrc": "2488:16:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2488:16:11"
																		},
																		"nativeSrc": "2488:16:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:16:11"
																	},
																	{
																		"nativeSrc": "2517:30:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2517:30:11",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2539:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2539:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2542:4:11",
																					"nodeType": "YulLiteral",
																					"src": "2542:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2529:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2529:9:11"
																			},
																			"nativeSrc": "2529:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2529:18:11"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2521:4:11",
																				"nodeType": "YulTypedName",
																				"src": "2521:4:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2560:57:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2560:57:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2583:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "2583:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2593:1:11",
																							"nodeType": "YulLiteral",
																							"src": "2593:1:11",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2600:10:11",
																									"nodeType": "YulIdentifier",
																									"src": "2600:10:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2612:2:11",
																									"nodeType": "YulLiteral",
																									"src": "2612:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2596:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "2596:3:11"
																							},
																							"nativeSrc": "2596:19:11",
																							"nodeType": "YulFunctionCall",
																							"src": "2596:19:11"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2589:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "2589:3:11"
																					},
																					"nativeSrc": "2589:27:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2589:27:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2579:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2579:3:11"
																			},
																			"nativeSrc": "2579:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2579:38:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2564:11:11",
																				"nodeType": "YulTypedName",
																				"src": "2564:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2654:23:11",
																			"nodeType": "YulBlock",
																			"src": "2654:23:11",
																			"statements": [
																				{
																					"nativeSrc": "2656:19:11",
																					"nodeType": "YulAssignment",
																					"src": "2656:19:11",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2671:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "2671:4:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2656:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "2656:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2636:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "2636:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2648:4:11",
																					"nodeType": "YulLiteral",
																					"src": "2648:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2633:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "2633:2:11"
																			},
																			"nativeSrc": "2633:20:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2633:20:11"
																		},
																		"nativeSrc": "2630:47:11",
																		"nodeType": "YulIf",
																		"src": "2630:47:11"
																	},
																	{
																		"nativeSrc": "2690:41:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2690:41:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2704:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "2704:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2714:1:11",
																							"nodeType": "YulLiteral",
																							"src": "2714:1:11",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2721:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "2721:3:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2726:2:11",
																									"nodeType": "YulLiteral",
																									"src": "2726:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2717:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "2717:3:11"
																							},
																							"nativeSrc": "2717:12:11",
																							"nodeType": "YulFunctionCall",
																							"src": "2717:12:11"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2710:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "2710:3:11"
																					},
																					"nativeSrc": "2710:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2710:20:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2700:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2700:3:11"
																			},
																			"nativeSrc": "2700:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2700:31:11"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2694:2:11",
																				"nodeType": "YulTypedName",
																				"src": "2694:2:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2744:24:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2744:24:11",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2757:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "2757:11:11"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2748:5:11",
																				"nodeType": "YulTypedName",
																				"src": "2748:5:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2842:20:11",
																			"nodeType": "YulBlock",
																			"src": "2842:20:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2851:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "2851:5:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2858:1:11",
																								"nodeType": "YulLiteral",
																								"src": "2858:1:11",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2844:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "2844:6:11"
																						},
																						"nativeSrc": "2844:16:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2844:16:11"
																					},
																					"nativeSrc": "2844:16:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "2844:16:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2792:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2792:5:11"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2799:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "2799:2:11"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2789:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "2789:2:11"
																			},
																			"nativeSrc": "2789:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2789:13:11"
																		},
																		"nativeSrc": "2781:81:11",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2803:26:11",
																			"nodeType": "YulBlock",
																			"src": "2803:26:11",
																			"statements": [
																				{
																					"nativeSrc": "2805:22:11",
																					"nodeType": "YulAssignment",
																					"src": "2805:22:11",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2818:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "2818:5:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2825:1:11",
																								"nodeType": "YulLiteral",
																								"src": "2825:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2814:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "2814:3:11"
																						},
																						"nativeSrc": "2814:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2814:13:11"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2805:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "2805:5:11"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2785:3:11",
																			"nodeType": "YulBlock",
																			"src": "2785:3:11",
																			"statements": []
																		},
																		"src": "2781:81:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2457:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2457:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2462:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2462:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2454:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2454:2:11"
																},
																"nativeSrc": "2454:11:11",
																"nodeType": "YulFunctionCall",
																"src": "2454:11:11"
															},
															"nativeSrc": "2451:421:11",
															"nodeType": "YulIf",
															"src": "2451:421:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2360:518:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2413:5:11",
														"nodeType": "YulTypedName",
														"src": "2413:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2420:3:11",
														"nodeType": "YulTypedName",
														"src": "2420:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2425:10:11",
														"nodeType": "YulTypedName",
														"src": "2425:10:11",
														"type": ""
													}
												],
												"src": "2360:518:11"
											},
											{
												"body": {
													"nativeSrc": "2968:81:11",
													"nodeType": "YulBlock",
													"src": "2968:81:11",
													"statements": [
														{
															"nativeSrc": "2978:65:11",
															"nodeType": "YulAssignment",
															"src": "2978:65:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2993:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2993:4:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3011:1:11",
																										"nodeType": "YulLiteral",
																										"src": "3011:1:11",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "3014:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "3014:3:11"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3007:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3007:3:11"
																								},
																								"nativeSrc": "3007:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3007:11:11"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3024:1:11",
																										"nodeType": "YulLiteral",
																										"src": "3024:1:11",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3020:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3020:3:11"
																								},
																								"nativeSrc": "3020:6:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3020:6:11"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "3003:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3003:3:11"
																						},
																						"nativeSrc": "3003:24:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3003:24:11"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2999:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2999:3:11"
																				},
																				"nativeSrc": "2999:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2999:29:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2989:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2989:3:11"
																		},
																		"nativeSrc": "2989:40:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2989:40:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3035:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3035:1:11",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3038:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3038:3:11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3031:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3031:3:11"
																		},
																		"nativeSrc": "3031:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3031:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2986:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2986:2:11"
																},
																"nativeSrc": "2986:57:11",
																"nodeType": "YulFunctionCall",
																"src": "2986:57:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2978:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2978:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2883:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2945:4:11",
														"nodeType": "YulTypedName",
														"src": "2945:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2951:3:11",
														"nodeType": "YulTypedName",
														"src": "2951:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2959:4:11",
														"nodeType": "YulTypedName",
														"src": "2959:4:11",
														"type": ""
													}
												],
												"src": "2883:166:11"
											},
											{
												"body": {
													"nativeSrc": "3150:1203:11",
													"nodeType": "YulBlock",
													"src": "3150:1203:11",
													"statements": [
														{
															"nativeSrc": "3160:24:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3160:24:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3180:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3180:3:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3174:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3174:5:11"
																},
																"nativeSrc": "3174:10:11",
																"nodeType": "YulFunctionCall",
																"src": "3174:10:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3164:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3164:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3227:22:11",
																"nodeType": "YulBlock",
																"src": "3227:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3229:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "3229:16:11"
																			},
																			"nativeSrc": "3229:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3229:18:11"
																		},
																		"nativeSrc": "3229:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3229:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3199:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3215:2:11",
																						"nodeType": "YulLiteral",
																						"src": "3215:2:11",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3219:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3219:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3211:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3211:3:11"
																				},
																				"nativeSrc": "3211:10:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3211:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3223:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3223:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3207:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3207:3:11"
																		},
																		"nativeSrc": "3207:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3207:18:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3196:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3196:2:11"
																},
																"nativeSrc": "3196:30:11",
																"nodeType": "YulFunctionCall",
																"src": "3196:30:11"
															},
															"nativeSrc": "3193:56:11",
															"nodeType": "YulIf",
															"src": "3193:56:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3302:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3302:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3340:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "3340:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3334:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3334:5:11"
																				},
																				"nativeSrc": "3334:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3334:11:11"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3308:25:11",
																			"nodeType": "YulIdentifier",
																			"src": "3308:25:11"
																		},
																		"nativeSrc": "3308:38:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:38:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3348:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3348:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3258:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3258:43:11"
																},
																"nativeSrc": "3258:97:11",
																"nodeType": "YulFunctionCall",
																"src": "3258:97:11"
															},
															"nativeSrc": "3258:97:11",
															"nodeType": "YulExpressionStatement",
															"src": "3258:97:11"
														},
														{
															"nativeSrc": "3364:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3364:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3381:1:11",
																"nodeType": "YulLiteral",
																"src": "3381:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3368:9:11",
																	"nodeType": "YulTypedName",
																	"src": "3368:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3391:17:11",
															"nodeType": "YulAssignment",
															"src": "3391:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3404:4:11",
																"nodeType": "YulLiteral",
																"src": "3404:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3391:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "3391:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3454:642:11",
																		"nodeType": "YulBlock",
																		"src": "3454:642:11",
																		"statements": [
																			{
																				"nativeSrc": "3468:35:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3468:35:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3487:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "3487:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3499:2:11",
																									"nodeType": "YulLiteral",
																									"src": "3499:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3495:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "3495:3:11"
																							},
																							"nativeSrc": "3495:7:11",
																							"nodeType": "YulFunctionCall",
																							"src": "3495:7:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3483:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "3483:3:11"
																					},
																					"nativeSrc": "3483:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3483:20:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3472:7:11",
																						"nodeType": "YulTypedName",
																						"src": "3472:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3516:49:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3516:49:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3560:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "3560:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3530:29:11",
																						"nodeType": "YulIdentifier",
																						"src": "3530:29:11"
																					},
																					"nativeSrc": "3530:35:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3530:35:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3520:6:11",
																						"nodeType": "YulTypedName",
																						"src": "3520:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3578:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3578:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3587:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3587:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3582:1:11",
																						"nodeType": "YulTypedName",
																						"src": "3582:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3658:165:11",
																					"nodeType": "YulBlock",
																					"src": "3658:165:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3683:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "3683:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3701:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "3701:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3706:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "3706:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3697:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "3697:3:11"
																												},
																												"nativeSrc": "3697:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "3697:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3691:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "3691:5:11"
																										},
																										"nativeSrc": "3691:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "3691:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3676:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "3676:6:11"
																								},
																								"nativeSrc": "3676:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3676:42:11"
																							},
																							"nativeSrc": "3676:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "3676:42:11"
																						},
																						{
																							"nativeSrc": "3735:24:11",
																							"nodeType": "YulAssignment",
																							"src": "3735:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3749:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "3749:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3757:1:11",
																										"nodeType": "YulLiteral",
																										"src": "3757:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3745:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3745:3:11"
																								},
																								"nativeSrc": "3745:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3745:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3735:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "3735:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3776:33:11",
																							"nodeType": "YulAssignment",
																							"src": "3776:33:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3793:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "3793:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3804:4:11",
																										"nodeType": "YulLiteral",
																										"src": "3804:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3789:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3789:3:11"
																								},
																								"nativeSrc": "3789:20:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3789:20:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3776:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "3776:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3612:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "3612:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3615:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "3615:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3609:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "3609:2:11"
																					},
																					"nativeSrc": "3609:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3609:14:11"
																				},
																				"nativeSrc": "3601:222:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3624:21:11",
																					"nodeType": "YulBlock",
																					"src": "3624:21:11",
																					"statements": [
																						{
																							"nativeSrc": "3626:17:11",
																							"nodeType": "YulAssignment",
																							"src": "3626:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3635:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "3635:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3638:4:11",
																										"nodeType": "YulLiteral",
																										"src": "3638:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3631:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3631:3:11"
																								},
																								"nativeSrc": "3631:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3631:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3626:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "3626:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3605:3:11",
																					"nodeType": "YulBlock",
																					"src": "3605:3:11",
																					"statements": []
																				},
																				"src": "3601:222:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "3871:166:11",
																					"nodeType": "YulBlock",
																					"src": "3871:166:11",
																					"statements": [
																						{
																							"nativeSrc": "3889:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3889:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3916:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "3916:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3921:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "3921:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3912:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "3912:3:11"
																										},
																										"nativeSrc": "3912:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "3912:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3906:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "3906:5:11"
																								},
																								"nativeSrc": "3906:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3906:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3893:9:11",
																									"nodeType": "YulTypedName",
																									"src": "3893:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3956:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "3956:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3968:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "3968:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3995:1:11",
																																				"nodeType": "YulLiteral",
																																				"src": "3995:1:11",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3998:6:11",
																																				"nodeType": "YulIdentifier",
																																				"src": "3998:6:11"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3991:3:11",
																																			"nodeType": "YulIdentifier",
																																			"src": "3991:3:11"
																																		},
																																		"nativeSrc": "3991:14:11",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3991:14:11"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4007:3:11",
																																		"nodeType": "YulLiteral",
																																		"src": "4007:3:11",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3987:3:11",
																																	"nodeType": "YulIdentifier",
																																	"src": "3987:3:11"
																																},
																																"nativeSrc": "3987:24:11",
																																"nodeType": "YulFunctionCall",
																																"src": "3987:24:11"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4017:1:11",
																																		"nodeType": "YulLiteral",
																																		"src": "4017:1:11",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "4013:3:11",
																																	"nodeType": "YulIdentifier",
																																	"src": "4013:3:11"
																																},
																																"nativeSrc": "4013:6:11",
																																"nodeType": "YulFunctionCall",
																																"src": "4013:6:11"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3983:3:11",
																															"nodeType": "YulIdentifier",
																															"src": "3983:3:11"
																														},
																														"nativeSrc": "3983:37:11",
																														"nodeType": "YulFunctionCall",
																														"src": "3983:37:11"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3979:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "3979:3:11"
																												},
																												"nativeSrc": "3979:42:11",
																												"nodeType": "YulFunctionCall",
																												"src": "3979:42:11"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3964:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "3964:3:11"
																										},
																										"nativeSrc": "3964:58:11",
																										"nodeType": "YulFunctionCall",
																										"src": "3964:58:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3949:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "3949:6:11"
																								},
																								"nativeSrc": "3949:74:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3949:74:11"
																							},
																							"nativeSrc": "3949:74:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "3949:74:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3842:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "3842:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3851:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "3851:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3839:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "3839:2:11"
																					},
																					"nativeSrc": "3839:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3839:19:11"
																				},
																				"nativeSrc": "3836:201:11",
																				"nodeType": "YulIf",
																				"src": "3836:201:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4057:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "4057:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4071:1:11",
																											"nodeType": "YulLiteral",
																											"src": "4071:1:11",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4074:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "4074:6:11"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4067:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "4067:3:11"
																									},
																									"nativeSrc": "4067:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "4067:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4083:1:11",
																									"nodeType": "YulLiteral",
																									"src": "4083:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4063:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "4063:3:11"
																							},
																							"nativeSrc": "4063:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4063:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4050:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4050:6:11"
																					},
																					"nativeSrc": "4050:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4050:36:11"
																				},
																				"nativeSrc": "4050:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "4050:36:11"
																			}
																		]
																	},
																	"nativeSrc": "3447:649:11",
																	"nodeType": "YulCase",
																	"src": "3447:649:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3452:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3452:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4113:234:11",
																		"nodeType": "YulBlock",
																		"src": "4113:234:11",
																		"statements": [
																			{
																				"nativeSrc": "4127:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4127:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4140:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4140:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4131:5:11",
																						"nodeType": "YulTypedName",
																						"src": "4131:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4176:67:11",
																					"nodeType": "YulBlock",
																					"src": "4176:67:11",
																					"statements": [
																						{
																							"nativeSrc": "4194:35:11",
																							"nodeType": "YulAssignment",
																							"src": "4194:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4213:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "4213:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4218:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "4218:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4209:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "4209:3:11"
																										},
																										"nativeSrc": "4209:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "4209:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4203:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "4203:5:11"
																								},
																								"nativeSrc": "4203:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4203:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4194:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "4194:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4157:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "4157:6:11"
																				},
																				"nativeSrc": "4154:89:11",
																				"nodeType": "YulIf",
																				"src": "4154:89:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4263:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "4263:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4322:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "4322:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4329:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4329:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4269:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "4269:52:11"
																							},
																							"nativeSrc": "4269:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4269:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4256:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4256:6:11"
																					},
																					"nativeSrc": "4256:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4256:81:11"
																				},
																				"nativeSrc": "4256:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "4256:81:11"
																			}
																		]
																	},
																	"nativeSrc": "4105:242:11",
																	"nodeType": "YulCase",
																	"src": "4105:242:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3427:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3427:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3435:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3435:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3424:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3424:2:11"
																},
																"nativeSrc": "3424:14:11",
																"nodeType": "YulFunctionCall",
																"src": "3424:14:11"
															},
															"nativeSrc": "3417:930:11",
															"nodeType": "YulSwitch",
															"src": "3417:930:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3054:1299:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3135:4:11",
														"nodeType": "YulTypedName",
														"src": "3135:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3141:3:11",
														"nodeType": "YulTypedName",
														"src": "3141:3:11",
														"type": ""
													}
												],
												"src": "3054:1299:11"
											},
											{
												"body": {
													"nativeSrc": "4532:168:11",
													"nodeType": "YulBlock",
													"src": "4532:168:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4549:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4549:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4560:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4560:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4542:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4542:6:11"
																},
																"nativeSrc": "4542:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4542:21:11"
															},
															"nativeSrc": "4542:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "4542:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4583:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4583:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4594:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4594:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4579:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4579:3:11"
																		},
																		"nativeSrc": "4579:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4599:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4599:2:11",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4572:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4572:6:11"
																},
																"nativeSrc": "4572:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4572:30:11"
															},
															"nativeSrc": "4572:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "4572:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4622:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4622:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4633:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4633:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4618:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4618:3:11"
																		},
																		"nativeSrc": "4618:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4618:18:11"
																	},
																	{
																		"hexValue": "584170703a206e6f207a65726f206f6d6e69",
																		"kind": "string",
																		"nativeSrc": "4638:20:11",
																		"nodeType": "YulLiteral",
																		"src": "4638:20:11",
																		"type": "",
																		"value": "XApp: no zero omni"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4611:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4611:6:11"
																},
																"nativeSrc": "4611:48:11",
																"nodeType": "YulFunctionCall",
																"src": "4611:48:11"
															},
															"nativeSrc": "4611:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "4611:48:11"
														},
														{
															"nativeSrc": "4668:26:11",
															"nodeType": "YulAssignment",
															"src": "4668:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4680:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4680:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4691:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4691:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4676:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4676:3:11"
																},
																"nativeSrc": "4676:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4676:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4668:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4668:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4358:342:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4509:9:11",
														"nodeType": "YulTypedName",
														"src": "4509:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4523:4:11",
														"nodeType": "YulTypedName",
														"src": "4523:4:11",
														"type": ""
													}
												],
												"src": "4358:342:11"
											},
											{
												"body": {
													"nativeSrc": "4806:102:11",
													"nodeType": "YulBlock",
													"src": "4806:102:11",
													"statements": [
														{
															"nativeSrc": "4816:26:11",
															"nodeType": "YulAssignment",
															"src": "4816:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4828:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4828:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4839:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4839:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4824:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4824:3:11"
																},
																"nativeSrc": "4824:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4824:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4816:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4816:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4858:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4858:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4873:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4873:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4889:3:11",
																								"nodeType": "YulLiteral",
																								"src": "4889:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4894:1:11",
																								"nodeType": "YulLiteral",
																								"src": "4894:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4885:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "4885:3:11"
																						},
																						"nativeSrc": "4885:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "4885:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4898:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4898:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4881:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4881:3:11"
																				},
																				"nativeSrc": "4881:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4881:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4869:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4869:3:11"
																		},
																		"nativeSrc": "4869:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4869:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4851:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4851:6:11"
																},
																"nativeSrc": "4851:51:11",
																"nodeType": "YulFunctionCall",
																"src": "4851:51:11"
															},
															"nativeSrc": "4851:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "4851:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4705:203:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4775:9:11",
														"nodeType": "YulTypedName",
														"src": "4775:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4786:6:11",
														"nodeType": "YulTypedName",
														"src": "4786:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4797:4:11",
														"nodeType": "YulTypedName",
														"src": "4797:4:11",
														"type": ""
													}
												],
												"src": "4705:203:11"
											},
											{
												"body": {
													"nativeSrc": "5087:174:11",
													"nodeType": "YulBlock",
													"src": "5087:174:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5104:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5104:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5115:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5115:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5097:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5097:6:11"
																},
																"nativeSrc": "5097:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5097:21:11"
															},
															"nativeSrc": "5097:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "5097:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5138:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5138:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5149:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5149:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5134:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5134:3:11"
																		},
																		"nativeSrc": "5134:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5134:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5154:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5154:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5127:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5127:6:11"
																},
																"nativeSrc": "5127:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5127:30:11"
															},
															"nativeSrc": "5127:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "5127:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5188:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5188:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5173:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5173:3:11"
																		},
																		"nativeSrc": "5173:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5173:18:11"
																	},
																	{
																		"hexValue": "584170703a20696e76616c696420636f6e66206c6576656c",
																		"kind": "string",
																		"nativeSrc": "5193:26:11",
																		"nodeType": "YulLiteral",
																		"src": "5193:26:11",
																		"type": "",
																		"value": "XApp: invalid conf level"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5166:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:11"
																},
																"nativeSrc": "5166:54:11",
																"nodeType": "YulFunctionCall",
																"src": "5166:54:11"
															},
															"nativeSrc": "5166:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "5166:54:11"
														},
														{
															"nativeSrc": "5229:26:11",
															"nodeType": "YulAssignment",
															"src": "5229:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5241:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5241:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5252:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5252:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5237:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5237:3:11"
																},
																"nativeSrc": "5237:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5237:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5229:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5229:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4913:348:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5064:9:11",
														"nodeType": "YulTypedName",
														"src": "5064:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5078:4:11",
														"nodeType": "YulTypedName",
														"src": "5078:4:11",
														"type": ""
													}
												],
												"src": "4913:348:11"
											},
											{
												"body": {
													"nativeSrc": "5363:87:11",
													"nodeType": "YulBlock",
													"src": "5363:87:11",
													"statements": [
														{
															"nativeSrc": "5373:26:11",
															"nodeType": "YulAssignment",
															"src": "5373:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5385:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5385:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5396:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5396:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5381:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5381:3:11"
																},
																"nativeSrc": "5381:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5381:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5373:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5373:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5415:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5415:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5430:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5430:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5438:4:11",
																				"nodeType": "YulLiteral",
																				"src": "5438:4:11",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5426:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5426:3:11"
																		},
																		"nativeSrc": "5426:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5426:17:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5408:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5408:6:11"
																},
																"nativeSrc": "5408:36:11",
																"nodeType": "YulFunctionCall",
																"src": "5408:36:11"
															},
															"nativeSrc": "5408:36:11",
															"nodeType": "YulExpressionStatement",
															"src": "5408:36:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5266:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5332:9:11",
														"nodeType": "YulTypedName",
														"src": "5332:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5343:6:11",
														"nodeType": "YulTypedName",
														"src": "5343:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5354:4:11",
														"nodeType": "YulTypedName",
														"src": "5354:4:11",
														"type": ""
													}
												],
												"src": "5266:184:11"
											},
											{
												"body": {
													"nativeSrc": "5503:174:11",
													"nodeType": "YulBlock",
													"src": "5503:174:11",
													"statements": [
														{
															"nativeSrc": "5513:16:11",
															"nodeType": "YulAssignment",
															"src": "5513:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5524:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5524:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5527:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5527:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5520:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5520:3:11"
																},
																"nativeSrc": "5520:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5520:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5513:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5513:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5560:111:11",
																"nodeType": "YulBlock",
																"src": "5560:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5581:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5581:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5588:3:11",
																							"nodeType": "YulLiteral",
																							"src": "5588:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5593:10:11",
																							"nodeType": "YulLiteral",
																							"src": "5593:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5584:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "5584:3:11"
																					},
																					"nativeSrc": "5584:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5584:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5574:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5574:6:11"
																			},
																			"nativeSrc": "5574:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5574:31:11"
																		},
																		"nativeSrc": "5574:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5574:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5625:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5625:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5628:4:11",
																					"nodeType": "YulLiteral",
																					"src": "5628:4:11",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5618:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5618:6:11"
																			},
																			"nativeSrc": "5618:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5618:15:11"
																		},
																		"nativeSrc": "5618:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5618:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5653:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5653:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5656:4:11",
																					"nodeType": "YulLiteral",
																					"src": "5656:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5646:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5646:6:11"
																			},
																			"nativeSrc": "5646:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5646:15:11"
																		},
																		"nativeSrc": "5646:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5646:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5544:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5544:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5547:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5547:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5541:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5541:2:11"
																},
																"nativeSrc": "5541:10:11",
																"nodeType": "YulFunctionCall",
																"src": "5541:10:11"
															},
															"nativeSrc": "5538:133:11",
															"nodeType": "YulIf",
															"src": "5538:133:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5455:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5486:1:11",
														"nodeType": "YulTypedName",
														"src": "5486:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5489:1:11",
														"nodeType": "YulTypedName",
														"src": "5489:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5495:3:11",
														"nodeType": "YulTypedName",
														"src": "5495:3:11",
														"type": ""
													}
												],
												"src": "5455:222:11"
											},
											{
												"body": {
													"nativeSrc": "5839:188:11",
													"nodeType": "YulBlock",
													"src": "5839:188:11",
													"statements": [
														{
															"nativeSrc": "5849:26:11",
															"nodeType": "YulAssignment",
															"src": "5849:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5861:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5861:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5872:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5872:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5857:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5857:3:11"
																},
																"nativeSrc": "5857:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5857:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5849:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5849:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5891:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5891:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5906:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5906:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5922:3:11",
																								"nodeType": "YulLiteral",
																								"src": "5922:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5927:1:11",
																								"nodeType": "YulLiteral",
																								"src": "5927:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5918:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "5918:3:11"
																						},
																						"nativeSrc": "5918:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5918:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5931:1:11",
																						"nodeType": "YulLiteral",
																						"src": "5931:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5914:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5914:3:11"
																				},
																				"nativeSrc": "5914:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5914:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5902:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5902:3:11"
																		},
																		"nativeSrc": "5902:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5902:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5884:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5884:6:11"
																},
																"nativeSrc": "5884:51:11",
																"nodeType": "YulFunctionCall",
																"src": "5884:51:11"
															},
															"nativeSrc": "5884:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "5884:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5955:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5955:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5966:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5966:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5951:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5951:3:11"
																		},
																		"nativeSrc": "5951:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5951:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5971:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5971:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5944:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5944:6:11"
																},
																"nativeSrc": "5944:34:11",
																"nodeType": "YulFunctionCall",
																"src": "5944:34:11"
															},
															"nativeSrc": "5944:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "5944:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5998:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5998:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6009:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6009:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5994:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5994:3:11"
																		},
																		"nativeSrc": "5994:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5994:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6014:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6014:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5987:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5987:6:11"
																},
																"nativeSrc": "5987:34:11",
																"nodeType": "YulFunctionCall",
																"src": "5987:34:11"
															},
															"nativeSrc": "5987:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "5987:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5682:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5792:9:11",
														"nodeType": "YulTypedName",
														"src": "5792:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5803:6:11",
														"nodeType": "YulTypedName",
														"src": "5803:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5811:6:11",
														"nodeType": "YulTypedName",
														"src": "5811:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5819:6:11",
														"nodeType": "YulTypedName",
														"src": "5819:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5830:4:11",
														"nodeType": "YulTypedName",
														"src": "5830:4:11",
														"type": ""
													}
												],
												"src": "5682:345:11"
											},
											{
												"body": {
													"nativeSrc": "6133:76:11",
													"nodeType": "YulBlock",
													"src": "6133:76:11",
													"statements": [
														{
															"nativeSrc": "6143:26:11",
															"nodeType": "YulAssignment",
															"src": "6143:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6155:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6155:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6166:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6166:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6151:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6151:3:11"
																},
																"nativeSrc": "6151:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6151:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6143:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6143:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6185:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6185:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6196:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6196:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6178:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6178:6:11"
																},
																"nativeSrc": "6178:25:11",
																"nodeType": "YulFunctionCall",
																"src": "6178:25:11"
															},
															"nativeSrc": "6178:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "6178:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6032:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6102:9:11",
														"nodeType": "YulTypedName",
														"src": "6102:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6113:6:11",
														"nodeType": "YulTypedName",
														"src": "6113:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6124:4:11",
														"nodeType": "YulTypedName",
														"src": "6124:4:11",
														"type": ""
													}
												],
												"src": "6032:177:11"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        let value := mload(add(headStart, 96))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value3 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 128))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value4 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"XApp: no zero omni\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"XApp: invalid conf level\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xCB60A0451831E4865BC49F41F9C67665FC9B75C3 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x35 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x143D CODESIZE SUB DUP1 PUSH2 0x143D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x54 SWAP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH1 0x1 PUSH2 0x70 DUP3 PUSH2 0xC6 JUMP JUMPDEST PUSH2 0x79 DUP2 PUSH2 0x16A JUMP JUMPDEST POP PUSH1 0x5 SWAP1 POP PUSH2 0x88 DUP5 DUP3 PUSH2 0x54D JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x95 DUP4 DUP3 PUSH2 0x54D JUMP JUMPDEST POP POP POP POP DUP1 ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0xB2 JUMPI PUSH2 0xAD DUP3 DUP5 PUSH2 0x20C JUMP JUMPDEST PUSH2 0xBC JUMP JUMPDEST PUSH2 0xBC ADDRESS DUP5 PUSH2 0x20C JUMP JUMPDEST POP POP POP POP POP PUSH2 0x626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x116 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x584170703A206E6F207A65726F206F6D6E69 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x79162C8D053A07E70CDC1CCC536F0440B571F8508377D2BEF51094FADAB98F47 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x173 DUP2 PUSH2 0x244 JUMP JUMPDEST PUSH2 0x1BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x584170703A20696E76616C696420636F6E66206C6576656C0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8DE08A798B4E50B4F351C1EAA91A11530043802BE3FFAC2DF87DB0C45A2E8483 SWAP1 PUSH1 0x20 ADD PUSH2 0x15F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x235 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x10D JUMP JUMPDEST PUSH2 0x240 PUSH0 DUP4 DUP4 PUSH2 0x260 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH1 0x1 EQ DUP1 PUSH2 0x25A JUMPI POP PUSH1 0xFF DUP3 AND PUSH1 0x4 EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x28A JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2FA SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2DC JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x10D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x316 JUMPI PUSH1 0x4 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3C2 JUMPI PUSH2 0x3C2 PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3F0 JUMPI PUSH2 0x3F0 PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x407 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x437 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x44C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x458 DUP9 DUP3 DUP10 ADD PUSH2 0x39A JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD SWAP1 SWAP7 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x475 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x481 DUP9 DUP3 DUP10 ADD PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP2 SWAP7 POP SWAP5 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP8 ADD MLOAD SWAP1 SWAP3 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4DD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4FB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x548 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x526 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x545 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x532 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x57A DUP2 PUSH2 0x574 DUP5 SLOAD PUSH2 0x4C9 JUMP JUMPDEST DUP5 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5AC JUMPI PUSH0 DUP4 ISZERO PUSH2 0x595 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x545 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5DB JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x5BB JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x5F8 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xE0A DUP1 PUSH2 0x633 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A536A06 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xBDB3C8E6 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4A536A06 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x74EEB847 EQ PUSH2 0x23E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x39ACF9F1 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1CA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x136 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xB55 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x1B2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0xB55 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x182 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH2 0x4FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x2F6 SWAP1 PUSH2 0xC48 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x322 SWAP1 PUSH2 0xC48 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x36D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x344 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x36D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x350 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x384 DUP2 DUP6 DUP6 PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x39D DUP6 DUP3 DUP6 PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x3A8 DUP6 DUP6 DUP6 PUSH2 0x66D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3BD DUP3 DUP3 PUSH2 0x6CA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x17993807 PUSH1 0xE1 SHL DUP2 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x2F32700E SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x405 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0xC80 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x20 SWAP1 SWAP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH9 0x10000000000000000 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x473 PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6D6E6945524332303A204F6E6C792063616C6C61626C65207669612063726F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x73732D636861696E206D657373616765 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E8 DUP4 DUP4 DUP4 PUSH2 0x78C JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x2F6 SWAP1 PUSH2 0xC48 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x384 DUP2 DUP6 DUP6 PUSH2 0x66D JUMP JUMPDEST CALLER PUSH2 0x525 DUP2 ADDRESS DUP5 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x2529B503 PUSH1 0xE1 SHL OR SWAP1 MSTORE SWAP1 POP PUSH0 PUSH2 0x585 DUP8 DUP8 DUP5 PUSH3 0x249F0 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6D6E6945524332303A20496E73756666696369656E74206665650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D4 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5ED DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x667 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x667 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x9FB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x696 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x5ED DUP4 DUP4 DUP4 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x3BD PUSH0 DUP4 DUP4 PUSH2 0x78C JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x55E2448E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x787 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7B6 JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x826 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x808 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x842 JUMPI PUSH1 0x4 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x860 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x8A5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2376548F PUSH1 0xE2 SHL DUP2 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8DD9523C SWAP1 PUSH2 0x8E6 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x901 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x925 SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO DUP1 PUSH2 0x936 JUMPI POP DUP1 CALLVALUE LT ISZERO JUMPDEST PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x584170703A20696E73756666696369656E742066756E64730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC21DDA4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 PUSH4 0xC21DDA4F SWAP2 DUP5 SWAP2 PUSH2 0x9C3 SWAP2 DUP12 SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0xD7C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9EC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP SWAP4 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA4D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x667 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xABF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xB0D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xACD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xB47 DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB67 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xB72 DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xB82 DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB0D DUP2 PUSH2 0xB14 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xB28 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xBE1 DUP2 PUSH2 0xBAE JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xBF1 DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0xC01 DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC22 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xC2D DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xC3D DUP2 PUSH2 0xB14 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC5C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC7A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 DUP5 SUB SLT DUP1 ISZERO PUSH2 0xC91 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCC1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH2 0xCCF DUP2 PUSH2 0xBAE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xCDF DUP2 PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB0D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x38A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0xD4B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xACD JUMP JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP7 AND DUP2 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0xDB8 SWAP1 DUP4 ADD DUP6 PUSH2 0xACD JUMP JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC GT PUSH28 0xE31930A09C16A0D20458DC7ECB44CE2B68FB44AF9F81CC4CE2578F18 PUSH4 0x64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "128:1082:9:-:0;;;164:61;;;-1:-1:-1;;;;;;164:61:9;183:42;164:61;;;231:467;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;430:10;;414:5;;421:7;;-1:-1:-1;;;;;430:10:9;;;296:21:3;430:10:9;296:14:3;:21::i;:::-;327:39;348:17;327:20;:39::i;:::-;-1:-1:-1;895:5:7::1;::::0;-1:-1:-1;895:13:7::1;903:5:::0;895;:13:::1;:::i;:::-;-1:-1:-1::0;918:7:7::1;:17;928:7:::0;918;:17:::1;:::i;:::-;-1:-1:-1::0;;;;534:18:9;::::1;;548:4;534:18:::0;531:161:::1;;563:42;569:20:::0;591:13;563:5:::1;:42::i;:::-;531:161;;;646:35;660:4;667:13:::0;646:5:::1;:35::i;:::-;231:467:::0;;;;;128:1082;;3791:185:4;-1:-1:-1;;;;;3857:19:4;;3849:50;;;;-1:-1:-1;;;3849:50:4;;4560:2:11;3849:50:4;;;4542:21:11;4599:2;4579:18;;;4572:30;-1:-1:-1;;;4618:18:11;;;4611:48;4676:18;;3849:50:4;;;;;;;;;3909:4;:25;;-1:-1:-1;;;;;;3909:25:4;-1:-1:-1;;;;;3909:25:4;;;;;;;;3949:20;;4851:51:11;;;3949:20:4;;4839:2:11;4824:18;3949:20:4;;;;;;;;3791:185;:::o;3462:201::-;3531:23;3549:4;3531:17;:23::i;:::-;3523:60;;;;-1:-1:-1;;;3523:60:4;;5115:2:11;3523:60:4;;;5097:21:11;5154:2;5134:18;;;5127:30;5193:26;5173:18;;;5166:54;5237:18;;3523:60:4;4913:348:11;3523:60:4;3593:16;:23;;-1:-1:-1;;;;3593:23:4;-1:-1:-1;;;3593:23:4;;;;;;;;;;;;;3631:25;;5408:36:11;;;3631:25:4;;5396:2:11;5381:18;3631:25:4;5266:184:11;1000:208:9;-1:-1:-1;;;;;1070:21:9;;1066:91;;1114:32;;-1:-1:-1;;;1114:32:9;;1143:1;1114:32;;;4851:51:11;4824:18;;1114:32:9;4705:203:11;1066:91:9;1166:35;1182:1;1186:7;1195:5;1166:7;:35::i;:::-;1000:208;;:::o;791:120:1:-;844:4;867:15;;;571:1;867:15;;:37;;-1:-1:-1;886:18:1;;;710:1;886:18;867:37;860:44;791:120;-1:-1:-1;;791:120:1:o;3300:706:7:-;-1:-1:-1;;;;;3389:18:7;;3385:359;;3439:5;3423:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;3385:359:7;;-1:-1:-1;3385:359:7;;-1:-1:-1;;;;;3497:15:7;;3475:19;3497:15;;;:9;:15;;;;;;3530:19;;;3526:115;;;3576:50;;-1:-1:-1;;;3576:50:7;;-1:-1:-1;;;;;5902:32:11;;3576:50:7;;;5884:51:11;5951:18;;;5944:34;;;5994:18;;;5987:34;;;5857:18;;3576:50:7;5682:345:11;3526:115:7;-1:-1:-1;;;;;3682:15:7;;;;;;:9;:15;;;;;3700:19;;;;3682:37;;3385:359;-1:-1:-1;;;;;3758:16:7;;3754:205;;3818:12;:21;;;;;;;3754:205;;;-1:-1:-1;;;;;3912:13:7;;;;;;:9;:13;;;;;:22;;;;;;3754:205;3989:2;-1:-1:-1;;;;;3974:25:7;3983:4;-1:-1:-1;;;;;3974:25:7;;3993:5;3974:25;;;;6178::11;;6166:2;6151:18;;6032:177;3974:25:7;;;;;;;;3300:706;;;:::o;14:127:11:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:11;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:11;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:11;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:11;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:11:o;874:970::-;997:6;1005;1013;1021;1029;1082:3;1070:9;1061:7;1057:23;1053:33;1050:53;;;1099:1;1096;1089:12;1050:53;1126:16;;-1:-1:-1;;;;;1154:30:11;;1151:50;;;1197:1;1194;1187:12;1151:50;1220:61;1273:7;1264:6;1253:9;1249:22;1220:61;:::i;:::-;1327:2;1312:18;;1306:25;1210:71;;-1:-1:-1;1306:25:11;-1:-1:-1;;;;;;1343:32:11;;1340:52;;;1388:1;1385;1378:12;1340:52;1411:63;1466:7;1455:8;1444:9;1440:24;1411:63;:::i;:::-;1514:2;1499:18;;1493:25;1561:2;1546:18;;1540:25;1401:73;;-1:-1:-1;1493:25:11;-1:-1:-1;1540:25:11;-1:-1:-1;;;;;;1594:31:11;;1584:42;;1574:70;;1640:1;1637;1630:12;1574:70;1734:3;1719:19;;1713:26;1663:5;;-1:-1:-1;1777:15:11;;1770:23;1758:36;;1748:64;;1808:1;1805;1798:12;1748:64;1831:7;1821:17;;;874:970;;;;;;;;:::o;1849:380::-;1928:1;1924:12;;;;1971;;;1992:61;;2046:4;2038:6;2034:17;2024:27;;1992:61;2099:2;2091:6;2088:14;2068:18;2065:38;2062:161;;2145:10;2140:3;2136:20;2133:1;2126:31;2180:4;2177:1;2170:15;2208:4;2205:1;2198:15;2062:161;;1849:380;;;:::o;2360:518::-;2462:2;2457:3;2454:11;2451:421;;;2498:5;2495:1;2488:16;2542:4;2539:1;2529:18;2612:2;2600:10;2596:19;2593:1;2589:27;2583:4;2579:38;2648:4;2636:10;2633:20;2630:47;;;-1:-1:-1;2671:4:11;2630:47;2726:2;2721:3;2717:12;2714:1;2710:20;2704:4;2700:31;2690:41;;2781:81;2799:2;2792:5;2789:13;2781:81;;;2858:1;2844:16;;2825:1;2814:13;2781:81;;;2785:3;;2451:421;2360:518;;;:::o;3054:1299::-;3174:10;;-1:-1:-1;;;;;3196:30:11;;3193:56;;;3229:18;;:::i;:::-;3258:97;3348:6;3308:38;3340:4;3334:11;3308:38;:::i;:::-;3302:4;3258:97;:::i;:::-;3404:4;3435:2;3424:14;;3452:1;3447:649;;;;4140:1;4157:6;4154:89;;;-1:-1:-1;4209:19:11;;;4203:26;4154:89;-1:-1:-1;;3011:1:11;3007:11;;;3003:24;2999:29;2989:40;3035:1;3031:11;;;2986:57;4256:81;;3417:930;;3447:649;2307:1;2300:14;;;2344:4;2331:18;;-1:-1:-1;;3483:20:11;;;3601:222;3615:7;3612:1;3609:14;3601:222;;;3697:19;;;3691:26;3676:42;;3804:4;3789:20;;;;3757:1;3745:14;;;;3631:12;3601:222;;;3605:3;3851:6;3842:7;3839:19;3836:201;;;3912:19;;;3906:26;-1:-1:-1;;3995:1:11;3991:14;;;4007:3;3987:24;3983:37;3979:42;3964:58;3949:74;;3836:201;-1:-1:-1;;;;4083:1:11;4067:14;;;4063:22;4050:36;;-1:-1:-1;3054:1299:11:o;5455:222::-;5520:9;;;5541:10;;;5538:133;;;5593:10;5588:3;5584:20;5581:1;5574:31;5628:4;5625:1;5618:15;5656:4;5653:1;5646:15;6032:177;128:1082:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1226": {
									"entryPoint": 1504,
									"id": 1226,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1285": {
									"entryPoint": 2555,
									"id": 1285,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_1450": {
									"entryPoint": 1738,
									"id": 1450,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1463": {
									"entryPoint": null,
									"id": 1463,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1332": {
									"entryPoint": 1522,
									"id": 1332,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1133": {
									"entryPoint": 1645,
									"id": 1133,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1209": {
									"entryPoint": 1932,
									"id": 1209,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_925": {
									"entryPoint": null,
									"id": 925,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_949": {
									"entryPoint": 887,
									"id": 949,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_908": {
									"entryPoint": null,
									"id": 908,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_886": {
									"entryPoint": null,
									"id": 886,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@defaultConfLevel_352": {
									"entryPoint": null,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isXCall_389": {
									"entryPoint": 1790,
									"id": 389,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1418": {
									"entryPoint": 947,
									"id": 1418,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_868": {
									"entryPoint": 743,
									"id": 868,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@omni_349": {
									"entryPoint": null,
									"id": 349,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@receiveTransfer_1087": {
									"entryPoint": 961,
									"id": 1087,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@symbol_877": {
									"entryPoint": 1277,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_895": {
									"entryPoint": null,
									"id": 895,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_981": {
									"entryPoint": 912,
									"id": 981,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_1005": {
									"entryPoint": 1292,
									"id": 1005,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_1063": {
									"entryPoint": 1305,
									"id": 1063,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@xcall_474": {
									"entryPoint": 2226,
									"id": 474,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_MsgContext_$245_memory_ptr_fromMemory": {
									"entryPoint": 3200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64t_addresst_addresst_uint256": {
									"entryPoint": 3011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_string": {
									"entryPoint": 2765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IOmniPortal_$175__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_bytes_memory_ptr_t_uint64__to_t_uint64_t_bytes_memory_ptr_t_uint64__fromStack_reversed": {
									"entryPoint": 3369,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_uint8_t_address_t_bytes_memory_ptr_t_uint64__to_t_uint64_t_uint8_t_address_t_bytes_memory_ptr_t_uint64__fromStack_reversed": {
									"entryPoint": 3452,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 2836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_uint64": {
									"entryPoint": 2990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8697:11",
										"nodeType": "YulBlock",
										"src": "0:8697:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "64:239:11",
													"nodeType": "YulBlock",
													"src": "64:239:11",
													"statements": [
														{
															"nativeSrc": "74:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "74:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "94:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "94:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "88:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:11"
																},
																"nativeSrc": "88:12:11",
																"nodeType": "YulFunctionCall",
																"src": "88:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "78:6:11",
																	"nodeType": "YulTypedName",
																	"src": "78:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "116:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "116:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "121:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "121:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "109:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "109:6:11"
																},
																"nativeSrc": "109:19:11",
																"nodeType": "YulFunctionCall",
																"src": "109:19:11"
															},
															"nativeSrc": "109:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "109:19:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "147:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "147:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "152:4:11",
																				"nodeType": "YulLiteral",
																				"src": "152:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "143:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:11"
																		},
																		"nativeSrc": "143:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "143:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "163:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "163:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "170:4:11",
																				"nodeType": "YulLiteral",
																				"src": "170:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "159:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "159:3:11"
																		},
																		"nativeSrc": "159:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "159:16:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "177:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "177:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "137:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "137:5:11"
																},
																"nativeSrc": "137:47:11",
																"nodeType": "YulFunctionCall",
																"src": "137:47:11"
															},
															"nativeSrc": "137:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "137:47:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "208:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "208:3:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "213:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "213:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "204:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "204:3:11"
																				},
																				"nativeSrc": "204:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "204:16:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "222:4:11",
																				"nodeType": "YulLiteral",
																				"src": "222:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "200:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "200:3:11"
																		},
																		"nativeSrc": "200:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "200:27:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "229:1:11",
																		"nodeType": "YulLiteral",
																		"src": "229:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "193:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "193:6:11"
																},
																"nativeSrc": "193:38:11",
																"nodeType": "YulFunctionCall",
																"src": "193:38:11"
															},
															"nativeSrc": "193:38:11",
															"nodeType": "YulExpressionStatement",
															"src": "193:38:11"
														},
														{
															"nativeSrc": "240:57:11",
															"nodeType": "YulAssignment",
															"src": "240:57:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "255:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "255:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "268:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "268:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "276:2:11",
																								"nodeType": "YulLiteral",
																								"src": "276:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "264:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "264:3:11"
																						},
																						"nativeSrc": "264:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "264:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "285:2:11",
																								"nodeType": "YulLiteral",
																								"src": "285:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "281:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "281:3:11"
																						},
																						"nativeSrc": "281:7:11",
																						"nodeType": "YulFunctionCall",
																						"src": "281:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "260:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "260:3:11"
																				},
																				"nativeSrc": "260:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "260:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "251:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "251:3:11"
																		},
																		"nativeSrc": "251:39:11",
																		"nodeType": "YulFunctionCall",
																		"src": "251:39:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "292:4:11",
																		"nodeType": "YulLiteral",
																		"src": "292:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "247:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:11"
																},
																"nativeSrc": "247:50:11",
																"nodeType": "YulFunctionCall",
																"src": "247:50:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "240:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "240:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "14:289:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "41:5:11",
														"nodeType": "YulTypedName",
														"src": "41:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "48:3:11",
														"nodeType": "YulTypedName",
														"src": "48:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "56:3:11",
														"nodeType": "YulTypedName",
														"src": "56:3:11",
														"type": ""
													}
												],
												"src": "14:289:11"
											},
											{
												"body": {
													"nativeSrc": "429:99:11",
													"nodeType": "YulBlock",
													"src": "429:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "446:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "446:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "457:2:11",
																		"nodeType": "YulLiteral",
																		"src": "457:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "439:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "439:6:11"
																},
																"nativeSrc": "439:21:11",
																"nodeType": "YulFunctionCall",
																"src": "439:21:11"
															},
															"nativeSrc": "439:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "439:21:11"
														},
														{
															"nativeSrc": "469:53:11",
															"nodeType": "YulAssignment",
															"src": "469:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "495:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "495:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "507:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "507:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "518:2:11",
																				"nodeType": "YulLiteral",
																				"src": "518:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "503:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "503:3:11"
																		},
																		"nativeSrc": "503:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "503:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "477:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "477:17:11"
																},
																"nativeSrc": "477:45:11",
																"nodeType": "YulFunctionCall",
																"src": "477:45:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "469:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "469:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "308:220:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "398:9:11",
														"nodeType": "YulTypedName",
														"src": "398:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "409:6:11",
														"nodeType": "YulTypedName",
														"src": "409:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "420:4:11",
														"nodeType": "YulTypedName",
														"src": "420:4:11",
														"type": ""
													}
												],
												"src": "308:220:11"
											},
											{
												"body": {
													"nativeSrc": "578:86:11",
													"nodeType": "YulBlock",
													"src": "578:86:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "642:16:11",
																"nodeType": "YulBlock",
																"src": "642:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "651:1:11",
																					"nodeType": "YulLiteral",
																					"src": "651:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "654:1:11",
																					"nodeType": "YulLiteral",
																					"src": "654:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "644:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "644:6:11"
																			},
																			"nativeSrc": "644:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "644:12:11"
																		},
																		"nativeSrc": "644:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "644:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "601:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "601:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "612:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "612:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "627:3:11",
																										"nodeType": "YulLiteral",
																										"src": "627:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "632:1:11",
																										"nodeType": "YulLiteral",
																										"src": "632:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "623:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "623:3:11"
																								},
																								"nativeSrc": "623:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "623:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "636:1:11",
																								"nodeType": "YulLiteral",
																								"src": "636:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "619:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "619:3:11"
																						},
																						"nativeSrc": "619:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "619:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "608:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "608:3:11"
																				},
																				"nativeSrc": "608:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "608:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "598:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "598:2:11"
																		},
																		"nativeSrc": "598:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "598:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "591:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "591:6:11"
																},
																"nativeSrc": "591:50:11",
																"nodeType": "YulFunctionCall",
																"src": "591:50:11"
															},
															"nativeSrc": "588:70:11",
															"nodeType": "YulIf",
															"src": "588:70:11"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "533:131:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "567:5:11",
														"nodeType": "YulTypedName",
														"src": "567:5:11",
														"type": ""
													}
												],
												"src": "533:131:11"
											},
											{
												"body": {
													"nativeSrc": "756:280:11",
													"nodeType": "YulBlock",
													"src": "756:280:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:16:11",
																"nodeType": "YulBlock",
																"src": "802:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "811:1:11",
																					"nodeType": "YulLiteral",
																					"src": "811:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "814:1:11",
																					"nodeType": "YulLiteral",
																					"src": "814:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "804:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "804:6:11"
																			},
																			"nativeSrc": "804:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "804:12:11"
																		},
																		"nativeSrc": "804:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:11"
																		},
																		"nativeSrc": "773:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:11",
																		"nodeType": "YulLiteral",
																		"src": "798:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:11"
																},
																"nativeSrc": "769:32:11",
																"nodeType": "YulFunctionCall",
																"src": "769:32:11"
															},
															"nativeSrc": "766:52:11",
															"nodeType": "YulIf",
															"src": "766:52:11"
														},
														{
															"nativeSrc": "827:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "827:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "853:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "853:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "840:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "840:12:11"
																},
																"nativeSrc": "840:23:11",
																"nodeType": "YulFunctionCall",
																"src": "840:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "831:5:11",
																	"nodeType": "YulTypedName",
																	"src": "831:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "897:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "897:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "872:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "872:24:11"
																},
																"nativeSrc": "872:31:11",
																"nodeType": "YulFunctionCall",
																"src": "872:31:11"
															},
															"nativeSrc": "872:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "872:31:11"
														},
														{
															"nativeSrc": "912:15:11",
															"nodeType": "YulAssignment",
															"src": "912:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "922:5:11",
																"nodeType": "YulIdentifier",
																"src": "922:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "912:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "912:6:11"
																}
															]
														},
														{
															"nativeSrc": "936:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "936:16:11",
															"value": {
																"kind": "number",
																"nativeSrc": "951:1:11",
																"nodeType": "YulLiteral",
																"src": "951:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "940:7:11",
																	"nodeType": "YulTypedName",
																	"src": "940:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "961:43:11",
															"nodeType": "YulAssignment",
															"src": "961:43:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "989:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "989:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1000:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1000:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "985:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:11"
																		},
																		"nativeSrc": "985:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "985:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "972:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "972:12:11"
																},
																"nativeSrc": "972:32:11",
																"nodeType": "YulFunctionCall",
																"src": "972:32:11"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "961:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "961:7:11"
																}
															]
														},
														{
															"nativeSrc": "1013:17:11",
															"nodeType": "YulAssignment",
															"src": "1013:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "1023:7:11",
																"nodeType": "YulIdentifier",
																"src": "1023:7:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1013:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1013:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "669:367:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "714:9:11",
														"nodeType": "YulTypedName",
														"src": "714:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "725:7:11",
														"nodeType": "YulTypedName",
														"src": "725:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "737:6:11",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "745:6:11",
														"nodeType": "YulTypedName",
														"src": "745:6:11",
														"type": ""
													}
												],
												"src": "669:367:11"
											},
											{
												"body": {
													"nativeSrc": "1136:92:11",
													"nodeType": "YulBlock",
													"src": "1136:92:11",
													"statements": [
														{
															"nativeSrc": "1146:26:11",
															"nodeType": "YulAssignment",
															"src": "1146:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1158:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1158:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1169:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1169:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1154:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1154:3:11"
																},
																"nativeSrc": "1154:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1154:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1146:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1146:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1188:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1188:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1213:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1213:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1206:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "1206:6:11"
																				},
																				"nativeSrc": "1206:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1206:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1199:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1199:6:11"
																		},
																		"nativeSrc": "1199:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1199:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1181:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1181:6:11"
																},
																"nativeSrc": "1181:41:11",
																"nodeType": "YulFunctionCall",
																"src": "1181:41:11"
															},
															"nativeSrc": "1181:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "1181:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1041:187:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1105:9:11",
														"nodeType": "YulTypedName",
														"src": "1105:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1116:6:11",
														"nodeType": "YulTypedName",
														"src": "1116:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1127:4:11",
														"nodeType": "YulTypedName",
														"src": "1127:4:11",
														"type": ""
													}
												],
												"src": "1041:187:11"
											},
											{
												"body": {
													"nativeSrc": "1334:76:11",
													"nodeType": "YulBlock",
													"src": "1334:76:11",
													"statements": [
														{
															"nativeSrc": "1344:26:11",
															"nodeType": "YulAssignment",
															"src": "1344:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1356:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1356:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1367:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1367:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1352:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1352:3:11"
																},
																"nativeSrc": "1352:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1352:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1344:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1344:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1386:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1386:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1397:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1397:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1379:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1379:6:11"
																},
																"nativeSrc": "1379:25:11",
																"nodeType": "YulFunctionCall",
																"src": "1379:25:11"
															},
															"nativeSrc": "1379:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "1379:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1233:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1303:9:11",
														"nodeType": "YulTypedName",
														"src": "1303:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1314:6:11",
														"nodeType": "YulTypedName",
														"src": "1314:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1325:4:11",
														"nodeType": "YulTypedName",
														"src": "1325:4:11",
														"type": ""
													}
												],
												"src": "1233:177:11"
											},
											{
												"body": {
													"nativeSrc": "1519:404:11",
													"nodeType": "YulBlock",
													"src": "1519:404:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1565:16:11",
																"nodeType": "YulBlock",
																"src": "1565:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1574:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1574:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1577:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1577:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1567:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1567:6:11"
																			},
																			"nativeSrc": "1567:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:11"
																		},
																		"nativeSrc": "1567:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1567:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1540:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1540:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1549:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1549:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1536:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:11"
																		},
																		"nativeSrc": "1536:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1561:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1561:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1532:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1532:3:11"
																},
																"nativeSrc": "1532:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1532:32:11"
															},
															"nativeSrc": "1529:52:11",
															"nodeType": "YulIf",
															"src": "1529:52:11"
														},
														{
															"nativeSrc": "1590:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1590:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1616:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1616:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1603:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1603:12:11"
																},
																"nativeSrc": "1603:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1603:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1594:5:11",
																	"nodeType": "YulTypedName",
																	"src": "1594:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1660:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1660:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1635:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "1635:24:11"
																},
																"nativeSrc": "1635:31:11",
																"nodeType": "YulFunctionCall",
																"src": "1635:31:11"
															},
															"nativeSrc": "1635:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "1635:31:11"
														},
														{
															"nativeSrc": "1675:15:11",
															"nodeType": "YulAssignment",
															"src": "1675:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "1685:5:11",
																"nodeType": "YulIdentifier",
																"src": "1685:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1675:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1675:6:11"
																}
															]
														},
														{
															"nativeSrc": "1699:47:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1699:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1731:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1731:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1742:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1742:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1727:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1727:3:11"
																		},
																		"nativeSrc": "1727:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1727:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1714:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1714:12:11"
																},
																"nativeSrc": "1714:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1714:32:11"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1703:7:11",
																	"nodeType": "YulTypedName",
																	"src": "1703:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "1780:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "1780:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1755:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "1755:24:11"
																},
																"nativeSrc": "1755:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1755:33:11"
															},
															"nativeSrc": "1755:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1755:33:11"
														},
														{
															"nativeSrc": "1797:17:11",
															"nodeType": "YulAssignment",
															"src": "1797:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "1807:7:11",
																"nodeType": "YulIdentifier",
																"src": "1807:7:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1797:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1797:6:11"
																}
															]
														},
														{
															"nativeSrc": "1823:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1823:16:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1838:1:11",
																"nodeType": "YulLiteral",
																"src": "1838:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "1827:7:11",
																	"nodeType": "YulTypedName",
																	"src": "1827:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1848:43:11",
															"nodeType": "YulAssignment",
															"src": "1848:43:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1876:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1876:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1887:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1887:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1872:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1872:3:11"
																		},
																		"nativeSrc": "1872:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1872:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1859:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1859:12:11"
																},
																"nativeSrc": "1859:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1859:32:11"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "1848:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1848:7:11"
																}
															]
														},
														{
															"nativeSrc": "1900:17:11",
															"nodeType": "YulAssignment",
															"src": "1900:17:11",
															"value": {
																"name": "value_2",
																"nativeSrc": "1910:7:11",
																"nodeType": "YulIdentifier",
																"src": "1910:7:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1900:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1900:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1415:508:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1469:9:11",
														"nodeType": "YulTypedName",
														"src": "1469:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1480:7:11",
														"nodeType": "YulTypedName",
														"src": "1480:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1492:6:11",
														"nodeType": "YulTypedName",
														"src": "1492:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1500:6:11",
														"nodeType": "YulTypedName",
														"src": "1500:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1508:6:11",
														"nodeType": "YulTypedName",
														"src": "1508:6:11",
														"type": ""
													}
												],
												"src": "1415:508:11"
											},
											{
												"body": {
													"nativeSrc": "2025:87:11",
													"nodeType": "YulBlock",
													"src": "2025:87:11",
													"statements": [
														{
															"nativeSrc": "2035:26:11",
															"nodeType": "YulAssignment",
															"src": "2035:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2047:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2047:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2058:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2058:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2043:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2043:3:11"
																},
																"nativeSrc": "2043:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2043:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2035:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2035:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2077:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2077:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2092:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2092:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2100:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2100:4:11",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2088:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2088:3:11"
																		},
																		"nativeSrc": "2088:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2088:17:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2070:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2070:6:11"
																},
																"nativeSrc": "2070:36:11",
																"nodeType": "YulFunctionCall",
																"src": "2070:36:11"
															},
															"nativeSrc": "2070:36:11",
															"nodeType": "YulExpressionStatement",
															"src": "2070:36:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1928:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1994:9:11",
														"nodeType": "YulTypedName",
														"src": "1994:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2005:6:11",
														"nodeType": "YulTypedName",
														"src": "2005:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2016:4:11",
														"nodeType": "YulTypedName",
														"src": "2016:4:11",
														"type": ""
													}
												],
												"src": "1928:184:11"
											},
											{
												"body": {
													"nativeSrc": "2237:102:11",
													"nodeType": "YulBlock",
													"src": "2237:102:11",
													"statements": [
														{
															"nativeSrc": "2247:26:11",
															"nodeType": "YulAssignment",
															"src": "2247:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2259:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2259:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2270:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2270:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2255:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2255:3:11"
																},
																"nativeSrc": "2255:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2255:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2247:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2247:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2289:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2289:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2304:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2304:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2320:3:11",
																								"nodeType": "YulLiteral",
																								"src": "2320:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2325:1:11",
																								"nodeType": "YulLiteral",
																								"src": "2325:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2316:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "2316:3:11"
																						},
																						"nativeSrc": "2316:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2316:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2329:1:11",
																						"nodeType": "YulLiteral",
																						"src": "2329:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2312:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2312:3:11"
																				},
																				"nativeSrc": "2312:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2312:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2300:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2300:3:11"
																		},
																		"nativeSrc": "2300:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2300:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2282:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2282:6:11"
																},
																"nativeSrc": "2282:51:11",
																"nodeType": "YulFunctionCall",
																"src": "2282:51:11"
															},
															"nativeSrc": "2282:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "2282:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IOmniPortal_$175__to_t_address__fromStack_reversed",
												"nativeSrc": "2117:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2206:9:11",
														"nodeType": "YulTypedName",
														"src": "2206:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2217:6:11",
														"nodeType": "YulTypedName",
														"src": "2217:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2228:4:11",
														"nodeType": "YulTypedName",
														"src": "2228:4:11",
														"type": ""
													}
												],
												"src": "2117:222:11"
											},
											{
												"body": {
													"nativeSrc": "2414:177:11",
													"nodeType": "YulBlock",
													"src": "2414:177:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2460:16:11",
																"nodeType": "YulBlock",
																"src": "2460:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2469:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2469:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2472:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2472:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2462:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:11"
																			},
																			"nativeSrc": "2462:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2462:12:11"
																		},
																		"nativeSrc": "2462:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2435:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2435:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2444:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2431:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2431:3:11"
																		},
																		"nativeSrc": "2431:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2431:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2456:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2456:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2427:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2427:3:11"
																},
																"nativeSrc": "2427:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2427:32:11"
															},
															"nativeSrc": "2424:52:11",
															"nodeType": "YulIf",
															"src": "2424:52:11"
														},
														{
															"nativeSrc": "2485:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2485:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2511:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2511:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2498:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2498:12:11"
																},
																"nativeSrc": "2498:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2498:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2489:5:11",
																	"nodeType": "YulTypedName",
																	"src": "2489:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2555:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2555:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2530:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "2530:24:11"
																},
																"nativeSrc": "2530:31:11",
																"nodeType": "YulFunctionCall",
																"src": "2530:31:11"
															},
															"nativeSrc": "2530:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "2530:31:11"
														},
														{
															"nativeSrc": "2570:15:11",
															"nodeType": "YulAssignment",
															"src": "2570:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "2580:5:11",
																"nodeType": "YulIdentifier",
																"src": "2580:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2570:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2570:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2344:247:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2380:9:11",
														"nodeType": "YulTypedName",
														"src": "2380:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2391:7:11",
														"nodeType": "YulTypedName",
														"src": "2391:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2403:6:11",
														"nodeType": "YulTypedName",
														"src": "2403:6:11",
														"type": ""
													}
												],
												"src": "2344:247:11"
											},
											{
												"body": {
													"nativeSrc": "2640:85:11",
													"nodeType": "YulBlock",
													"src": "2640:85:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2703:16:11",
																"nodeType": "YulBlock",
																"src": "2703:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2712:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2715:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2715:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2705:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:11"
																			},
																			"nativeSrc": "2705:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2705:12:11"
																		},
																		"nativeSrc": "2705:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2663:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2663:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2674:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2674:5:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2681:18:11",
																						"nodeType": "YulLiteral",
																						"src": "2681:18:11",
																						"type": "",
																						"value": "0xffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2670:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2670:3:11"
																				},
																				"nativeSrc": "2670:30:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2670:30:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2660:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2660:2:11"
																		},
																		"nativeSrc": "2660:41:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2660:41:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2653:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:11"
																},
																"nativeSrc": "2653:49:11",
																"nodeType": "YulFunctionCall",
																"src": "2653:49:11"
															},
															"nativeSrc": "2650:69:11",
															"nodeType": "YulIf",
															"src": "2650:69:11"
														}
													]
												},
												"name": "validator_revert_uint64",
												"nativeSrc": "2596:129:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2629:5:11",
														"nodeType": "YulTypedName",
														"src": "2629:5:11",
														"type": ""
													}
												],
												"src": "2596:129:11"
											},
											{
												"body": {
													"nativeSrc": "2850:528:11",
													"nodeType": "YulBlock",
													"src": "2850:528:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2897:16:11",
																"nodeType": "YulBlock",
																"src": "2897:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2906:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2906:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2909:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2909:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2899:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2899:6:11"
																			},
																			"nativeSrc": "2899:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2899:12:11"
																		},
																		"nativeSrc": "2899:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2899:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2871:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2871:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2880:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2880:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2867:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2867:3:11"
																		},
																		"nativeSrc": "2867:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2892:3:11",
																		"nodeType": "YulLiteral",
																		"src": "2892:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2863:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2863:3:11"
																},
																"nativeSrc": "2863:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2863:33:11"
															},
															"nativeSrc": "2860:53:11",
															"nodeType": "YulIf",
															"src": "2860:53:11"
														},
														{
															"nativeSrc": "2922:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2922:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2948:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2948:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2935:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2935:12:11"
																},
																"nativeSrc": "2935:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2935:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2926:5:11",
																	"nodeType": "YulTypedName",
																	"src": "2926:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2991:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2991:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint64",
																	"nativeSrc": "2967:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "2967:23:11"
																},
																"nativeSrc": "2967:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2967:30:11"
															},
															"nativeSrc": "2967:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "2967:30:11"
														},
														{
															"nativeSrc": "3006:15:11",
															"nodeType": "YulAssignment",
															"src": "3006:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "3016:5:11",
																"nodeType": "YulIdentifier",
																"src": "3016:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3006:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3006:6:11"
																}
															]
														},
														{
															"nativeSrc": "3030:47:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3030:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3062:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3062:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3073:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3073:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3058:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3058:3:11"
																		},
																		"nativeSrc": "3058:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3058:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3045:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3045:12:11"
																},
																"nativeSrc": "3045:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3045:32:11"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3034:7:11",
																	"nodeType": "YulTypedName",
																	"src": "3034:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3111:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "3111:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3086:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "3086:24:11"
																},
																"nativeSrc": "3086:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3086:33:11"
															},
															"nativeSrc": "3086:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3086:33:11"
														},
														{
															"nativeSrc": "3128:17:11",
															"nodeType": "YulAssignment",
															"src": "3128:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "3138:7:11",
																"nodeType": "YulIdentifier",
																"src": "3138:7:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3128:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3128:6:11"
																}
															]
														},
														{
															"nativeSrc": "3154:47:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3154:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3197:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:11"
																		},
																		"nativeSrc": "3182:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3169:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3169:12:11"
																},
																"nativeSrc": "3169:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3169:32:11"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3158:7:11",
																	"nodeType": "YulTypedName",
																	"src": "3158:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "3235:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "3235:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3210:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "3210:24:11"
																},
																"nativeSrc": "3210:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3210:33:11"
															},
															"nativeSrc": "3210:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3210:33:11"
														},
														{
															"nativeSrc": "3252:17:11",
															"nodeType": "YulAssignment",
															"src": "3252:17:11",
															"value": {
																"name": "value_2",
																"nativeSrc": "3262:7:11",
																"nodeType": "YulIdentifier",
																"src": "3262:7:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3252:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3252:6:11"
																}
															]
														},
														{
															"nativeSrc": "3278:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3278:16:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3293:1:11",
																"nodeType": "YulLiteral",
																"src": "3293:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "3282:7:11",
																	"nodeType": "YulTypedName",
																	"src": "3282:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3303:43:11",
															"nodeType": "YulAssignment",
															"src": "3303:43:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3331:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3331:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3342:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3342:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3327:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3327:3:11"
																		},
																		"nativeSrc": "3327:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3327:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3314:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3314:12:11"
																},
																"nativeSrc": "3314:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3314:32:11"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "3303:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3303:7:11"
																}
															]
														},
														{
															"nativeSrc": "3355:17:11",
															"nodeType": "YulAssignment",
															"src": "3355:17:11",
															"value": {
																"name": "value_3",
																"nativeSrc": "3365:7:11",
																"nodeType": "YulIdentifier",
																"src": "3365:7:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3355:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3355:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64t_addresst_addresst_uint256",
												"nativeSrc": "2730:648:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2792:9:11",
														"nodeType": "YulTypedName",
														"src": "2792:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2803:7:11",
														"nodeType": "YulTypedName",
														"src": "2803:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2815:6:11",
														"nodeType": "YulTypedName",
														"src": "2815:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2823:6:11",
														"nodeType": "YulTypedName",
														"src": "2823:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2831:6:11",
														"nodeType": "YulTypedName",
														"src": "2831:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2839:6:11",
														"nodeType": "YulTypedName",
														"src": "2839:6:11",
														"type": ""
													}
												],
												"src": "2730:648:11"
											},
											{
												"body": {
													"nativeSrc": "3470:301:11",
													"nodeType": "YulBlock",
													"src": "3470:301:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3516:16:11",
																"nodeType": "YulBlock",
																"src": "3516:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3525:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3525:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3528:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3528:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3518:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3518:6:11"
																			},
																			"nativeSrc": "3518:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3518:12:11"
																		},
																		"nativeSrc": "3518:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3518:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3491:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3491:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3500:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3500:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3487:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3487:3:11"
																		},
																		"nativeSrc": "3487:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3487:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3512:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3512:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3483:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3483:3:11"
																},
																"nativeSrc": "3483:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3483:32:11"
															},
															"nativeSrc": "3480:52:11",
															"nodeType": "YulIf",
															"src": "3480:52:11"
														},
														{
															"nativeSrc": "3541:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3541:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3567:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3567:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3554:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3554:12:11"
																},
																"nativeSrc": "3554:23:11",
																"nodeType": "YulFunctionCall",
																"src": "3554:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3545:5:11",
																	"nodeType": "YulTypedName",
																	"src": "3545:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3611:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3611:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3586:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "3586:24:11"
																},
																"nativeSrc": "3586:31:11",
																"nodeType": "YulFunctionCall",
																"src": "3586:31:11"
															},
															"nativeSrc": "3586:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "3586:31:11"
														},
														{
															"nativeSrc": "3626:15:11",
															"nodeType": "YulAssignment",
															"src": "3626:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "3636:5:11",
																"nodeType": "YulIdentifier",
																"src": "3636:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3626:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3626:6:11"
																}
															]
														},
														{
															"nativeSrc": "3650:47:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3650:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3682:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3682:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3693:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3693:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3678:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3678:3:11"
																		},
																		"nativeSrc": "3678:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3678:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3665:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3665:12:11"
																},
																"nativeSrc": "3665:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3665:32:11"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3654:7:11",
																	"nodeType": "YulTypedName",
																	"src": "3654:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3731:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "3731:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3706:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "3706:24:11"
																},
																"nativeSrc": "3706:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3706:33:11"
															},
															"nativeSrc": "3706:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3706:33:11"
														},
														{
															"nativeSrc": "3748:17:11",
															"nodeType": "YulAssignment",
															"src": "3748:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "3758:7:11",
																"nodeType": "YulIdentifier",
																"src": "3758:7:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3748:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3748:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3383:388:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3428:9:11",
														"nodeType": "YulTypedName",
														"src": "3428:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3439:7:11",
														"nodeType": "YulTypedName",
														"src": "3439:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3451:6:11",
														"nodeType": "YulTypedName",
														"src": "3451:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3459:6:11",
														"nodeType": "YulTypedName",
														"src": "3459:6:11",
														"type": ""
													}
												],
												"src": "3383:388:11"
											},
											{
												"body": {
													"nativeSrc": "3831:325:11",
													"nodeType": "YulBlock",
													"src": "3831:325:11",
													"statements": [
														{
															"nativeSrc": "3841:22:11",
															"nodeType": "YulAssignment",
															"src": "3841:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3855:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3855:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3858:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3858:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3851:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3851:3:11"
																},
																"nativeSrc": "3851:12:11",
																"nodeType": "YulFunctionCall",
																"src": "3851:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3841:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:11"
																}
															]
														},
														{
															"nativeSrc": "3872:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3872:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3902:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3908:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3898:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:11"
																},
																"nativeSrc": "3898:12:11",
																"nodeType": "YulFunctionCall",
																"src": "3898:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3876:18:11",
																	"nodeType": "YulTypedName",
																	"src": "3876:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3949:31:11",
																"nodeType": "YulBlock",
																"src": "3949:31:11",
																"statements": [
																	{
																		"nativeSrc": "3951:27:11",
																		"nodeType": "YulAssignment",
																		"src": "3951:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3965:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "3965:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3973:4:11",
																					"nodeType": "YulLiteral",
																					"src": "3973:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3961:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3961:3:11"
																			},
																			"nativeSrc": "3961:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3961:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3951:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3951:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3929:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "3929:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3922:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3922:6:11"
																},
																"nativeSrc": "3922:26:11",
																"nodeType": "YulFunctionCall",
																"src": "3922:26:11"
															},
															"nativeSrc": "3919:61:11",
															"nodeType": "YulIf",
															"src": "3919:61:11"
														},
														{
															"body": {
																"nativeSrc": "4039:111:11",
																"nodeType": "YulBlock",
																"src": "4039:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4060:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4060:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4067:3:11",
																							"nodeType": "YulLiteral",
																							"src": "4067:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4072:10:11",
																							"nodeType": "YulLiteral",
																							"src": "4072:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4063:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "4063:3:11"
																					},
																					"nativeSrc": "4063:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4063:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4053:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4053:6:11"
																			},
																			"nativeSrc": "4053:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4053:31:11"
																		},
																		"nativeSrc": "4053:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4053:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4104:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4104:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4107:4:11",
																					"nodeType": "YulLiteral",
																					"src": "4107:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4097:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4097:6:11"
																			},
																			"nativeSrc": "4097:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4097:15:11"
																		},
																		"nativeSrc": "4097:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4097:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4132:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4132:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4135:4:11",
																					"nodeType": "YulLiteral",
																					"src": "4135:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4125:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4125:6:11"
																			},
																			"nativeSrc": "4125:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4125:15:11"
																		},
																		"nativeSrc": "4125:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4125:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3995:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "3995:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4018:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4018:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4026:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4026:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4015:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4015:2:11"
																		},
																		"nativeSrc": "4015:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4015:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3992:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3992:2:11"
																},
																"nativeSrc": "3992:38:11",
																"nodeType": "YulFunctionCall",
																"src": "3992:38:11"
															},
															"nativeSrc": "3989:161:11",
															"nodeType": "YulIf",
															"src": "3989:161:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3776:380:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3811:4:11",
														"nodeType": "YulTypedName",
														"src": "3811:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3820:6:11",
														"nodeType": "YulTypedName",
														"src": "3820:6:11",
														"type": ""
													}
												],
												"src": "3776:380:11"
											},
											{
												"body": {
													"nativeSrc": "4269:668:11",
													"nodeType": "YulBlock",
													"src": "4269:668:11",
													"statements": [
														{
															"nativeSrc": "4279:42:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4279:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4297:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4297:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4306:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4306:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4293:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4293:3:11"
																		},
																		"nativeSrc": "4293:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4293:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4318:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4318:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4289:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4289:3:11"
																},
																"nativeSrc": "4289:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4289:32:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4283:2:11",
																	"nodeType": "YulTypedName",
																	"src": "4283:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4336:16:11",
																"nodeType": "YulBlock",
																"src": "4336:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4345:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4345:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4348:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4348:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4338:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4338:6:11"
																			},
																			"nativeSrc": "4338:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4338:12:11"
																		},
																		"nativeSrc": "4338:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4338:12:11"
																	}
																]
															},
															"condition": {
																"name": "_1",
																"nativeSrc": "4333:2:11",
																"nodeType": "YulIdentifier",
																"src": "4333:2:11"
															},
															"nativeSrc": "4330:22:11",
															"nodeType": "YulIf",
															"src": "4330:22:11"
														},
														{
															"nativeSrc": "4361:7:11",
															"nodeType": "YulAssignment",
															"src": "4361:7:11",
															"value": {
																"kind": "number",
																"nativeSrc": "4367:1:11",
																"nodeType": "YulLiteral",
																"src": "4367:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "_1",
																	"nativeSrc": "4361:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4361:2:11"
																}
															]
														},
														{
															"nativeSrc": "4377:23:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4377:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4397:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4397:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4391:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4391:5:11"
																},
																"nativeSrc": "4391:9:11",
																"nodeType": "YulFunctionCall",
																"src": "4391:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4381:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4381:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4409:33:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4409:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4431:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4431:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4439:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4439:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4427:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4427:3:11"
																},
																"nativeSrc": "4427:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4427:15:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4413:10:11",
																	"nodeType": "YulTypedName",
																	"src": "4413:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4525:111:11",
																"nodeType": "YulBlock",
																"src": "4525:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4546:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4546:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4553:3:11",
																							"nodeType": "YulLiteral",
																							"src": "4553:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4558:10:11",
																							"nodeType": "YulLiteral",
																							"src": "4558:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4549:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "4549:3:11"
																					},
																					"nativeSrc": "4549:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4549:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4539:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4539:6:11"
																			},
																			"nativeSrc": "4539:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4539:31:11"
																		},
																		"nativeSrc": "4539:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4539:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4590:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4590:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4593:4:11",
																					"nodeType": "YulLiteral",
																					"src": "4593:4:11",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4583:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4583:6:11"
																			},
																			"nativeSrc": "4583:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4583:15:11"
																		},
																		"nativeSrc": "4583:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4583:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4618:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4618:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4621:4:11",
																					"nodeType": "YulLiteral",
																					"src": "4621:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4611:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4611:6:11"
																			},
																			"nativeSrc": "4611:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4611:15:11"
																		},
																		"nativeSrc": "4611:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4611:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4460:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "4460:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4472:18:11",
																				"nodeType": "YulLiteral",
																				"src": "4472:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4457:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4457:2:11"
																		},
																		"nativeSrc": "4457:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4457:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4496:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "4496:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4508:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4508:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4493:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4493:2:11"
																		},
																		"nativeSrc": "4493:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4493:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4454:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4454:2:11"
																},
																"nativeSrc": "4454:62:11",
																"nodeType": "YulFunctionCall",
																"src": "4454:62:11"
															},
															"nativeSrc": "4451:185:11",
															"nodeType": "YulIf",
															"src": "4451:185:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4652:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4652:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4656:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "4656:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4645:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4645:6:11"
																},
																"nativeSrc": "4645:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4645:22:11"
															},
															"nativeSrc": "4645:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "4645:22:11"
														},
														{
															"nativeSrc": "4676:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4695:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4695:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4689:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4689:5:11"
																},
																"nativeSrc": "4689:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4689:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4680:5:11",
																	"nodeType": "YulTypedName",
																	"src": "4680:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4738:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4738:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint64",
																	"nativeSrc": "4714:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "4714:23:11"
																},
																"nativeSrc": "4714:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4714:30:11"
															},
															"nativeSrc": "4714:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "4714:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4760:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4760:6:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4768:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4768:5:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4753:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4753:6:11"
																},
																"nativeSrc": "4753:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4753:21:11"
															},
															"nativeSrc": "4753:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "4753:21:11"
														},
														{
															"nativeSrc": "4783:40:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4783:40:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4808:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4808:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4819:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4819:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4804:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4804:3:11"
																		},
																		"nativeSrc": "4804:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4804:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4798:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4798:5:11"
																},
																"nativeSrc": "4798:25:11",
																"nodeType": "YulFunctionCall",
																"src": "4798:25:11"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4787:7:11",
																	"nodeType": "YulTypedName",
																	"src": "4787:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "4857:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "4857:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4832:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "4832:24:11"
																},
																"nativeSrc": "4832:33:11",
																"nodeType": "YulFunctionCall",
																"src": "4832:33:11"
															},
															"nativeSrc": "4832:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "4832:33:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4885:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4885:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4893:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4893:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4881:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4881:3:11"
																		},
																		"nativeSrc": "4881:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4881:15:11"
																	},
																	{
																		"name": "value_1",
																		"nativeSrc": "4898:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "4898:7:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4874:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4874:6:11"
																},
																"nativeSrc": "4874:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4874:32:11"
															},
															"nativeSrc": "4874:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "4874:32:11"
														},
														{
															"nativeSrc": "4915:16:11",
															"nodeType": "YulAssignment",
															"src": "4915:16:11",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4925:6:11",
																"nodeType": "YulIdentifier",
																"src": "4925:6:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4915:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4915:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_MsgContext_$245_memory_ptr_fromMemory",
												"nativeSrc": "4161:776:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4235:9:11",
														"nodeType": "YulTypedName",
														"src": "4235:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4246:7:11",
														"nodeType": "YulTypedName",
														"src": "4246:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4258:6:11",
														"nodeType": "YulTypedName",
														"src": "4258:6:11",
														"type": ""
													}
												],
												"src": "4161:776:11"
											},
											{
												"body": {
													"nativeSrc": "5116:238:11",
													"nodeType": "YulBlock",
													"src": "5116:238:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5133:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5133:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5144:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5144:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5126:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5126:6:11"
																},
																"nativeSrc": "5126:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5126:21:11"
															},
															"nativeSrc": "5126:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "5126:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5167:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5167:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5178:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5178:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5163:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5163:3:11"
																		},
																		"nativeSrc": "5163:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5163:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5183:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5183:2:11",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:11"
																},
																"nativeSrc": "5156:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5156:30:11"
															},
															"nativeSrc": "5156:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "5156:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5206:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5206:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5217:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5217:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5202:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5202:3:11"
																		},
																		"nativeSrc": "5202:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5202:18:11"
																	},
																	{
																		"hexValue": "4f6d6e6945524332303a204f6e6c792063616c6c61626c65207669612063726f",
																		"kind": "string",
																		"nativeSrc": "5222:34:11",
																		"nodeType": "YulLiteral",
																		"src": "5222:34:11",
																		"type": "",
																		"value": "OmniERC20: Only callable via cro"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5195:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5195:6:11"
																},
																"nativeSrc": "5195:62:11",
																"nodeType": "YulFunctionCall",
																"src": "5195:62:11"
															},
															"nativeSrc": "5195:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "5195:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5277:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5277:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5288:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5288:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5273:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5273:3:11"
																		},
																		"nativeSrc": "5273:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5273:18:11"
																	},
																	{
																		"hexValue": "73732d636861696e206d657373616765",
																		"kind": "string",
																		"nativeSrc": "5293:18:11",
																		"nodeType": "YulLiteral",
																		"src": "5293:18:11",
																		"type": "",
																		"value": "ss-chain message"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5266:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5266:6:11"
																},
																"nativeSrc": "5266:46:11",
																"nodeType": "YulFunctionCall",
																"src": "5266:46:11"
															},
															"nativeSrc": "5266:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "5266:46:11"
														},
														{
															"nativeSrc": "5321:27:11",
															"nodeType": "YulAssignment",
															"src": "5321:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5333:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5333:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5344:3:11",
																		"nodeType": "YulLiteral",
																		"src": "5344:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5329:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5329:3:11"
																},
																"nativeSrc": "5329:19:11",
																"nodeType": "YulFunctionCall",
																"src": "5329:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5321:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5321:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4942:412:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5093:9:11",
														"nodeType": "YulTypedName",
														"src": "5093:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5107:4:11",
														"nodeType": "YulTypedName",
														"src": "5107:4:11",
														"type": ""
													}
												],
												"src": "4942:412:11"
											},
											{
												"body": {
													"nativeSrc": "5516:214:11",
													"nodeType": "YulBlock",
													"src": "5516:214:11",
													"statements": [
														{
															"nativeSrc": "5526:26:11",
															"nodeType": "YulAssignment",
															"src": "5526:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5538:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5538:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5549:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5549:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5534:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:11"
																},
																"nativeSrc": "5534:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5534:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5526:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5526:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5568:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5568:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5583:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5583:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5599:3:11",
																								"nodeType": "YulLiteral",
																								"src": "5599:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5604:1:11",
																								"nodeType": "YulLiteral",
																								"src": "5604:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5595:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "5595:3:11"
																						},
																						"nativeSrc": "5595:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5595:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5608:1:11",
																						"nodeType": "YulLiteral",
																						"src": "5608:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5591:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5591:3:11"
																				},
																				"nativeSrc": "5591:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5591:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5579:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5579:3:11"
																		},
																		"nativeSrc": "5579:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5579:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5561:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5561:6:11"
																},
																"nativeSrc": "5561:51:11",
																"nodeType": "YulFunctionCall",
																"src": "5561:51:11"
															},
															"nativeSrc": "5561:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "5561:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5632:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5643:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5643:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5628:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5628:3:11"
																		},
																		"nativeSrc": "5628:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5628:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5652:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5652:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5668:3:11",
																								"nodeType": "YulLiteral",
																								"src": "5668:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5673:1:11",
																								"nodeType": "YulLiteral",
																								"src": "5673:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5664:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "5664:3:11"
																						},
																						"nativeSrc": "5664:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5664:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5677:1:11",
																						"nodeType": "YulLiteral",
																						"src": "5677:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5660:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5660:3:11"
																				},
																				"nativeSrc": "5660:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5660:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5648:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5648:3:11"
																		},
																		"nativeSrc": "5648:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5648:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5621:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:11"
																},
																"nativeSrc": "5621:60:11",
																"nodeType": "YulFunctionCall",
																"src": "5621:60:11"
															},
															"nativeSrc": "5621:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "5621:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5701:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5701:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5712:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5712:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5697:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5697:3:11"
																		},
																		"nativeSrc": "5697:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5697:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5717:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5717:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5690:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5690:6:11"
																},
																"nativeSrc": "5690:34:11",
																"nodeType": "YulFunctionCall",
																"src": "5690:34:11"
															},
															"nativeSrc": "5690:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "5690:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5359:371:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5469:9:11",
														"nodeType": "YulTypedName",
														"src": "5469:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5480:6:11",
														"nodeType": "YulTypedName",
														"src": "5480:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5488:6:11",
														"nodeType": "YulTypedName",
														"src": "5488:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5496:6:11",
														"nodeType": "YulTypedName",
														"src": "5496:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5507:4:11",
														"nodeType": "YulTypedName",
														"src": "5507:4:11",
														"type": ""
													}
												],
												"src": "5359:371:11"
											},
											{
												"body": {
													"nativeSrc": "5909:177:11",
													"nodeType": "YulBlock",
													"src": "5909:177:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5926:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5926:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5937:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5937:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5919:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5919:6:11"
																},
																"nativeSrc": "5919:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5919:21:11"
															},
															"nativeSrc": "5919:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "5919:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5960:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5960:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5971:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5971:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5956:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5956:3:11"
																		},
																		"nativeSrc": "5956:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5956:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5976:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5976:2:11",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5949:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5949:6:11"
																},
																"nativeSrc": "5949:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5949:30:11"
															},
															"nativeSrc": "5949:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "5949:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5999:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5999:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6010:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6010:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5995:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5995:3:11"
																		},
																		"nativeSrc": "5995:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5995:18:11"
																	},
																	{
																		"hexValue": "4f6d6e6945524332303a20496e73756666696369656e7420666565",
																		"kind": "string",
																		"nativeSrc": "6015:29:11",
																		"nodeType": "YulLiteral",
																		"src": "6015:29:11",
																		"type": "",
																		"value": "OmniERC20: Insufficient fee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5988:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5988:6:11"
																},
																"nativeSrc": "5988:57:11",
																"nodeType": "YulFunctionCall",
																"src": "5988:57:11"
															},
															"nativeSrc": "5988:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "5988:57:11"
														},
														{
															"nativeSrc": "6054:26:11",
															"nodeType": "YulAssignment",
															"src": "6054:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6066:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6066:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6077:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6077:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6062:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6062:3:11"
																},
																"nativeSrc": "6062:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6062:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6054:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6054:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5735:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5886:9:11",
														"nodeType": "YulTypedName",
														"src": "5886:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5900:4:11",
														"nodeType": "YulTypedName",
														"src": "5900:4:11",
														"type": ""
													}
												],
												"src": "5735:351:11"
											},
											{
												"body": {
													"nativeSrc": "6248:188:11",
													"nodeType": "YulBlock",
													"src": "6248:188:11",
													"statements": [
														{
															"nativeSrc": "6258:26:11",
															"nodeType": "YulAssignment",
															"src": "6258:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6270:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6270:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6281:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6281:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6266:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6266:3:11"
																},
																"nativeSrc": "6266:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6266:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6258:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6258:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6300:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6300:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6315:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6315:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6331:3:11",
																								"nodeType": "YulLiteral",
																								"src": "6331:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6336:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6336:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6327:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6327:3:11"
																						},
																						"nativeSrc": "6327:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6327:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6340:1:11",
																						"nodeType": "YulLiteral",
																						"src": "6340:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6323:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6323:3:11"
																				},
																				"nativeSrc": "6323:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6323:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6311:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6311:3:11"
																		},
																		"nativeSrc": "6311:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6311:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6293:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6293:6:11"
																},
																"nativeSrc": "6293:51:11",
																"nodeType": "YulFunctionCall",
																"src": "6293:51:11"
															},
															"nativeSrc": "6293:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "6293:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6364:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6364:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6375:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6375:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6360:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6360:3:11"
																		},
																		"nativeSrc": "6360:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6360:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6380:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6380:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6353:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6353:6:11"
																},
																"nativeSrc": "6353:34:11",
																"nodeType": "YulFunctionCall",
																"src": "6353:34:11"
															},
															"nativeSrc": "6353:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "6353:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6407:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6407:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6418:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6418:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6403:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6403:3:11"
																		},
																		"nativeSrc": "6403:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6403:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6423:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6423:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6396:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6396:6:11"
																},
																"nativeSrc": "6396:34:11",
																"nodeType": "YulFunctionCall",
																"src": "6396:34:11"
															},
															"nativeSrc": "6396:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "6396:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6091:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6201:9:11",
														"nodeType": "YulTypedName",
														"src": "6201:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6212:6:11",
														"nodeType": "YulTypedName",
														"src": "6212:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6220:6:11",
														"nodeType": "YulTypedName",
														"src": "6220:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6228:6:11",
														"nodeType": "YulTypedName",
														"src": "6228:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6239:4:11",
														"nodeType": "YulTypedName",
														"src": "6239:4:11",
														"type": ""
													}
												],
												"src": "6091:345:11"
											},
											{
												"body": {
													"nativeSrc": "6542:102:11",
													"nodeType": "YulBlock",
													"src": "6542:102:11",
													"statements": [
														{
															"nativeSrc": "6552:26:11",
															"nodeType": "YulAssignment",
															"src": "6552:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6564:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6564:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6575:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6575:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6560:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6560:3:11"
																},
																"nativeSrc": "6560:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6560:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6552:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6552:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6594:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6594:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6609:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6609:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6625:3:11",
																								"nodeType": "YulLiteral",
																								"src": "6625:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6630:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6630:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6621:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6621:3:11"
																						},
																						"nativeSrc": "6621:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6621:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6634:1:11",
																						"nodeType": "YulLiteral",
																						"src": "6634:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6617:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6617:3:11"
																				},
																				"nativeSrc": "6617:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6617:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6605:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6605:3:11"
																		},
																		"nativeSrc": "6605:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6605:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6587:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6587:6:11"
																},
																"nativeSrc": "6587:51:11",
																"nodeType": "YulFunctionCall",
																"src": "6587:51:11"
															},
															"nativeSrc": "6587:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "6587:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6441:203:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6511:9:11",
														"nodeType": "YulTypedName",
														"src": "6511:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6522:6:11",
														"nodeType": "YulTypedName",
														"src": "6522:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6533:4:11",
														"nodeType": "YulTypedName",
														"src": "6533:4:11",
														"type": ""
													}
												],
												"src": "6441:203:11"
											},
											{
												"body": {
													"nativeSrc": "6727:199:11",
													"nodeType": "YulBlock",
													"src": "6727:199:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6773:16:11",
																"nodeType": "YulBlock",
																"src": "6773:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6782:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6782:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6785:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6785:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6775:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6775:6:11"
																			},
																			"nativeSrc": "6775:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6775:12:11"
																		},
																		"nativeSrc": "6775:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6775:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6748:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6748:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6757:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6757:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6744:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6744:3:11"
																		},
																		"nativeSrc": "6744:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6744:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6769:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6769:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6740:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6740:3:11"
																},
																"nativeSrc": "6740:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6740:32:11"
															},
															"nativeSrc": "6737:52:11",
															"nodeType": "YulIf",
															"src": "6737:52:11"
														},
														{
															"nativeSrc": "6798:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6798:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6817:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6817:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6811:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6811:5:11"
																},
																"nativeSrc": "6811:16:11",
																"nodeType": "YulFunctionCall",
																"src": "6811:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6802:5:11",
																	"nodeType": "YulTypedName",
																	"src": "6802:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6880:16:11",
																"nodeType": "YulBlock",
																"src": "6880:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6889:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6889:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6892:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6892:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6882:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6882:6:11"
																			},
																			"nativeSrc": "6882:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6882:12:11"
																		},
																		"nativeSrc": "6882:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6882:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6849:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6849:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "6870:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "6870:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "6863:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "6863:6:11"
																						},
																						"nativeSrc": "6863:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6863:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6856:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "6856:6:11"
																				},
																				"nativeSrc": "6856:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6856:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6846:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6846:2:11"
																		},
																		"nativeSrc": "6846:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6846:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6839:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6839:6:11"
																},
																"nativeSrc": "6839:40:11",
																"nodeType": "YulFunctionCall",
																"src": "6839:40:11"
															},
															"nativeSrc": "6836:60:11",
															"nodeType": "YulIf",
															"src": "6836:60:11"
														},
														{
															"nativeSrc": "6905:15:11",
															"nodeType": "YulAssignment",
															"src": "6905:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "6915:5:11",
																"nodeType": "YulIdentifier",
																"src": "6915:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6905:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6905:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6649:277:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6693:9:11",
														"nodeType": "YulTypedName",
														"src": "6693:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6704:7:11",
														"nodeType": "YulTypedName",
														"src": "6704:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6716:6:11",
														"nodeType": "YulTypedName",
														"src": "6716:6:11",
														"type": ""
													}
												],
												"src": "6649:277:11"
											},
											{
												"body": {
													"nativeSrc": "6979:174:11",
													"nodeType": "YulBlock",
													"src": "6979:174:11",
													"statements": [
														{
															"nativeSrc": "6989:16:11",
															"nodeType": "YulAssignment",
															"src": "6989:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7000:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7000:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7003:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7003:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6996:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6996:3:11"
																},
																"nativeSrc": "6996:9:11",
																"nodeType": "YulFunctionCall",
																"src": "6996:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6989:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6989:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7036:111:11",
																"nodeType": "YulBlock",
																"src": "7036:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7057:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7057:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7064:3:11",
																							"nodeType": "YulLiteral",
																							"src": "7064:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7069:10:11",
																							"nodeType": "YulLiteral",
																							"src": "7069:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7060:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "7060:3:11"
																					},
																					"nativeSrc": "7060:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7060:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7050:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7050:6:11"
																			},
																			"nativeSrc": "7050:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7050:31:11"
																		},
																		"nativeSrc": "7050:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7050:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7101:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7101:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7104:4:11",
																					"nodeType": "YulLiteral",
																					"src": "7104:4:11",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7094:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7094:6:11"
																			},
																			"nativeSrc": "7094:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7094:15:11"
																		},
																		"nativeSrc": "7094:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7094:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7129:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7129:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7132:4:11",
																					"nodeType": "YulLiteral",
																					"src": "7132:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7122:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7122:6:11"
																			},
																			"nativeSrc": "7122:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7122:15:11"
																		},
																		"nativeSrc": "7122:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7122:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7020:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7020:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7023:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7023:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7017:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7017:2:11"
																},
																"nativeSrc": "7017:10:11",
																"nodeType": "YulFunctionCall",
																"src": "7017:10:11"
															},
															"nativeSrc": "7014:133:11",
															"nodeType": "YulIf",
															"src": "7014:133:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6931:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6962:1:11",
														"nodeType": "YulTypedName",
														"src": "6962:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6965:1:11",
														"nodeType": "YulTypedName",
														"src": "6965:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6971:3:11",
														"nodeType": "YulTypedName",
														"src": "6971:3:11",
														"type": ""
													}
												],
												"src": "6931:222:11"
											},
											{
												"body": {
													"nativeSrc": "7329:235:11",
													"nodeType": "YulBlock",
													"src": "7329:235:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7346:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7346:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7361:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7361:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7369:18:11",
																				"nodeType": "YulLiteral",
																				"src": "7369:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7357:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7357:3:11"
																		},
																		"nativeSrc": "7357:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7357:31:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7339:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7339:6:11"
																},
																"nativeSrc": "7339:50:11",
																"nodeType": "YulFunctionCall",
																"src": "7339:50:11"
															},
															"nativeSrc": "7339:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "7339:50:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7409:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7409:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7420:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7420:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7405:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7405:3:11"
																		},
																		"nativeSrc": "7405:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7405:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7425:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7425:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7398:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7398:6:11"
																},
																"nativeSrc": "7398:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7398:30:11"
															},
															"nativeSrc": "7398:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "7398:30:11"
														},
														{
															"nativeSrc": "7437:53:11",
															"nodeType": "YulAssignment",
															"src": "7437:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7463:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7463:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7475:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7475:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7486:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7486:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7471:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7471:3:11"
																		},
																		"nativeSrc": "7471:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7471:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7445:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7445:17:11"
																},
																"nativeSrc": "7445:45:11",
																"nodeType": "YulFunctionCall",
																"src": "7445:45:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7437:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7437:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7510:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7510:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7521:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7521:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7506:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7506:3:11"
																		},
																		"nativeSrc": "7506:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7506:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "7530:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7530:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7538:18:11",
																				"nodeType": "YulLiteral",
																				"src": "7538:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7526:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7526:3:11"
																		},
																		"nativeSrc": "7526:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7526:31:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7499:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7499:6:11"
																},
																"nativeSrc": "7499:59:11",
																"nodeType": "YulFunctionCall",
																"src": "7499:59:11"
															},
															"nativeSrc": "7499:59:11",
															"nodeType": "YulExpressionStatement",
															"src": "7499:59:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_bytes_memory_ptr_t_uint64__to_t_uint64_t_bytes_memory_ptr_t_uint64__fromStack_reversed",
												"nativeSrc": "7158:406:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7282:9:11",
														"nodeType": "YulTypedName",
														"src": "7282:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7293:6:11",
														"nodeType": "YulTypedName",
														"src": "7293:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7301:6:11",
														"nodeType": "YulTypedName",
														"src": "7301:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7309:6:11",
														"nodeType": "YulTypedName",
														"src": "7309:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7320:4:11",
														"nodeType": "YulTypedName",
														"src": "7320:4:11",
														"type": ""
													}
												],
												"src": "7158:406:11"
											},
											{
												"body": {
													"nativeSrc": "7650:103:11",
													"nodeType": "YulBlock",
													"src": "7650:103:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7696:16:11",
																"nodeType": "YulBlock",
																"src": "7696:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7705:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7705:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7708:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7708:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7698:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7698:6:11"
																			},
																			"nativeSrc": "7698:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7698:12:11"
																		},
																		"nativeSrc": "7698:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7698:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7671:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7671:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7680:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7680:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7667:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7667:3:11"
																		},
																		"nativeSrc": "7667:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7667:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7692:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7692:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7663:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7663:3:11"
																},
																"nativeSrc": "7663:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7663:32:11"
															},
															"nativeSrc": "7660:52:11",
															"nodeType": "YulIf",
															"src": "7660:52:11"
														},
														{
															"nativeSrc": "7721:26:11",
															"nodeType": "YulAssignment",
															"src": "7721:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7737:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7737:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7731:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7731:5:11"
																},
																"nativeSrc": "7731:16:11",
																"nodeType": "YulFunctionCall",
																"src": "7731:16:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7721:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7721:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7569:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7616:9:11",
														"nodeType": "YulTypedName",
														"src": "7616:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7627:7:11",
														"nodeType": "YulTypedName",
														"src": "7627:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7639:6:11",
														"nodeType": "YulTypedName",
														"src": "7639:6:11",
														"type": ""
													}
												],
												"src": "7569:184:11"
											},
											{
												"body": {
													"nativeSrc": "7932:174:11",
													"nodeType": "YulBlock",
													"src": "7932:174:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7949:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7949:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7960:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7960:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7942:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7942:6:11"
																},
																"nativeSrc": "7942:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7942:21:11"
															},
															"nativeSrc": "7942:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "7942:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7983:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7983:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7994:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7994:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7979:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7979:3:11"
																		},
																		"nativeSrc": "7979:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7979:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7999:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7999:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7972:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7972:6:11"
																},
																"nativeSrc": "7972:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7972:30:11"
															},
															"nativeSrc": "7972:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "7972:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8022:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8022:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8033:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8033:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8018:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8018:3:11"
																		},
																		"nativeSrc": "8018:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8018:18:11"
																	},
																	{
																		"hexValue": "584170703a20696e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "8038:26:11",
																		"nodeType": "YulLiteral",
																		"src": "8038:26:11",
																		"type": "",
																		"value": "XApp: insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8011:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8011:6:11"
																},
																"nativeSrc": "8011:54:11",
																"nodeType": "YulFunctionCall",
																"src": "8011:54:11"
															},
															"nativeSrc": "8011:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "8011:54:11"
														},
														{
															"nativeSrc": "8074:26:11",
															"nodeType": "YulAssignment",
															"src": "8074:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8086:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8086:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8097:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8097:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8082:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8082:3:11"
																},
																"nativeSrc": "8082:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8082:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8074:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8074:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7758:348:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7909:9:11",
														"nodeType": "YulTypedName",
														"src": "7909:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7923:4:11",
														"nodeType": "YulTypedName",
														"src": "7923:4:11",
														"type": ""
													}
												],
												"src": "7758:348:11"
											},
											{
												"body": {
													"nativeSrc": "8334:361:11",
													"nodeType": "YulBlock",
													"src": "8334:361:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8351:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8351:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8366:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8366:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8374:18:11",
																				"nodeType": "YulLiteral",
																				"src": "8374:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8362:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8362:3:11"
																		},
																		"nativeSrc": "8362:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8362:31:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8344:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8344:6:11"
																},
																"nativeSrc": "8344:50:11",
																"nodeType": "YulFunctionCall",
																"src": "8344:50:11"
															},
															"nativeSrc": "8344:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "8344:50:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8414:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8414:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8425:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8425:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8410:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8410:3:11"
																		},
																		"nativeSrc": "8410:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8410:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8434:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8434:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8442:4:11",
																				"nodeType": "YulLiteral",
																				"src": "8442:4:11",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8430:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8430:3:11"
																		},
																		"nativeSrc": "8430:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8430:17:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8403:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8403:6:11"
																},
																"nativeSrc": "8403:45:11",
																"nodeType": "YulFunctionCall",
																"src": "8403:45:11"
															},
															"nativeSrc": "8403:45:11",
															"nodeType": "YulExpressionStatement",
															"src": "8403:45:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8468:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8468:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8479:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8479:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8464:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8464:3:11"
																		},
																		"nativeSrc": "8464:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8464:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "8488:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8488:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8504:3:11",
																								"nodeType": "YulLiteral",
																								"src": "8504:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8509:1:11",
																								"nodeType": "YulLiteral",
																								"src": "8509:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8500:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "8500:3:11"
																						},
																						"nativeSrc": "8500:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "8500:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8513:1:11",
																						"nodeType": "YulLiteral",
																						"src": "8513:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8496:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8496:3:11"
																				},
																				"nativeSrc": "8496:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8496:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8484:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8484:3:11"
																		},
																		"nativeSrc": "8484:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8484:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8457:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8457:6:11"
																},
																"nativeSrc": "8457:60:11",
																"nodeType": "YulFunctionCall",
																"src": "8457:60:11"
															},
															"nativeSrc": "8457:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "8457:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8537:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8537:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8548:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8548:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8533:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8533:3:11"
																		},
																		"nativeSrc": "8533:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8533:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8553:3:11",
																		"nodeType": "YulLiteral",
																		"src": "8553:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8526:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8526:6:11"
																},
																"nativeSrc": "8526:31:11",
																"nodeType": "YulFunctionCall",
																"src": "8526:31:11"
															},
															"nativeSrc": "8526:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "8526:31:11"
														},
														{
															"nativeSrc": "8566:54:11",
															"nodeType": "YulAssignment",
															"src": "8566:54:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8592:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8592:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8604:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8604:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8615:3:11",
																				"nodeType": "YulLiteral",
																				"src": "8615:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8600:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8600:3:11"
																		},
																		"nativeSrc": "8600:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "8574:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "8574:17:11"
																},
																"nativeSrc": "8574:46:11",
																"nodeType": "YulFunctionCall",
																"src": "8574:46:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8566:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8566:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8640:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8640:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8651:3:11",
																				"nodeType": "YulLiteral",
																				"src": "8651:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8636:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8636:3:11"
																		},
																		"nativeSrc": "8636:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8636:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "8661:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8661:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8669:18:11",
																				"nodeType": "YulLiteral",
																				"src": "8669:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8657:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8657:3:11"
																		},
																		"nativeSrc": "8657:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8657:31:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8629:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8629:6:11"
																},
																"nativeSrc": "8629:60:11",
																"nodeType": "YulFunctionCall",
																"src": "8629:60:11"
															},
															"nativeSrc": "8629:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "8629:60:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_uint8_t_address_t_bytes_memory_ptr_t_uint64__to_t_uint64_t_uint8_t_address_t_bytes_memory_ptr_t_uint64__fromStack_reversed",
												"nativeSrc": "8111:584:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8271:9:11",
														"nodeType": "YulTypedName",
														"src": "8271:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8282:6:11",
														"nodeType": "YulTypedName",
														"src": "8282:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8290:6:11",
														"nodeType": "YulTypedName",
														"src": "8290:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8298:6:11",
														"nodeType": "YulTypedName",
														"src": "8298:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8306:6:11",
														"nodeType": "YulTypedName",
														"src": "8306:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8314:6:11",
														"nodeType": "YulTypedName",
														"src": "8314:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8325:4:11",
														"nodeType": "YulTypedName",
														"src": "8325:4:11",
														"type": ""
													}
												],
												"src": "8111:584:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_contract$_IOmniPortal_$175__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function validator_revert_uint64(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint64t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint64(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 96))\n        value3 := value_3\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_struct$_MsgContext_$245_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := slt(sub(dataEnd, headStart), 64)\n        if _1 { revert(0, 0) }\n        _1 := 0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let value := mload(headStart)\n        validator_revert_uint64(value)\n        mstore(memPtr, value)\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        mstore(add(memPtr, 32), value_1)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"OmniERC20: Only callable via cro\")\n        mstore(add(headStart, 96), \"ss-chain message\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"OmniERC20: Insufficient fee\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint64_t_bytes_memory_ptr_t_uint64__to_t_uint64_t_bytes_memory_ptr_t_uint64__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n        mstore(add(headStart, 32), 96)\n        tail := abi_encode_string(value1, add(headStart, 96))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"XApp: insufficient funds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint64_t_uint8_t_address_t_bytes_memory_ptr_t_uint64__to_t_uint64_t_uint8_t_address_t_bytes_memory_ptr_t_uint64__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), 160)\n        tail := abi_encode_string(value3, add(headStart, 160))\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffff))\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100d9575f3560e01c80634a536a061161007c57806395d89b411161005757806395d89b411461025d578063a9059cbb14610271578063bdb3c8e614610290578063dd62ed3e146102a3575f80fd5b80634a536a06146101eb57806370a082311461020a57806374eeb8471461023e575f80fd5b806323b872dd116100b757806323b872dd14610154578063313ce5671461017357806339acf9f11461019457806340c10f19146101ca575f80fd5b806306fdde03146100dd578063095ea7b31461010757806318160ddd14610136575b5f80fd5b3480156100e8575f80fd5b506100f16102e7565b6040516100fe9190610afb565b60405180910390f35b348015610112575f80fd5b50610126610121366004610b2b565b610377565b60405190151581526020016100fe565b348015610141575f80fd5b506004545b6040519081526020016100fe565b34801561015f575f80fd5b5061012661016e366004610b55565b610390565b34801561017e575f80fd5b5060125b60405160ff90911681526020016100fe565b34801561019f575f80fd5b505f546101b2906001600160a01b031681565b6040516001600160a01b0390911681526020016100fe565b3480156101d5575f80fd5b506101e96101e4366004610b2b565b6103b3565b005b3480156101f6575f80fd5b506101e9610205366004610b55565b6103c1565b348015610215575f80fd5b50610146610224366004610b93565b6001600160a01b03165f9081526002602052604090205490565b348015610249575f80fd5b505f5461018290600160a01b900460ff1681565b348015610268575f80fd5b506100f16104fd565b34801561027c575f80fd5b5061012661028b366004610b2b565b61050c565b6101e961029e366004610bc3565b610519565b3480156102ae575f80fd5b506101466102bd366004610c11565b6001600160a01b039182165f90815260036020908152604080832093909416825291909152205490565b6060600580546102f690610c48565b80601f016020809104026020016040519081016040528092919081815260200182805461032290610c48565b801561036d5780601f106103445761010080835404028352916020019161036d565b820191905f5260205f20905b81548152906001019060200180831161035057829003601f168201915b5050505050905090565b5f336103848185856105e0565b60019150505b92915050565b5f3361039d8582856105f2565b6103a885858561066d565b506001949350505050565b6103bd82826106ca565b5050565b5f5460408051631799380760e11b815281516001600160a01b0390931692632f32700e926004808401939192918290030181865afa158015610405573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104299190610c80565b8051600180546020909301516001600160a01b031668010000000000000000026001600160e01b031990931667ffffffffffffffff909216919091179190911790556104736106fe565b6104dd5760405162461bcd60e51b815260206004820152603060248201527f4f6d6e6945524332303a204f6e6c792063616c6c61626c65207669612063726f60448201526f73732d636861696e206d65737361676560801b60648201526084015b60405180910390fd5b6104e883838361078c565b5050600180546001600160e01b031916905550565b6060600680546102f690610c48565b5f3361038481858561066d565b3361052581308461066d565b6040513060248201526001600160a01b0384166044820152606481018390525f9060840160408051601f198184030181529190526020810180516001600160e01b0316632529b50360e11b17905290505f610585878784620249f06108b2565b9050803410156105d75760405162461bcd60e51b815260206004820152601b60248201527f4f6d6e6945524332303a20496e73756666696369656e7420666565000000000060448201526064016104d4565b50505050505050565b6105ed83838360016109fb565b505050565b6001600160a01b038381165f908152600360209081526040808320938616835292905220545f198114610667578181101561065957604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104d4565b61066784848484035f6109fb565b50505050565b6001600160a01b03831661069657604051634b637e8f60e11b81525f60048201526024016104d4565b6001600160a01b0382166106bf5760405163ec442f0560e01b81525f60048201526024016104d4565b6105ed83838361078c565b6001600160a01b0382166106f35760405163ec442f0560e01b81525f60048201526024016104d4565b6103bd5f838361078c565b5f805f9054906101000a90046001600160a01b03166001600160a01b03166355e2448e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561074e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107729190610ceb565b801561078757505f546001600160a01b031633145b905090565b6001600160a01b0383166107b6578060045f8282546107ab9190610d0a565b909155506108269050565b6001600160a01b0383165f90815260026020526040902054818110156108085760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104d4565b6001600160a01b0384165f9081526002602052604090209082900390555b6001600160a01b03821661084257600480548290039055610860565b6001600160a01b0382165f9081526002602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108a591815260200190565b60405180910390a3505050565b5f8054604051632376548f60e21b815282916001600160a01b031690638dd9523c906108e690899088908890600401610d29565b602060405180830381865afa158015610901573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109259190610d65565b905080471015806109365750803410155b6109825760405162461bcd60e51b815260206004820152601860248201527f584170703a20696e73756666696369656e742066756e6473000000000000000060448201526064016104d4565b5f5460405163c21dda4f60e01b81526001600160a01b0382169163c21dda4f9184916109c3918b91600160a01b900460ff16908b908b908b90600401610d7c565b5f604051808303818588803b1580156109da575f80fd5b505af11580156109ec573d5f803e3d5ffd5b50939998505050505050505050565b6001600160a01b038416610a245760405163e602df0560e01b81525f60048201526024016104d4565b6001600160a01b038316610a4d57604051634a1406b160e11b81525f60048201526024016104d4565b6001600160a01b038085165f908152600360209081526040808320938716835292905220829055801561066757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610abf91815260200190565b60405180910390a350505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610b0d6020830184610acd565b9392505050565b6001600160a01b0381168114610b28575f80fd5b50565b5f8060408385031215610b3c575f80fd5b8235610b4781610b14565b946020939093013593505050565b5f805f60608486031215610b67575f80fd5b8335610b7281610b14565b92506020840135610b8281610b14565b929592945050506040919091013590565b5f60208284031215610ba3575f80fd5b8135610b0d81610b14565b67ffffffffffffffff81168114610b28575f80fd5b5f805f8060808587031215610bd6575f80fd5b8435610be181610bae565b93506020850135610bf181610b14565b92506040850135610c0181610b14565b9396929550929360600135925050565b5f8060408385031215610c22575f80fd5b8235610c2d81610b14565b91506020830135610c3d81610b14565b809150509250929050565b600181811c90821680610c5c57607f821691505b602082108103610c7a57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f6040828403128015610c91575f80fd5b506040805190810167ffffffffffffffff81118282101715610cc157634e487b7160e01b5f52604160045260245ffd5b6040528251610ccf81610bae565b81526020830151610cdf81610b14565b60208201529392505050565b5f60208284031215610cfb575f80fd5b81518015158114610b0d575f80fd5b8082018082111561038a57634e487b7160e01b5f52601160045260245ffd5b67ffffffffffffffff84168152606060208201525f610d4b6060830185610acd565b905067ffffffffffffffff83166040830152949350505050565b5f60208284031215610d75575f80fd5b5051919050565b67ffffffffffffffff8616815260ff851660208201526001600160a01b038416604082015260a0606082018190525f90610db890830185610acd565b905067ffffffffffffffff83166080830152969550505050505056fea26469706673582212200c117be31930a09c16a0d20458dc7ecb44ce2b68fb44af9f81cc4ce2578f186364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A536A06 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xBDB3C8E6 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4A536A06 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x74EEB847 EQ PUSH2 0x23E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x39ACF9F1 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1CA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x136 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xB55 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x1B2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0xB55 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x182 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH2 0x4FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x2F6 SWAP1 PUSH2 0xC48 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x322 SWAP1 PUSH2 0xC48 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x36D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x344 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x36D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x350 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x384 DUP2 DUP6 DUP6 PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x39D DUP6 DUP3 DUP6 PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x3A8 DUP6 DUP6 DUP6 PUSH2 0x66D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3BD DUP3 DUP3 PUSH2 0x6CA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x17993807 PUSH1 0xE1 SHL DUP2 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x2F32700E SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x405 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0xC80 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x20 SWAP1 SWAP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH9 0x10000000000000000 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x473 PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6D6E6945524332303A204F6E6C792063616C6C61626C65207669612063726F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x73732D636861696E206D657373616765 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E8 DUP4 DUP4 DUP4 PUSH2 0x78C JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x2F6 SWAP1 PUSH2 0xC48 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x384 DUP2 DUP6 DUP6 PUSH2 0x66D JUMP JUMPDEST CALLER PUSH2 0x525 DUP2 ADDRESS DUP5 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x2529B503 PUSH1 0xE1 SHL OR SWAP1 MSTORE SWAP1 POP PUSH0 PUSH2 0x585 DUP8 DUP8 DUP5 PUSH3 0x249F0 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6D6E6945524332303A20496E73756666696369656E74206665650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D4 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5ED DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x667 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x667 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x9FB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x696 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x5ED DUP4 DUP4 DUP4 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x3BD PUSH0 DUP4 DUP4 PUSH2 0x78C JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x55E2448E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x787 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7B6 JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xD0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x826 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x808 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x842 JUMPI PUSH1 0x4 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x860 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x8A5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2376548F PUSH1 0xE2 SHL DUP2 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8DD9523C SWAP1 PUSH2 0x8E6 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x901 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x925 SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO DUP1 PUSH2 0x936 JUMPI POP DUP1 CALLVALUE LT ISZERO JUMPDEST PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x584170703A20696E73756666696369656E742066756E64730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC21DDA4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 PUSH4 0xC21DDA4F SWAP2 DUP5 SWAP2 PUSH2 0x9C3 SWAP2 DUP12 SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0xD7C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9EC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP SWAP4 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA4D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x667 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xABF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xB0D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xACD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xB47 DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB67 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xB72 DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xB82 DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB0D DUP2 PUSH2 0xB14 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xB28 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xBE1 DUP2 PUSH2 0xBAE JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xBF1 DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0xC01 DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC22 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xC2D DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xC3D DUP2 PUSH2 0xB14 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC5C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC7A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 DUP5 SUB SLT DUP1 ISZERO PUSH2 0xC91 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCC1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH2 0xCCF DUP2 PUSH2 0xBAE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xCDF DUP2 PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB0D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x38A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0xD4B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xACD JUMP JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP7 AND DUP2 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0xDB8 SWAP1 DUP4 ADD DUP6 PUSH2 0xACD JUMP JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC GT PUSH28 0xE31930A09C16A0D20458DC7ECB44CE2B68FB44AF9F81CC4CE2578F18 PUSH4 0x64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "128:1082:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:98:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1656:195;;;;;;;;;;-1:-1:-1;1656:195:7;;;;;:::i;:::-;;:::i;:::-;;;1206:14:11;;1199:22;1181:41;;1169:2;1154:18;1656:195:7;1041:187:11;1257:106:7;;;;;;;;;;-1:-1:-1;1344:12:7;;1257:106;;;1379:25:11;;;1367:2;1352:18;1257:106:7;1233:177:11;1857:253:7;;;;;;;;;;-1:-1:-1;1857:253:7;;;;;:::i;:::-;;:::i;1160:91::-;;;;;;;;;;-1:-1:-1;1242:2:7;1160:91;;;2100:4:11;2088:17;;;2070:36;;2058:2;2043:18;1160:91:7;1928:184:11;680:23:4;;;;;;;;;;-1:-1:-1;680:23:4;;;;-1:-1:-1;;;;;680:23:4;;;;;;-1:-1:-1;;;;;2300:32:11;;;2282:51;;2270:2;2255:18;680:23:4;2117:222:11;803:161:9;;;;;;;;;;-1:-1:-1;803:161:9;;;;;:::i;:::-;;:::i;:::-;;2774:204:7;;;;;;;;;;-1:-1:-1;2774:204:7;;;;;:::i;:::-;;:::i;1369:125::-;;;;;;;;;;-1:-1:-1;1369:125:7;;;;;:::i;:::-;-1:-1:-1;;;;;1469:18:7;1443:7;1469:18;;;:9;:18;;;;;;;1369:125;779:29:4;;;;;;;;;;-1:-1:-1;779:29:4;;;;-1:-1:-1;;;779:29:4;;;;;;1052:102:7;;;;;;;;;;;;;:::i;2117:187::-;;;;;;;;;;-1:-1:-1;2117:187:7;;;;;:::i;:::-;;:::i;2309:459::-;;;;;;:::i;:::-;;:::i;1501:149::-;;;;;;;;;;-1:-1:-1;1501:149:7;;;;;:::i;:::-;-1:-1:-1;;;;;1616:18:7;;;1590:7;1616:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;1501:149;948:98;1002:13;1034:5;1027:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:98;:::o;1656:195::-;1738:4;735:10:10;1792:31:7;735:10:10;1808:7:7;1817:5;1792:8;:31::i;:::-;1840:4;1833:11;;;1656:195;;;;;:::o;1857:253::-;1953:4;735:10:10;2009:37:7;2025:4;735:10:10;2040:5:7;2009:15;:37::i;:::-;2056:26;2066:4;2072:2;2076:5;2056:9;:26::i;:::-;-1:-1:-1;2099:4:7;;1857:253;-1:-1:-1;;;;1857:253:7:o;803:161:9:-;936:21;942:7;951:5;936;:21::i;:::-;803:161;;:::o;2774:204:7:-;1058:4:4;;:11;;;-1:-1:-1;;;1058:11:4;;;;-1:-1:-1;;;;;1058:4:4;;;;:9;;:11;;;;;;;;;;;;;:4;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1051:18;;:4;:18;;;;;;;-1:-1:-1;;;;;1051:18:4;;;-1:-1:-1;;;;;;1051:18:4;;;;;;;;;;;;;;;;;2874:9:7::1;:7;:9::i;:::-;2866:70;;;::::0;-1:-1:-1;;;2866:70:7;;5144:2:11;2866:70:7::1;::::0;::::1;5126:21:11::0;5183:2;5163:18;;;5156:30;5222:34;5202:18;;;5195:62;-1:-1:-1;;;5273:18:11;;;5266:46;5329:19;;2866:70:7::1;;;;;;;;;2946:24;2954:4;2960:2;2964:5;2946:7;:24::i;:::-;-1:-1:-1::0;;1097:4:4;1090:11;;-1:-1:-1;;;;;;1090:11:4;;;-1:-1:-1;2774:204:7:o;1052:102::-;1108:13;1140:7;1133:14;;;;;:::i;2117:187::-;2195:4;735:10:10;2249:27:7;735:10:10;2266:2:7;2270:5;2249:9;:27::i;2309:459::-;735:10:10;2456:37:7;735:10:10;2480:4:7;2487:5;2456:9;:37::i;:::-;2560:69;;2611:4;2560:69;;;5561:51:11;-1:-1:-1;;;;;5648:32:11;;5628:18;;;5621:60;5697:18;;;5690:34;;;2540:17:7;;5534:18:11;;2560:69:7;;;-1:-1:-1;;2560:69:7;;;;;;;;;;;;;;-1:-1:-1;;;;;2560:69:7;-1:-1:-1;;;2560:69:7;;;;-1:-1:-1;;2653:41:7;2659:9;2670;2560:69;2687:6;2653:5;:41::i;:::-;2639:55;;2725:3;2712:9;:16;;2704:56;;;;-1:-1:-1;;;2704:56:7;;5937:2:11;2704:56:7;;;5919:21:11;5976:2;5956:18;;;5949:30;6015:29;5995:18;;;5988:57;6062:18;;2704:56:7;5735:351:11;2704:56:7;2408:360;;;2309:459;;;;:::o;4013:128::-;4097:37;4106:5;4113:7;4122:5;4129:4;4097:8;:37::i;:::-;4013:128;;;:::o;4585:477::-;-1:-1:-1;;;;;1616:18:7;;;4684:24;1616:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;4750:37:7;;4746:310;;4826:5;4807:16;:24;4803:130;;;4858:60;;-1:-1:-1;;;4858:60:7;;-1:-1:-1;;;;;6311:32:11;;4858:60:7;;;6293:51:11;6360:18;;;6353:34;;;6403:18;;;6396:34;;;6266:18;;4858:60:7;6091:345:11;4803:130:7;4974:57;4983:5;4990:7;5018:5;4999:16;:24;5025:5;4974:8;:57::i;:::-;4674:388;4585:477;;;:::o;2984:309::-;-1:-1:-1;;;;;3075:18:7;;3071:86;;3116:30;;-1:-1:-1;;;3116:30:7;;3143:1;3116:30;;;2282:51:11;2255:18;;3116:30:7;2117:222:11;3071:86:7;-1:-1:-1;;;;;3170:16:7;;3166:86;;3209:32;;-1:-1:-1;;;3209:32:7;;3238:1;3209:32;;;2282:51:11;2255:18;;3209:32:7;2117:222:11;3166:86:7;3262:24;3270:4;3276:2;3280:5;3262:7;:24::i;1000:208:9:-;-1:-1:-1;;;;;1070:21:9;;1066:91;;1114:32;;-1:-1:-1;;;1114:32:9;;1143:1;1114:32;;;2282:51:11;2255:18;;1114:32:9;2117:222:11;1066:91:9;1166:35;1182:1;1186:7;1195:5;1166:7;:35::i;1209:117:4:-;1251:4;1274;;;;;;;;;-1:-1:-1;;;;;1274:4:4;-1:-1:-1;;;;;1274:12:4;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;;;-1:-1:-1;1314:4:4;;-1:-1:-1;;;;;1314:4:4;1292:10;:27;1274:45;1267:52;;1209:117;:::o;3300:706:7:-;-1:-1:-1;;;;;3389:18:7;;3385:359;;3439:5;3423:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;3385:359:7;;-1:-1:-1;3385:359:7;;-1:-1:-1;;;;;3497:15:7;;3475:19;3497:15;;;:9;:15;;;;;;3530:19;;;3526:115;;;3576:50;;-1:-1:-1;;;3576:50:7;;-1:-1:-1;;;;;6311:32:11;;3576:50:7;;;6293:51:11;6360:18;;;6353:34;;;6403:18;;;6396:34;;;6266:18;;3576:50:7;6091:345:11;3526:115:7;-1:-1:-1;;;;;3682:15:7;;;;;;:9;:15;;;;;3700:19;;;;3682:37;;3385:359;-1:-1:-1;;;;;3758:16:7;;3754:205;;3818:12;:21;;;;;;;3754:205;;;-1:-1:-1;;;;;3912:13:7;;;;;;:9;:13;;;;;:22;;;;;;3754:205;3989:2;-1:-1:-1;;;;;3974:25:7;3983:4;-1:-1:-1;;;;;3974:25:7;;3993:5;3974:25;;;;1379::11;;1367:2;1352:18;;1233:177;3974:25:7;;;;;;;;3300:706;;;:::o;2156:381:4:-;2257:7;2290:4;;:40;;-1:-1:-1;;;2290:40:4;;2257:7;;-1:-1:-1;;;;;2290:4:4;;:11;;:40;;2302:11;;2315:4;;2321:8;;2290:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2276:54;;2373:3;2348:21;:28;;:48;;;;2393:3;2380:9;:16;;2348:48;2340:85;;;;-1:-1:-1;;;2340:85:4;;7960:2:11;2340:85:4;;;7942:21:11;7999:2;7979:18;;;7972:30;8038:26;8018:18;;;8011:54;8082:18;;2340:85:4;7758:348:11;2340:85:4;2435:4;;:75;;-1:-1:-1;;;2435:75:4;;-1:-1:-1;;;;;2435:4:4;;;:10;;2454:3;;2435:75;;2460:11;;-1:-1:-1;;;2473:16:4;;;;;2491:2;;2495:4;;2501:8;;2435:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2527:3:4;;2156:381;-1:-1:-1;;;;;;;;;2156:381:4:o;4147:432:7:-;-1:-1:-1;;;;;4259:19:7;;4255:89;;4301:32;;-1:-1:-1;;;4301:32:7;;4330:1;4301:32;;;2282:51:11;2255:18;;4301:32:7;2117:222:11;4255:89:7;-1:-1:-1;;;;;4357:21:7;;4353:90;;4401:31;;-1:-1:-1;;;4401:31:7;;4429:1;4401:31;;;2282:51:11;2255:18;;4401:31:7;2117:222:11;4353:90:7;-1:-1:-1;;;;;4452:18:7;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;4497:76;;;;4547:7;-1:-1:-1;;;;;4531:31:7;4540:5;-1:-1:-1;;;;;4531:31:7;;4556:5;4531:31;;;;1379:25:11;;1367:2;1352:18;;1233:177;4531:31:7;;;;;;;;4147:432;;;;:::o;14:289:11:-;56:3;94:5;88:12;121:6;116:3;109:19;177:6;170:4;163:5;159:16;152:4;147:3;143:14;137:47;229:1;222:4;213:6;208:3;204:16;200:27;193:38;292:4;285:2;281:7;276:2;268:6;264:15;260:29;255:3;251:39;247:50;240:57;;;14:289;;;;:::o;308:220::-;457:2;446:9;439:21;420:4;477:45;518:2;507:9;503:18;495:6;477:45;:::i;:::-;469:53;308:220;-1:-1:-1;;;308:220:11:o;533:131::-;-1:-1:-1;;;;;608:31:11;;598:42;;588:70;;654:1;651;644:12;588:70;533:131;:::o;669:367::-;737:6;745;798:2;786:9;777:7;773:23;769:32;766:52;;;814:1;811;804:12;766:52;853:9;840:23;872:31;897:5;872:31;:::i;:::-;922:5;1000:2;985:18;;;;972:32;;-1:-1:-1;;;669:367:11:o;1415:508::-;1492:6;1500;1508;1561:2;1549:9;1540:7;1536:23;1532:32;1529:52;;;1577:1;1574;1567:12;1529:52;1616:9;1603:23;1635:31;1660:5;1635:31;:::i;:::-;1685:5;-1:-1:-1;1742:2:11;1727:18;;1714:32;1755:33;1714:32;1755:33;:::i;:::-;1415:508;;1807:7;;-1:-1:-1;;;1887:2:11;1872:18;;;;1859:32;;1415:508::o;2344:247::-;2403:6;2456:2;2444:9;2435:7;2431:23;2427:32;2424:52;;;2472:1;2469;2462:12;2424:52;2511:9;2498:23;2530:31;2555:5;2530:31;:::i;2596:129::-;2681:18;2674:5;2670:30;2663:5;2660:41;2650:69;;2715:1;2712;2705:12;2730:648;2815:6;2823;2831;2839;2892:3;2880:9;2871:7;2867:23;2863:33;2860:53;;;2909:1;2906;2899:12;2860:53;2948:9;2935:23;2967:30;2991:5;2967:30;:::i;:::-;3016:5;-1:-1:-1;3073:2:11;3058:18;;3045:32;3086:33;3045:32;3086:33;:::i;:::-;3138:7;-1:-1:-1;3197:2:11;3182:18;;3169:32;3210:33;3169:32;3210:33;:::i;:::-;2730:648;;;;-1:-1:-1;3262:7:11;;3342:2;3327:18;3314:32;;-1:-1:-1;;2730:648:11:o;3383:388::-;3451:6;3459;3512:2;3500:9;3491:7;3487:23;3483:32;3480:52;;;3528:1;3525;3518:12;3480:52;3567:9;3554:23;3586:31;3611:5;3586:31;:::i;:::-;3636:5;-1:-1:-1;3693:2:11;3678:18;;3665:32;3706:33;3665:32;3706:33;:::i;:::-;3758:7;3748:17;;;3383:388;;;;;:::o;3776:380::-;3855:1;3851:12;;;;3898;;;3919:61;;3973:4;3965:6;3961:17;3951:27;;3919:61;4026:2;4018:6;4015:14;3995:18;3992:38;3989:161;;4072:10;4067:3;4063:20;4060:1;4053:31;4107:4;4104:1;4097:15;4135:4;4132:1;4125:15;3989:161;;3776:380;;;:::o;4161:776::-;4258:6;4318:2;4306:9;4297:7;4293:23;4289:32;4333:2;4330:22;;;4348:1;4345;4338:12;4330:22;-1:-1:-1;4397:2:11;4391:9;;;4427:15;;4472:18;4457:34;;4493:22;;;4454:62;4451:185;;;4558:10;4553:3;4549:20;4546:1;4539:31;4593:4;4590:1;4583:15;4621:4;4618:1;4611:15;4451:185;4652:2;4645:22;4689:16;;4714:30;4689:16;4714:30;:::i;:::-;4753:21;;4819:2;4804:18;;4798:25;4832:33;4798:25;4832:33;:::i;:::-;4893:2;4881:15;;4874:32;4885:6;4161:776;-1:-1:-1;;;4161:776:11:o;6649:277::-;6716:6;6769:2;6757:9;6748:7;6744:23;6740:32;6737:52;;;6785:1;6782;6775:12;6737:52;6817:9;6811:16;6870:5;6863:13;6856:21;6849:5;6846:32;6836:60;;6892:1;6889;6882:12;6931:222;6996:9;;;7017:10;;;7014:133;;;7069:10;7064:3;7060:20;7057:1;7050:31;7104:4;7101:1;7094:15;7132:4;7129:1;7122:15;7158:406;7369:18;7361:6;7357:31;7346:9;7339:50;7425:2;7420;7409:9;7405:18;7398:30;7320:4;7445:45;7486:2;7475:9;7471:18;7463:6;7445:45;:::i;:::-;7437:53;;7538:18;7530:6;7526:31;7521:2;7510:9;7506:18;7499:59;7158:406;;;;;;:::o;7569:184::-;7639:6;7692:2;7680:9;7671:7;7667:23;7663:32;7660:52;;;7708:1;7705;7698:12;7660:52;-1:-1:-1;7731:16:11;;7569:184;-1:-1:-1;7569:184:11:o;8111:584::-;8374:18;8362:31;;8344:50;;8442:4;8430:17;;8425:2;8410:18;;8403:45;-1:-1:-1;;;;;8484:32:11;;8479:2;8464:18;;8457:60;8504:3;8548:2;8533:18;;8526:31;;;-1:-1:-1;;8574:46:11;;8600:19;;8592:6;8574:46;:::i;:::-;8566:54;;8669:18;8661:6;8657:31;8651:3;8640:9;8636:19;8629:60;8111:584;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "718800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24752",
								"balanceOf(address)": "2573",
								"decimals()": "234",
								"defaultConfLevel()": "2395",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"omni()": "2402",
								"receiveTransfer(address,address,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "51245",
								"transfer(uint64,address,address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 1210,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 128,
									"end": 1210,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 1210,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 164,
									"end": 225,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 164,
									"end": 225,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 164,
									"end": 225,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 164,
									"end": 225,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 183,
									"end": 225,
									"name": "PUSH",
									"source": 9,
									"value": "CB60A0451831E4865BC49F41F9C67665FC9B75C3"
								},
								{
									"begin": 164,
									"end": 225,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 164,
									"end": 225,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 164,
									"end": 225,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 231,
									"end": 698,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 698,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 231,
									"end": 698,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 231,
									"end": 698,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 231,
									"end": 698,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 231,
									"end": 698,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 231,
									"end": 698,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 231,
									"end": 698,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 430,
									"end": 440,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 430,
									"end": 440,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 414,
									"end": 419,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 414,
									"end": 419,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 421,
									"end": 428,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 421,
									"end": 428,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 430,
									"end": 440,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 430,
									"end": 440,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 430,
									"end": 440,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 296,
									"end": 317,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 430,
									"end": 440,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 296,
									"end": 310,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 296,
									"end": 317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 296,
									"end": 317,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 296,
									"end": 317,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 327,
									"end": 366,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 348,
									"end": 365,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 327,
									"end": 347,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 327,
									"end": 366,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 327,
									"end": 366,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 327,
									"end": 366,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 895,
									"end": 900,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 895,
									"end": 900,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 895,
									"end": 908,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 903,
									"end": 908,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 895,
									"end": 900,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 895,
									"end": 908,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 895,
									"end": 908,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 895,
									"end": 908,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 895,
									"end": 908,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 918,
									"end": 925,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 918,
									"end": 935,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 928,
									"end": 935,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 918,
									"end": 925,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 918,
									"end": 935,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 918,
									"end": 935,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 918,
									"end": 935,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 918,
									"end": 935,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 534,
									"end": 552,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 534,
									"end": 552,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 534,
									"end": 552,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 548,
									"end": 552,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 534,
									"end": 552,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 531,
									"end": 692,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 531,
									"end": 692,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 563,
									"end": 605,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 569,
									"end": 589,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 591,
									"end": 604,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 563,
									"end": 568,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 563,
									"end": 605,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 563,
									"end": 605,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 563,
									"end": 605,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 531,
									"end": 692,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 531,
									"end": 692,
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 531,
									"end": 692,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 531,
									"end": 692,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 646,
									"end": 681,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 664,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 667,
									"end": 680,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 646,
									"end": 651,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 646,
									"end": 681,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 646,
									"end": 681,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 646,
									"end": 681,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 231,
									"end": 698,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 128,
									"end": 1210,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 128,
									"end": 1210,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3791,
									"end": 3976,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 3791,
									"end": 3976,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3857,
									"end": 3876,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3857,
									"end": 3876,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4560,
									"end": 4562,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4542,
									"end": 4563,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4599,
									"end": 4601,
									"name": "PUSH",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 4579,
									"end": 4597,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4579,
									"end": 4597,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4579,
									"end": 4597,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4572,
									"end": 4602,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "584170703A206E6F207A65726F206F6D6E69"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "70"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4618,
									"end": 4636,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 4618,
									"end": 4636,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4618,
									"end": 4636,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4611,
									"end": 4659,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4676,
									"end": 4694,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 4676,
									"end": 4694,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3913,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4851,
									"end": 4902,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4851,
									"end": 4902,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4851,
									"end": 4902,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "PUSH",
									"source": 4,
									"value": "79162C8D053A07E70CDC1CCC536F0440B571F8508377D2BEF51094FADAB98F47"
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4839,
									"end": 4841,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4824,
									"end": 4842,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "LOG1",
									"source": 4
								},
								{
									"begin": 3791,
									"end": 3976,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3791,
									"end": 3976,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3462,
									"end": 3663,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 3462,
									"end": 3663,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3531,
									"end": 3554,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 3549,
									"end": 3553,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3531,
									"end": 3548,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 3531,
									"end": 3554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3531,
									"end": 3554,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 3531,
									"end": 3554,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 5115,
									"end": 5117,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5097,
									"end": 5118,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5154,
									"end": 5156,
									"name": "PUSH",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 5134,
									"end": 5152,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 5134,
									"end": 5152,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5134,
									"end": 5152,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5127,
									"end": 5157,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5193,
									"end": 5219,
									"name": "PUSH",
									"source": 11,
									"value": "584170703A20696E76616C696420636F6E66206C6576656C0000000000000000"
								},
								{
									"begin": 5173,
									"end": 5191,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 5173,
									"end": 5191,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5173,
									"end": 5191,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5166,
									"end": 5220,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5237,
									"end": 5255,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 5237,
									"end": 5255,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 4913,
									"end": 5261,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3609,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 5408,
									"end": 5444,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5408,
									"end": 5444,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5408,
									"end": 5444,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "PUSH",
									"source": 4,
									"value": "8DE08A798B4E50B4F351C1EAA91A11530043802BE3FFAC2DF87DB0C45A2E8483"
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5396,
									"end": 5398,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5381,
									"end": 5399,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 5266,
									"end": 5450,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1000,
									"end": 1208,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1000,
									"end": 1208,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1070,
									"end": 1091,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1070,
									"end": 1091,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1066,
									"end": 1157,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1066,
									"end": 1157,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1114,
									"end": 1146,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1114,
									"end": 1146,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1114,
									"end": 1146,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1114,
									"end": 1146,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1143,
									"end": 1144,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1114,
									"end": 1146,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1114,
									"end": 1146,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1114,
									"end": 1146,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4851,
									"end": 4902,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4824,
									"end": 4842,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4824,
									"end": 4842,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1114,
									"end": 1146,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 4705,
									"end": 4908,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1066,
									"end": 1157,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1066,
									"end": 1157,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1166,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1182,
									"end": 1183,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1186,
									"end": 1193,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1195,
									"end": 1200,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1166,
									"end": 1173,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1166,
									"end": 1201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1166,
									"end": 1201,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1166,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1000,
									"end": 1208,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1000,
									"end": 1208,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1000,
									"end": 1208,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 791,
									"end": 911,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 791,
									"end": 911,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 844,
									"end": 848,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 867,
									"end": 882,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 867,
									"end": 882,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 867,
									"end": 882,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 571,
									"end": 572,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 867,
									"end": 882,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 867,
									"end": 882,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 867,
									"end": 904,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 867,
									"end": 904,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 886,
									"end": 904,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 886,
									"end": 904,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 710,
									"end": 711,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 867,
									"end": 904,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 867,
									"end": 904,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 860,
									"end": 904,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 791,
									"end": 911,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 791,
									"end": 911,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3300,
									"end": 4006,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3300,
									"end": 4006,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3389,
									"end": 3407,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3389,
									"end": 3407,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3385,
									"end": 3744,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3385,
									"end": 3744,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3439,
									"end": 3444,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3435,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3423,
									"end": 3435,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3423,
									"end": 3444,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3444,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3444,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 3423,
									"end": 3444,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3444,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3423,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3444,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 3423,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3444,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3444,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3444,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3385,
									"end": 3744,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3385,
									"end": 3744,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3385,
									"end": 3744,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3385,
									"end": 3744,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3385,
									"end": 3744,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3497,
									"end": 3512,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3512,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3475,
									"end": 3494,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3497,
									"end": 3512,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3512,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3512,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3506,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3497,
									"end": 3512,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3497,
									"end": 3512,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3512,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3497,
									"end": 3512,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3512,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3512,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3530,
									"end": 3549,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3530,
									"end": 3549,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3530,
									"end": 3549,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3526,
									"end": 3641,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3526,
									"end": 3641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3526,
									"end": 3641,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3576,
									"end": 3626,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3576,
									"end": 3626,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3576,
									"end": 3626,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3576,
									"end": 3626,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5902,
									"end": 5934,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5902,
									"end": 5934,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3576,
									"end": 3626,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3576,
									"end": 3626,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3576,
									"end": 3626,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5884,
									"end": 5935,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5951,
									"end": 5969,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 5951,
									"end": 5969,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5951,
									"end": 5969,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5944,
									"end": 5978,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5944,
									"end": 5978,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5944,
									"end": 5978,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5994,
									"end": 6012,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 5994,
									"end": 6012,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5994,
									"end": 6012,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5987,
									"end": 6021,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5987,
									"end": 6021,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5987,
									"end": 6021,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5857,
									"end": 5875,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 5857,
									"end": 5875,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3576,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 5682,
									"end": 6027,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3526,
									"end": 3641,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3526,
									"end": 3641,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3682,
									"end": 3697,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3697,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3697,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3682,
									"end": 3697,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3697,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3697,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3691,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3682,
									"end": 3697,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3682,
									"end": 3697,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3697,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3682,
									"end": 3697,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3697,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 3700,
									"end": 3719,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3700,
									"end": 3719,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3700,
									"end": 3719,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3700,
									"end": 3719,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3719,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3719,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3385,
									"end": 3744,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3385,
									"end": 3744,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3758,
									"end": 3774,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3758,
									"end": 3774,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3754,
									"end": 3959,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3754,
									"end": 3959,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3818,
									"end": 3830,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3818,
									"end": 3839,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3818,
									"end": 3839,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3818,
									"end": 3839,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3818,
									"end": 3839,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3818,
									"end": 3839,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3818,
									"end": 3839,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3818,
									"end": 3839,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3754,
									"end": 3959,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 3754,
									"end": 3959,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3754,
									"end": 3959,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3754,
									"end": 3959,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3912,
									"end": 3925,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3925,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3925,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3912,
									"end": 3925,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3925,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3925,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3921,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3912,
									"end": 3925,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3912,
									"end": 3925,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3925,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3912,
									"end": 3925,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3925,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3934,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3934,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3934,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3934,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3934,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3754,
									"end": 3959,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 3754,
									"end": 3959,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3989,
									"end": 3991,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3983,
									"end": 3987,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "PUSH",
									"source": 7,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 3993,
									"end": 3998,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6178,
									"end": 6203,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6178,
									"end": 6203,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6166,
									"end": 6168,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6151,
									"end": 6169,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6151,
									"end": 6169,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6032,
									"end": 6209,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3999,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 3300,
									"end": 4006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3300,
									"end": 4006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3300,
									"end": 4006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3300,
									"end": 4006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 146,
									"end": 869,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 146,
									"end": 869,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 11,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 775,
									"end": 779,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 773,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 763,
									"end": 780,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 756,
									"end": 760,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 754,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 744,
									"end": 761,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 738,
									"end": 789,
									"name": "MCOPY",
									"source": 11
								},
								{
									"begin": 837,
									"end": 838,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 828,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 809,
									"end": 828,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 805,
									"end": 835,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 798,
									"end": 839,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 813,
									"end": 819,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 146,
									"end": 869,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1844,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 874,
									"end": 1844,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 997,
									"end": 1003,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1005,
									"end": 1011,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1013,
									"end": 1019,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1021,
									"end": 1027,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1029,
									"end": 1035,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 1070,
									"end": 1079,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1061,
									"end": 1068,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1057,
									"end": 1080,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1053,
									"end": 1086,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 1050,
									"end": 1103,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1050,
									"end": 1103,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 1050,
									"end": 1103,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1099,
									"end": 1100,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1096,
									"end": 1097,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1089,
									"end": 1101,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1050,
									"end": 1103,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 1050,
									"end": 1103,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1126,
									"end": 1142,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1126,
									"end": 1142,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1154,
									"end": 1184,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1154,
									"end": 1184,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1201,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1151,
									"end": 1201,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1197,
									"end": 1198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1201,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1151,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1220,
									"end": 1281,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 1273,
									"end": 1280,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1264,
									"end": 1270,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1253,
									"end": 1262,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1220,
									"end": 1281,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 1220,
									"end": 1281,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1220,
									"end": 1281,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 1220,
									"end": 1281,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1327,
									"end": 1329,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1312,
									"end": 1330,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1312,
									"end": 1330,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1306,
									"end": 1331,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1210,
									"end": 1281,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1210,
									"end": 1281,
									"name": "SWAP7",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1306,
									"end": 1331,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1340,
									"end": 1392,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1340,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 1340,
									"end": 1392,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1388,
									"end": 1389,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1385,
									"end": 1386,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1378,
									"end": 1390,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1340,
									"end": 1392,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 1340,
									"end": 1392,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1411,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 1466,
									"end": 1473,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1455,
									"end": 1463,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1444,
									"end": 1453,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1440,
									"end": 1464,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1411,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 1411,
									"end": 1474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1411,
									"end": 1474,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 1411,
									"end": 1474,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1514,
									"end": 1516,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1499,
									"end": 1517,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1517,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1493,
									"end": 1518,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1561,
									"end": 1563,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1546,
									"end": 1564,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1546,
									"end": 1564,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1540,
									"end": 1565,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1401,
									"end": 1474,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1401,
									"end": 1474,
									"name": "SWAP7",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1518,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1540,
									"end": 1565,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1594,
									"end": 1625,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1594,
									"end": 1625,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1584,
									"end": 1626,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1584,
									"end": 1626,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1644,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 1574,
									"end": 1644,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1640,
									"end": 1641,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1630,
									"end": 1642,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1644,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 1574,
									"end": 1644,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1734,
									"end": 1737,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1719,
									"end": 1738,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1719,
									"end": 1738,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1713,
									"end": 1739,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1663,
									"end": 1668,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1663,
									"end": 1668,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1777,
									"end": 1792,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1777,
									"end": 1792,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1770,
									"end": 1793,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1758,
									"end": 1794,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1758,
									"end": 1794,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1748,
									"end": 1812,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 1748,
									"end": 1812,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1808,
									"end": 1809,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1805,
									"end": 1806,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1748,
									"end": 1812,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 1748,
									"end": 1812,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1831,
									"end": 1838,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1844,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1844,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1844,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1844,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1844,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1844,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1844,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1844,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1844,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1849,
									"end": 2229,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1849,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1928,
									"end": 1929,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1924,
									"end": 1936,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1924,
									"end": 1936,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1924,
									"end": 1936,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1924,
									"end": 1936,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1971,
									"end": 1983,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1971,
									"end": 1983,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1971,
									"end": 1983,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1992,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1992,
									"end": 2053,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2046,
									"end": 2050,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 2038,
									"end": 2044,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2034,
									"end": 2051,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2051,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2051,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1992,
									"end": 2053,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1992,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2099,
									"end": 2101,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2091,
									"end": 2097,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2088,
									"end": 2102,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2068,
									"end": 2086,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2065,
									"end": 2103,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2062,
									"end": 2223,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 2062,
									"end": 2223,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2145,
									"end": 2155,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 2140,
									"end": 2143,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 2136,
									"end": 2156,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2133,
									"end": 2134,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2126,
									"end": 2157,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2180,
									"end": 2184,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 2177,
									"end": 2178,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2170,
									"end": 2185,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2208,
									"end": 2212,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 2205,
									"end": 2206,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2198,
									"end": 2213,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2062,
									"end": 2223,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 2062,
									"end": 2223,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2062,
									"end": 2223,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1849,
									"end": 2229,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1849,
									"end": 2229,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1849,
									"end": 2229,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1849,
									"end": 2229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2360,
									"end": 2878,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 2360,
									"end": 2878,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2462,
									"end": 2464,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2457,
									"end": 2460,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2454,
									"end": 2465,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2451,
									"end": 2872,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2451,
									"end": 2872,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2451,
									"end": 2872,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2498,
									"end": 2503,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2496,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2488,
									"end": 2504,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2542,
									"end": 2546,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2539,
									"end": 2540,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2529,
									"end": 2547,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2614,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2600,
									"end": 2610,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2596,
									"end": 2615,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2593,
									"end": 2594,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 2589,
									"end": 2616,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 2583,
									"end": 2587,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2579,
									"end": 2617,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2648,
									"end": 2652,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2636,
									"end": 2646,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2633,
									"end": 2653,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2630,
									"end": 2677,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2630,
									"end": 2677,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 2630,
									"end": 2677,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2671,
									"end": 2675,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2630,
									"end": 2677,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 2630,
									"end": 2677,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2726,
									"end": 2728,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2721,
									"end": 2724,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2717,
									"end": 2729,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2714,
									"end": 2715,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 2710,
									"end": 2730,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 2704,
									"end": 2708,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2700,
									"end": 2731,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2690,
									"end": 2731,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2690,
									"end": 2731,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 2862,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 2781,
									"end": 2862,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2799,
									"end": 2801,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2792,
									"end": 2797,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2789,
									"end": 2802,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 2862,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 2862,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 2781,
									"end": 2862,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2858,
									"end": 2859,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2844,
									"end": 2860,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2844,
									"end": 2860,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2825,
									"end": 2826,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2814,
									"end": 2827,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 2862,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 2781,
									"end": 2862,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 2862,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 2781,
									"end": 2862,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2785,
									"end": 2788,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2785,
									"end": 2788,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2451,
									"end": 2872,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2451,
									"end": 2872,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2360,
									"end": 2878,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2360,
									"end": 2878,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2360,
									"end": 2878,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2360,
									"end": 2878,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3054,
									"end": 4353,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 3054,
									"end": 4353,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3174,
									"end": 3184,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3174,
									"end": 3184,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3196,
									"end": 3226,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3196,
									"end": 3226,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3193,
									"end": 3249,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3193,
									"end": 3249,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 3193,
									"end": 3249,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3229,
									"end": 3247,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 3229,
									"end": 3247,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 3229,
									"end": 3247,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3229,
									"end": 3247,
									"name": "tag",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 3229,
									"end": 3247,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3258,
									"end": 3355,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 3348,
									"end": 3354,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3308,
									"end": 3346,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 3340,
									"end": 3344,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3345,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 3308,
									"end": 3346,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 3308,
									"end": 3346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3308,
									"end": 3346,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 3308,
									"end": 3346,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3302,
									"end": 3306,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3258,
									"end": 3355,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 3258,
									"end": 3355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3258,
									"end": 3355,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 3258,
									"end": 3355,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3404,
									"end": 3408,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3435,
									"end": 3437,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 3424,
									"end": 3438,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3424,
									"end": 3438,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3452,
									"end": 3453,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3447,
									"end": 4096,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3447,
									"end": 4096,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 3447,
									"end": 4096,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 3447,
									"end": 4096,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4140,
									"end": 4141,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4157,
									"end": 4163,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4154,
									"end": 4243,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4154,
									"end": 4243,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 4154,
									"end": 4243,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4209,
									"end": 4228,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4209,
									"end": 4228,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4209,
									"end": 4228,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4229,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4154,
									"end": 4243,
									"name": "tag",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 4154,
									"end": 4243,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3011,
									"end": 3012,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 3007,
									"end": 3018,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3007,
									"end": 3018,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3007,
									"end": 3018,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 3003,
									"end": 3027,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 2999,
									"end": 3028,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2989,
									"end": 3029,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3035,
									"end": 3036,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3031,
									"end": 3042,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3031,
									"end": 3042,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3031,
									"end": 3042,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2986,
									"end": 3043,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 4256,
									"end": 4337,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4256,
									"end": 4337,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3417,
									"end": 4347,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 3417,
									"end": 4347,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3447,
									"end": 4096,
									"name": "tag",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 3447,
									"end": 4096,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2307,
									"end": 2308,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2300,
									"end": 2314,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2314,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2314,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2344,
									"end": 2348,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2331,
									"end": 2349,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2331,
									"end": 2349,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3483,
									"end": 3503,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3483,
									"end": 3503,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3483,
									"end": 3503,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3601,
									"end": 3823,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 3601,
									"end": 3823,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3615,
									"end": 3622,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3612,
									"end": 3613,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3609,
									"end": 3623,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3601,
									"end": 3823,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3601,
									"end": 3823,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 3601,
									"end": 3823,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3697,
									"end": 3716,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3697,
									"end": 3716,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3697,
									"end": 3716,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3691,
									"end": 3717,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3676,
									"end": 3718,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3676,
									"end": 3718,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3789,
									"end": 3809,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 3789,
									"end": 3809,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3789,
									"end": 3809,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3789,
									"end": 3809,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 3757,
									"end": 3758,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3745,
									"end": 3759,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3745,
									"end": 3759,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3745,
									"end": 3759,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3745,
									"end": 3759,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3643,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3601,
									"end": 3823,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 3601,
									"end": 3823,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3601,
									"end": 3823,
									"name": "tag",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 3601,
									"end": 3823,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3605,
									"end": 3608,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3851,
									"end": 3857,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3842,
									"end": 3849,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3839,
									"end": 3858,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3836,
									"end": 4037,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3836,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 3836,
									"end": 4037,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3912,
									"end": 3931,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3912,
									"end": 3931,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3912,
									"end": 3931,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3906,
									"end": 3932,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3995,
									"end": 3996,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 3991,
									"end": 4005,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3991,
									"end": 4005,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3991,
									"end": 4005,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 4007,
									"end": 4010,
									"name": "PUSH",
									"source": 11,
									"value": "F8"
								},
								{
									"begin": 3987,
									"end": 4011,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3983,
									"end": 4020,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 3979,
									"end": 4021,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3964,
									"end": 4022,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3949,
									"end": 4023,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3949,
									"end": 4023,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3836,
									"end": 4037,
									"name": "tag",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 3836,
									"end": 4037,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4083,
									"end": 4084,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4067,
									"end": 4081,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4067,
									"end": 4081,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4067,
									"end": 4081,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 4063,
									"end": 4085,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4050,
									"end": 4086,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4050,
									"end": 4086,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3054,
									"end": 4353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5455,
									"end": 5677,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 5455,
									"end": 5677,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5520,
									"end": 5529,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5520,
									"end": 5529,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5520,
									"end": 5529,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5541,
									"end": 5551,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5541,
									"end": 5551,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5541,
									"end": 5551,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 5538,
									"end": 5671,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5538,
									"end": 5671,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 5538,
									"end": 5671,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5593,
									"end": 5603,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 5588,
									"end": 5591,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 5584,
									"end": 5604,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 5581,
									"end": 5582,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5574,
									"end": 5605,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5628,
									"end": 5632,
									"name": "PUSH",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 5625,
									"end": 5626,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 5618,
									"end": 5633,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5656,
									"end": 5660,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 5653,
									"end": 5654,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5646,
									"end": 5661,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 6032,
									"end": 6209,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 6032,
									"end": 6209,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 128,
									"end": 1210,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 1210,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 128,
									"end": 1210,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 1210,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 1210,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 128,
									"end": 1210,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 1210,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c117be31930a09c16a0d20458dc7ecb44ce2b68fb44af9f81cc4ce2578f186364736f6c634300081a0033",
									".code": [
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "4A536A06"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "BDB3C8E6"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "4A536A06"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "74EEB847"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "39ACF9F1"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 1210,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 948,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 948,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1656,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1656,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1220,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1206,
											"end": 1220,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1199,
											"end": 1221,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1181,
											"end": 1222,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1181,
											"end": 1222,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1169,
											"end": 1171,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1154,
											"end": 1172,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1041,
											"end": 1228,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1404,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1404,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1404,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1367,
											"end": 1369,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1233,
											"end": 1410,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1857,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1242,
											"end": 1244,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2104,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2070,
											"end": 2106,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2070,
											"end": 2106,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1928,
											"end": 2112,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 680,
											"end": 703,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 680,
											"end": 703,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2300,
											"end": 2332,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2332,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2332,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2282,
											"end": 2333,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2282,
											"end": 2333,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2270,
											"end": 2272,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2117,
											"end": 2339,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 803,
											"end": 964,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 803,
											"end": 964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 803,
											"end": 964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 803,
											"end": 964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 803,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 803,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 803,
											"end": 964,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 803,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 803,
											"end": 964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 803,
											"end": 964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 803,
											"end": 964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 803,
											"end": 964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2774,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2774,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1369,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 779,
											"end": 808,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 779,
											"end": 808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1052,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2117,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2117,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2309,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2309,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1501,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1590,
											"end": 1597,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1627,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1002,
											"end": 1015,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1034,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1027,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1027,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1792,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1822,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1792,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1792,
											"end": 1823,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1792,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1840,
											"end": 1844,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1833,
											"end": 1844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1833,
											"end": 1844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1833,
											"end": 1844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2009,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 2025,
											"end": 2029,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2040,
											"end": 2045,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2009,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 2009,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2009,
											"end": 2046,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 2009,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2066,
											"end": 2070,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2072,
											"end": 2074,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2056,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2103,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2099,
											"end": 2103,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1857,
											"end": 2110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 964,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 803,
											"end": 964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 936,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 942,
											"end": 949,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 951,
											"end": 956,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 936,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 936,
											"end": 957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 936,
											"end": 957,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 936,
											"end": 957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 803,
											"end": 964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2774,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17993807"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1067,
											"name": "PUSH",
											"source": 4,
											"value": "2F32700E"
										},
										{
											"begin": 1058,
											"end": 1067,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1058,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "10000000000000000"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2874,
											"end": 2881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2874,
											"end": 2883,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2874,
											"end": 2883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2866,
											"end": 2936,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2866,
											"end": 2936,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2936,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5144,
											"end": 5146,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 2936,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5126,
											"end": 5147,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5183,
											"end": 5185,
											"name": "PUSH",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 5163,
											"end": 5181,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5163,
											"end": 5181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5181,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5156,
											"end": 5186,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5222,
											"end": 5256,
											"name": "PUSH",
											"source": 11,
											"value": "4F6D6E6945524332303A204F6E6C792063616C6C61626C65207669612063726F"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5257,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73732D636861696E206D657373616765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5273,
											"end": 5291,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5273,
											"end": 5291,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5291,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5266,
											"end": 5312,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5329,
											"end": 5348,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 5329,
											"end": 5348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2866,
											"end": 2936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2954,
											"end": 2958,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2960,
											"end": 2962,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2969,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2946,
											"end": 2970,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2970,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2946,
											"end": 2970,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1097,
											"end": 1101,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1121,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1140,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1133,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2249,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2268,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2270,
											"end": 2275,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2249,
											"end": 2276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2480,
											"end": 2484,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2492,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2456,
											"end": 2493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2615,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5612,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5648,
											"end": 5680,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5648,
											"end": 5680,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5621,
											"end": 5681,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5552,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 5534,
											"end": 5552,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2529B503"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2659,
											"end": 2668,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2679,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2629,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "PUSH",
											"source": 7,
											"value": "249F0"
										},
										{
											"begin": 2653,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2653,
											"end": 2694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2694,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2653,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2694,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2712,
											"end": 2721,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2712,
											"end": 2728,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2712,
											"end": 2728,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2704,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2704,
											"end": 2760,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2704,
											"end": 2760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2704,
											"end": 2760,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2704,
											"end": 2760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2704,
											"end": 2760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5937,
											"end": 5939,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2704,
											"end": 2760,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2704,
											"end": 2760,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2704,
											"end": 2760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5919,
											"end": 5940,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5976,
											"end": 5978,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 5956,
											"end": 5974,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5956,
											"end": 5974,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5956,
											"end": 5974,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5949,
											"end": 5979,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6015,
											"end": 6044,
											"name": "PUSH",
											"source": 11,
											"value": "4F6D6E6945524332303A20496E73756666696369656E74206665650000000000"
										},
										{
											"begin": 5995,
											"end": 6013,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5995,
											"end": 6013,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5995,
											"end": 6013,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5988,
											"end": 6045,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6062,
											"end": 6080,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2704,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5735,
											"end": 6086,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2704,
											"end": 2760,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2704,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2408,
											"end": 2768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2408,
											"end": 2768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2408,
											"end": 2768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4141,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4013,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4097,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 4106,
											"end": 4111,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4113,
											"end": 4120,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4127,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4097,
											"end": 4134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4097,
											"end": 4134,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 4097,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 5062,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4585,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4684,
											"end": 4708,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1627,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4750,
											"end": 4787,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4787,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4746,
											"end": 5056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4807,
											"end": 4823,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4807,
											"end": 4831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4803,
											"end": 4933,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4803,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4803,
											"end": 4933,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4858,
											"end": 4918,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4858,
											"end": 4918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4858,
											"end": 4918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4858,
											"end": 4918,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6311,
											"end": 6343,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6311,
											"end": 6343,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4918,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4858,
											"end": 4918,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4858,
											"end": 4918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6344,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6353,
											"end": 6387,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6353,
											"end": 6387,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6353,
											"end": 6387,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6430,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6430,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6284,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6266,
											"end": 6284,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6091,
											"end": 6436,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4803,
											"end": 4933,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4803,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4983,
											"end": 4988,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 4997,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5018,
											"end": 5023,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4999,
											"end": 5015,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4999,
											"end": 5023,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5025,
											"end": 5030,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4974,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4974,
											"end": 5031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5031,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4974,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4674,
											"end": 5062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 5062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 5062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 5062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 5062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2984,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3093,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3093,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3071,
											"end": 3157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3144,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2333,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2117,
											"end": 2339,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3157,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3071,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3170,
											"end": 3186,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3170,
											"end": 3186,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3166,
											"end": 3252,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3241,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3209,
											"end": 3241,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3209,
											"end": 3241,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3238,
											"end": 3239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3241,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3209,
											"end": 3241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3241,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2333,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3209,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2117,
											"end": 2339,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3166,
											"end": 3252,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3166,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3262,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 3270,
											"end": 3274,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3285,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3262,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3262,
											"end": 3286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1208,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1000,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1091,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 1091,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1066,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1066,
											"end": 1157,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1144,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2333,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1114,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2117,
											"end": 2339,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1157,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1066,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1182,
											"end": 1183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1193,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1195,
											"end": 1200,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1166,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1209,
											"end": 1326,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1209,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1274,
											"end": 1286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1286,
											"name": "PUSH",
											"source": 4,
											"value": "55E2448E"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1274,
											"end": 1288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1292,
											"end": 1302,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1292,
											"end": 1319,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1319,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 4006,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3300,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3389,
											"end": 3407,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3389,
											"end": 3407,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3385,
											"end": 3744,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3444,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3435,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3423,
											"end": 3435,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3444,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3444,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3444,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3423,
											"end": 3444,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3444,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3423,
											"end": 3444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3444,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3423,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3444,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3444,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3444,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3385,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3385,
											"end": 3744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3385,
											"end": 3744,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3744,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3385,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3549,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3549,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3549,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3641,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3526,
											"end": 3641,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3626,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3576,
											"end": 3626,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3576,
											"end": 3626,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6311,
											"end": 6343,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6311,
											"end": 6343,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3576,
											"end": 3626,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3576,
											"end": 3626,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3626,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6344,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6353,
											"end": 6387,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6353,
											"end": 6387,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6353,
											"end": 6387,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6430,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6430,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6284,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6266,
											"end": 6284,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3576,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6091,
											"end": 6436,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3526,
											"end": 3641,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3526,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3691,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3719,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3719,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3719,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3744,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3385,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3758,
											"end": 3774,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3774,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3754,
											"end": 3959,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3830,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3818,
											"end": 3839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3839,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3839,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3839,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3839,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3754,
											"end": 3959,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3959,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3754,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3912,
											"end": 3925,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3925,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3912,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3912,
											"end": 3925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3912,
											"end": 3925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3925,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3934,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3934,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3934,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3934,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3959,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3754,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 3987,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "PUSH",
											"source": 7,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1404,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1404,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1367,
											"end": 1369,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1233,
											"end": 1410,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 3999,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 4006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 4006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 4006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 4006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2156,
											"end": 2537,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2156,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2264,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2376548F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2264,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2264,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2301,
											"name": "PUSH",
											"source": 4,
											"value": "8DD9523C"
										},
										{
											"begin": 2290,
											"end": 2301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2313,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2313,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2319,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2329,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2290,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2290,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2373,
											"end": 2376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2369,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2376,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2376,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2348,
											"end": 2396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2393,
											"end": 2396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2389,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2396,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2396,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2348,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7960,
											"end": 7962,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7942,
											"end": 7963,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7999,
											"end": 8001,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 7979,
											"end": 7997,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7979,
											"end": 7997,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7979,
											"end": 7997,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7972,
											"end": 8002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8038,
											"end": 8064,
											"name": "PUSH",
											"source": 11,
											"value": "584170703A20696E73756666696369656E742066756E64730000000000000000"
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8011,
											"end": 8065,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8082,
											"end": 8100,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8082,
											"end": 8100,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 7758,
											"end": 8106,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C21DDA4F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2445,
											"name": "PUSH",
											"source": 4,
											"value": "C21DDA4F"
										},
										{
											"begin": 2435,
											"end": 2445,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2457,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2457,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2471,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2471,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2493,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2435,
											"end": 2510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2530,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2530,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2537,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2156,
											"end": 2537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4147,
											"end": 4579,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4147,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4259,
											"end": 4278,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4278,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4255,
											"end": 4344,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4301,
											"end": 4333,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4301,
											"end": 4333,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4301,
											"end": 4333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4301,
											"end": 4333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4330,
											"end": 4331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4301,
											"end": 4333,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4301,
											"end": 4333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4301,
											"end": 4333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2333,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2117,
											"end": 2339,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4344,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4255,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4353,
											"end": 4443,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2333,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2117,
											"end": 2339,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4353,
											"end": 4443,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4353,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4487,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4487,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4573,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4573,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4497,
											"end": 4573,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4545,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "PUSH",
											"source": 7,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 4556,
											"end": 4561,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1404,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1404,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1367,
											"end": 1369,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1233,
											"end": 1410,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 4147,
											"end": 4579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4147,
											"end": 4579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4147,
											"end": 4579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4147,
											"end": 4579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4147,
											"end": 4579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 303,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 14,
											"end": 303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 56,
											"end": 59,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 99,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 88,
											"end": 100,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 121,
											"end": 127,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 116,
											"end": 119,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 109,
											"end": 128,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 177,
											"end": 183,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 170,
											"end": 174,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 163,
											"end": 168,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 159,
											"end": 175,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 150,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 143,
											"end": 157,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 137,
											"end": 184,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 229,
											"end": 230,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 226,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 213,
											"end": 219,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 208,
											"end": 211,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 204,
											"end": 220,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 200,
											"end": 227,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 193,
											"end": 231,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 287,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 281,
											"end": 288,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 276,
											"end": 278,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 264,
											"end": 279,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 260,
											"end": 289,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 255,
											"end": 258,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 251,
											"end": 290,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 247,
											"end": 297,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 240,
											"end": 297,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 240,
											"end": 297,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 240,
											"end": 297,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14,
											"end": 303,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14,
											"end": 303,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14,
											"end": 303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14,
											"end": 303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14,
											"end": 303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 528,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 308,
											"end": 528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 446,
											"end": 455,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 439,
											"end": 460,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 420,
											"end": 424,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 516,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 503,
											"end": 521,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 495,
											"end": 501,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 477,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 477,
											"end": 522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 477,
											"end": 522,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 477,
											"end": 522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 469,
											"end": 522,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 308,
											"end": 528,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 308,
											"end": 528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 533,
											"end": 664,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 533,
											"end": 664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 608,
											"end": 639,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 608,
											"end": 639,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 598,
											"end": 640,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 598,
											"end": 640,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 588,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 588,
											"end": 658,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 654,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 652,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 656,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 588,
											"end": 658,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 588,
											"end": 658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 533,
											"end": 664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 533,
											"end": 664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 669,
											"end": 1036,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 669,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 737,
											"end": 743,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 766,
											"end": 818,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 766,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 766,
											"end": 818,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 814,
											"end": 815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 812,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 804,
											"end": 816,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 766,
											"end": 818,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 766,
											"end": 818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 872,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 897,
											"end": 902,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 872,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 872,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 872,
											"end": 903,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 872,
											"end": 903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 922,
											"end": 927,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1000,
											"end": 1002,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 669,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1923,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1415,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1508,
											"end": 1514,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1549,
											"end": 1558,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1547,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1536,
											"end": 1559,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1532,
											"end": 1564,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1529,
											"end": 1581,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1529,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 1529,
											"end": 1581,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1577,
											"end": 1578,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1529,
											"end": 1581,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 1529,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1616,
											"end": 1625,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1626,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1635,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1635,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 1635,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1635,
											"end": 1666,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 1635,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1685,
											"end": 1690,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1742,
											"end": 1744,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1714,
											"end": 1746,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 1714,
											"end": 1746,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 1755,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1788,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 1755,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1923,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1923,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 1807,
											"end": 1814,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1807,
											"end": 1814,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1887,
											"end": 1889,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1872,
											"end": 1890,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1890,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1890,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1859,
											"end": 1891,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1859,
											"end": 1891,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2344,
											"end": 2591,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2344,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2458,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2435,
											"end": 2442,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2431,
											"end": 2454,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2459,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 2473,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2470,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2462,
											"end": 2474,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2511,
											"end": 2520,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 2530,
											"end": 2561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2596,
											"end": 2725,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 2596,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2674,
											"end": 2679,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2700,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2663,
											"end": 2668,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2660,
											"end": 2701,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 2650,
											"end": 2719,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2715,
											"end": 2716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2717,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2730,
											"end": 3378,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 2730,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2815,
											"end": 2821,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2831,
											"end": 2837,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2892,
											"end": 2895,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2871,
											"end": 2878,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2867,
											"end": 2890,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2863,
											"end": 2896,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2913,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 2860,
											"end": 2913,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2909,
											"end": 2910,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2899,
											"end": 2911,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2913,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 2860,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 2957,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2935,
											"end": 2958,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 2991,
											"end": 2996,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 2967,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3021,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3073,
											"end": 3075,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3076,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3076,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3077,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3045,
											"end": 3077,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 3086,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3119,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3086,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3199,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3200,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3182,
											"end": 3200,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 3210,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3243,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3210,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2730,
											"end": 3378,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2730,
											"end": 3378,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 2730,
											"end": 3378,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2730,
											"end": 3378,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3262,
											"end": 3269,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3262,
											"end": 3269,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3342,
											"end": 3344,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3327,
											"end": 3345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3314,
											"end": 3346,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3314,
											"end": 3346,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2730,
											"end": 3378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3383,
											"end": 3771,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 3383,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3457,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3512,
											"end": 3514,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3491,
											"end": 3498,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3487,
											"end": 3510,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3483,
											"end": 3515,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3480,
											"end": 3532,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3480,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 3480,
											"end": 3532,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3526,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3530,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3480,
											"end": 3532,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 3480,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3567,
											"end": 3576,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3577,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 3586,
											"end": 3617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3617,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 3586,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3641,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3678,
											"end": 3696,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3678,
											"end": 3696,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3665,
											"end": 3697,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3706,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 3665,
											"end": 3697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3706,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 3706,
											"end": 3739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3706,
											"end": 3739,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 3706,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3758,
											"end": 3765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3383,
											"end": 3771,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3383,
											"end": 3771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3383,
											"end": 3771,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3383,
											"end": 3771,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3383,
											"end": 3771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3383,
											"end": 3771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 4156,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 3776,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3898,
											"end": 3910,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3898,
											"end": 3910,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3898,
											"end": 3910,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3919,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 3919,
											"end": 3980,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3973,
											"end": 3977,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 3965,
											"end": 3971,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 3978,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3951,
											"end": 3978,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3951,
											"end": 3978,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3919,
											"end": 3980,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 3919,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4028,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4015,
											"end": 4029,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3995,
											"end": 4013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3992,
											"end": 4030,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3989,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 3989,
											"end": 4150,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4072,
											"end": 4082,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 4067,
											"end": 4070,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4063,
											"end": 4083,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4060,
											"end": 4061,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4084,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4107,
											"end": 4111,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4097,
											"end": 4112,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4135,
											"end": 4139,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4132,
											"end": 4133,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4140,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3989,
											"end": 4150,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 3989,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3989,
											"end": 4150,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 4156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 4156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 4156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 4156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4937,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 4161,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4258,
											"end": 4264,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4318,
											"end": 4320,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4306,
											"end": 4315,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4297,
											"end": 4304,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4293,
											"end": 4316,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 4321,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4333,
											"end": 4335,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4352,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 4330,
											"end": 4352,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4346,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4338,
											"end": 4350,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4352,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 4330,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4397,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4391,
											"end": 4400,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4400,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4400,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4442,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4442,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4457,
											"end": 4491,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4457,
											"end": 4491,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4515,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4515,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4515,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4454,
											"end": 4516,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4636,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 4451,
											"end": 4636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4558,
											"end": 4568,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 4553,
											"end": 4556,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4549,
											"end": 4569,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4547,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4539,
											"end": 4570,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4593,
											"end": 4597,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4583,
											"end": 4598,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4621,
											"end": 4625,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4618,
											"end": 4619,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4626,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4636,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 4451,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 4654,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4645,
											"end": 4667,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4705,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4705,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4714,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 4689,
											"end": 4705,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4714,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 4714,
											"end": 4744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4714,
											"end": 4744,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 4714,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4819,
											"end": 4821,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4804,
											"end": 4822,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4804,
											"end": 4822,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4798,
											"end": 4823,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 4798,
											"end": 4823,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 4832,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4865,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 4832,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 4895,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4896,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4896,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4874,
											"end": 4906,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4891,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4937,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4161,
											"end": 4937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6649,
											"end": 6926,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 6649,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6716,
											"end": 6722,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6769,
											"end": 6771,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6757,
											"end": 6766,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6748,
											"end": 6755,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6744,
											"end": 6767,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6740,
											"end": 6772,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6737,
											"end": 6789,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6737,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 6737,
											"end": 6789,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6785,
											"end": 6786,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6783,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6775,
											"end": 6787,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6737,
											"end": 6789,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 6737,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6826,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6870,
											"end": 6875,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6863,
											"end": 6876,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6877,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6849,
											"end": 6854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6846,
											"end": 6878,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6836,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 6836,
											"end": 6896,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6893,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 6890,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6882,
											"end": 6894,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 7153,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 6931,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6996,
											"end": 7005,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6996,
											"end": 7005,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6996,
											"end": 7005,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7017,
											"end": 7027,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7017,
											"end": 7027,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7017,
											"end": 7027,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7014,
											"end": 7147,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7014,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 7014,
											"end": 7147,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7069,
											"end": 7079,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 7064,
											"end": 7067,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 7060,
											"end": 7080,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 7057,
											"end": 7058,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7081,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7108,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 7101,
											"end": 7102,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7094,
											"end": 7109,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7132,
											"end": 7136,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7129,
											"end": 7130,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7137,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7158,
											"end": 7564,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 7158,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7361,
											"end": 7367,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7388,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7346,
											"end": 7355,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7339,
											"end": 7389,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7425,
											"end": 7427,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7420,
											"end": 7422,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7409,
											"end": 7418,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7405,
											"end": 7423,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7398,
											"end": 7428,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7320,
											"end": 7324,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7445,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7475,
											"end": 7484,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7471,
											"end": 7489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7463,
											"end": 7469,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7445,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 7445,
											"end": 7490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7445,
											"end": 7490,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 7445,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7437,
											"end": 7490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7437,
											"end": 7490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7526,
											"end": 7557,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7521,
											"end": 7523,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7510,
											"end": 7519,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7506,
											"end": 7524,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7499,
											"end": 7558,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7158,
											"end": 7564,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 7158,
											"end": 7564,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7158,
											"end": 7564,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7158,
											"end": 7564,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7158,
											"end": 7564,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7158,
											"end": 7564,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7158,
											"end": 7564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7569,
											"end": 7753,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 7569,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7639,
											"end": 7645,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7692,
											"end": 7694,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7680,
											"end": 7689,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7678,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7663,
											"end": 7695,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7660,
											"end": 7712,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7660,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 7660,
											"end": 7712,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7708,
											"end": 7709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7705,
											"end": 7706,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7698,
											"end": 7710,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7660,
											"end": 7712,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 7660,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7731,
											"end": 7747,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7731,
											"end": 7747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7569,
											"end": 7753,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7569,
											"end": 7753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8111,
											"end": 8695,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 8111,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8374,
											"end": 8392,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8362,
											"end": 8393,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8362,
											"end": 8393,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8344,
											"end": 8394,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8344,
											"end": 8394,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8442,
											"end": 8446,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8430,
											"end": 8447,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8430,
											"end": 8447,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8425,
											"end": 8427,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8410,
											"end": 8428,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8410,
											"end": 8428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8448,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8484,
											"end": 8516,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8484,
											"end": 8516,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 8481,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8464,
											"end": 8482,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8464,
											"end": 8482,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8457,
											"end": 8517,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8504,
											"end": 8507,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 8548,
											"end": 8550,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8533,
											"end": 8551,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8533,
											"end": 8551,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8526,
											"end": 8557,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8526,
											"end": 8557,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8526,
											"end": 8557,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8574,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 8574,
											"end": 8620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8600,
											"end": 8619,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8600,
											"end": 8619,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8592,
											"end": 8598,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8574,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 8574,
											"end": 8620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8574,
											"end": 8620,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 8574,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8566,
											"end": 8620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8566,
											"end": 8620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8661,
											"end": 8667,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8657,
											"end": 8688,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8651,
											"end": 8654,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 8640,
											"end": 8649,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8636,
											"end": 8655,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8629,
											"end": 8689,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8111,
											"end": 8695,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 8111,
											"end": 8695,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8111,
											"end": 8695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8111,
											"end": 8695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8111,
											"end": 8695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8111,
											"end": 8695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8111,
											"end": 8695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8111,
											"end": 8695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8111,
											"end": 8695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"xstake/lib/omni/contracts/core/src/interfaces/IOmniPortal.sol",
								"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol",
								"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol",
								"xstake/lib/omni/contracts/core/src/pkg/XApp.sol",
								"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol",
								"xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol",
								"xstake/src/wstf token launch/contracts/token/ERC20/IERC20.sol",
								"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol",
								"xstake/src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol",
								"xstake/src/wstf token launch/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"defaultConfLevel()": "74eeb847",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"omni()": "39acf9f1",
							"receiveTransfer(address,address,uint256)": "4a536a06",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transfer(uint64,address,address,uint256)": "bdb3c8e6",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialMinterAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"ismainChain\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"conf\",\"type\":\"uint8\"}],\"name\":\"DefaultConfLevelSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"omni\",\"type\":\"address\"}],\"name\":\"OmniPortalSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultConfLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"omni\",\"outputs\":[{\"internalType\":\"contract IOmniPortal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"receiveTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChain\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"destToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DefaultConfLevelSet(uint8)\":{\"params\":{\"conf\":\"Confirmation level\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DefaultConfLevelSet(uint8)\":{\"notice\":\"Emitted when the default confirmation level is set\"},\"OmniPortalSet(address)\":{\"notice\":\"Emitted when the OmniPortal contract address is set\"}},\"kind\":\"user\",\"methods\":{\"defaultConfLevel()\":{\"notice\":\"Default confirmation level for xcalls\"},\"omni()\":{\"notice\":\"The OmniPortal contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":\"MyOmniToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xstake/lib/omni/contracts/core/src/interfaces/IOmniPortal.sol\":{\"keccak256\":\"0x8010a586e7abcf478044249c104a6f01c1c6830b96f14273289e01303163342d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ac0f21a8ef960f9752f9dca194e53eb7073f66c9124ba86d827087b5e9ce6656\",\"dweb:/ipfs/QmT1UYic7cJg58iEN8pNF6CbhXyYiR16G4ihB9NsDwZpkG\"]},\"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol\":{\"keccak256\":\"0xfce1f35d6bbec9bb0729a7322657cec8f1f7a8a25ae6318531b08ad928f58c32\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://cb8e1467528079ac0ff70e86207f1b4d25bbb236e5830fab9991c1c76b6ca623\",\"dweb:/ipfs/QmawXHbFRrPppPAG45mHRnCWJuQMYhe534CoicW4pF43EZ\"]},\"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol\":{\"keccak256\":\"0x1a670aafb257d8d16c08b03b70a9ba2e4b9f4755198f52d14f5c8e6c5dc3b96a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7513bb80e3db2dbaccb687304988f3992f7097b16967f1844acb4038e833e511\",\"dweb:/ipfs/QmYBPaJ3PWnxxKywRVeZZ14YWH7bSMcKuUCPhcfjk8PENT\"]},\"xstake/lib/omni/contracts/core/src/pkg/XApp.sol\":{\"keccak256\":\"0x05f07a7701a5c34ecac52efcb76856b995fd655d97b4360118cb8ccb2ae49a8f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://fb3d62b18f80c88d04eb0489194be62be66d09390d75b1b4f18faa5df247959a\",\"dweb:/ipfs/QmZPmYoUw4BBfVBbfeBPcRHwcnHjSf9XJa7iu7CmfjUg4T\"]},\"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol\":{\"keccak256\":\"0xf2344afc8b2e59b84582a80db601c7550b8b96b2a0c55cc10dc734ff57d0e959\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://72ebf8503ca6283b1002be4f2d9309dafe5082514820dae3268115b5501c08f3\",\"dweb:/ipfs/QmTTbmECQD7p8mBjhgwPS2mpZkW8iQvKdaBFRaunw1BxKJ\"]},\"xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"xstake/src/wstf token launch/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":{\"keccak256\":\"0x68fc61e71067c6c1162ae4febeb1aea4aac92b1be7e012afcd3ad94eadcfbacb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18c8002a8a5d0e7f9aacbf319e729be3ea09a62b599aa22bbcdf2060d6b3c2c9\",\"dweb:/ipfs/QmUFhg9KPDZFbzMKr9AzJmGXD1X9gCkYPhz8equEPFh9M6\"]},\"xstake/src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol\":{\"keccak256\":\"0x86ef9c22391a95e2a88160dd046f995544d513741b8d2d3be3f59cd6fefc0cbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66e2b7b1310737f0f39129540caa55bb0b32e7e73b2e5aa03e0140c6781b0377\",\"dweb:/ipfs/QmVmv5bv9yKjDQEk3w9nDMqvs1pBnFbxYTA59hpWhh2YLZ\"]},\"xstake/src/wstf token launch/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "omni",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IOmniPortal)175"
							},
							{
								"astId": 352,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "defaultConfLevel",
								"offset": 20,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 356,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "xmsg",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(MsgContext)245_storage"
							},
							{
								"astId": 824,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 830,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 832,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 834,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 836,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1367,
								"contract": "xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "omniPortal",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IOmniPortal)175": {
								"encoding": "inplace",
								"label": "contract IOmniPortal",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(MsgContext)245_storage": {
								"encoding": "inplace",
								"label": "struct XTypes.MsgContext",
								"members": [
									{
										"astId": 242,
										"contract": "xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
										"label": "sourceChainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 244,
										"contract": "xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
										"label": "sender",
										"offset": 8,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"DefaultConfLevelSet(uint8)": {
								"notice": "Emitted when the default confirmation level is set"
							},
							"OmniPortalSet(address)": {
								"notice": "Emitted when the OmniPortal contract address is set"
							}
						},
						"kind": "user",
						"methods": {
							"defaultConfLevel()": {
								"notice": "Default confirmation level for xcalls"
							},
							"omni()": {
								"notice": "The OmniPortal contract"
							}
						},
						"version": 1
					}
				}
			},
			"xstake/src/wstf token launch/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"xstake/src/wstf token launch/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"xstake/src/wstf token launch/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"xstake/lib/omni/contracts/core/src/interfaces/IOmniPortal.sol": {
				"ast": {
					"absolutePath": "xstake/lib/omni/contracts/core/src/interfaces/IOmniPortal.sol",
					"exportedSymbols": {
						"IOmniPortal": [
							175
						],
						"XTypes": [
							302
						]
					},
					"id": 176,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:0"
						},
						{
							"absolutePath": "xstake/lib/omni/contracts/core/src/libraries/XTypes.sol",
							"file": "../libraries/XTypes.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 303,
							"src": "67:49:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "XTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 302,
										"src": "76:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOmniPortal",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "118:188:0",
								"text": " @title IOmniPortal\n @notice The OmniPortal is the on-chain interface to Omni's cross-chain\n         messaging protocol. It is used to initiate and execute cross-chain calls."
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175
							],
							"name": "IOmniPortal",
							"nameLocation": "317:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "335:534:0",
										"text": " @notice Emitted when an xcall is made to a contract on another chain\n @param destChainId   Destination chain ID\n @param offset        Offset this XMsg in the source -> dest XStream\n @param sender        msg.sender of the source xcall\n @param to            Address of the contract to call on the destination chain\n @param data          Encoded function calldata\n @param gasLimit      Gas limit for execution on destination chain\n @param fees          Fees paid for the xcall"
									},
									"eventSelector": "b7c8eb9d7a7fbcdab809ab7b8a7c41701eb3115e3fe99d30ff490d8552f72bfa",
									"id": 23,
									"name": "XMsg",
									"nameLocation": "880:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "909:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "894:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 6,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "894:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "shardId",
												"nameLocation": "945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "930:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 8,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "930:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "977:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "962:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 10,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "962:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1001:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "993:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1025:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1017:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1043:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1037:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 16,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1037:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": false,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "1064:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1057:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 18,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1057:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": false,
												"mutability": "mutable",
												"name": "fees",
												"nameLocation": "1090:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1082:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:216:0"
									},
									"src": "874:227:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "1107:654:0",
										"text": " @notice Emitted when an XMsg is executed on its destination chain\n @param sourceChainId Source chain ID\n @param shardId       Shard ID of the XStream (first byte is the confirmation level)\n @param offset        Offset the XMsg in the source -> dest XStream\n @param gasUsed       Gas used in execution of the XMsg\n @param success       Whether the execution succeeded\n @param relayer       Address of the relayer who submitted the XMsg\n @param error         Result of XMsg execution, if success == false. Limited to\n                      xreceiptMaxErrorBytes(). Empty if success == true."
									},
									"eventSelector": "8277cab1f0fa69b34674f64a7d43f242b0bacece6f5b7e8652f1e0d88a9b873b",
									"id": 40,
									"name": "XReceipt",
									"nameLocation": "1772:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "sourceChainId",
												"nameLocation": "1805:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1790:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 25,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1790:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "shardId",
												"nameLocation": "1843:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1828:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 27,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1828:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "1875:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1860:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 29,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1860:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": false,
												"mutability": "mutable",
												"name": "gasUsed",
												"nameLocation": "1899:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1891:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"indexed": false,
												"mutability": "mutable",
												"name": "relayer",
												"nameLocation": "1924:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1916:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"indexed": false,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1946:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1941:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 35,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1941:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "1969:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1963:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 37,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1963:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:200:0"
									},
									"src": "1766:215:0"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1987:57:0",
										"text": " @notice Maximum allowed xmsg gas limit"
									},
									"functionSelector": "cf84c818",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xmsgMaxGasLimit",
									"nameLocation": "2058:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2073:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2099:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 43,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2099:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2098:8:0"
									},
									"scope": 175,
									"src": "2049:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2113:57:0",
										"text": " @notice Minimum allowed xmsg gas limit"
									},
									"functionSelector": "78fe5307",
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xmsgMinGasLimit",
									"nameLocation": "2184:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2199:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2225:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 49,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2225:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:8:0"
									},
									"scope": 175,
									"src": "2175:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2239:71:0",
										"text": " @notice Maximum number of bytes allowed in xmsg data"
									},
									"functionSelector": "b4d5afd1",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xmsgMaxDataSize",
									"nameLocation": "2324:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2339:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2365:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 55,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2365:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2364:8:0"
									},
									"scope": 175,
									"src": "2315:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2379:76:0",
										"text": " @notice Maxium number of bytes allowed in xreceipt result"
									},
									"functionSelector": "c26dfc05",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xreceiptMaxErrorSize",
									"nameLocation": "2469:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2515:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 61,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2515:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2514:8:0"
									},
									"scope": 175,
									"src": "2460:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2529:57:0",
										"text": " @notice Returns the fee oracle address"
									},
									"functionSelector": "500b19e7",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeOracle",
									"nameLocation": "2600:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2609:2:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2635:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2634:9:0"
									},
									"scope": 175,
									"src": "2591:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2650:93:0",
										"text": " @notice Returns the chain ID of the chain to which this portal is deployed"
									},
									"functionSelector": "9a8a0592",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "chainId",
									"nameLocation": "2757:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2790:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 73,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2790:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2789:8:0"
									},
									"scope": 175,
									"src": "2748:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "2804:77:0",
										"text": " @notice Returns the chain ID of Omni's EVM execution chain"
									},
									"functionSelector": "110ff5f1",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "omniChainId",
									"nameLocation": "2895:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2906:2:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "2932:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 79,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2932:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2931:8:0"
									},
									"scope": 175,
									"src": "2886:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2946:102:0",
										"text": " @notice Returns the offset of the last outbound XMsg sent to destChainId in shardId"
									},
									"functionSelector": "3aa87330",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "outXMsgOffset",
									"nameLocation": "3062:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "3083:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3076:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 84,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3076:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "shardId",
												"nameLocation": "3103:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 86,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3096:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:36:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3135:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 89,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3135:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:8:0"
									},
									"scope": 175,
									"src": "3053:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3149:106:0",
										"text": " @notice Returns the offset of the last inbound XMsg received from srcChainId in shardId"
									},
									"functionSelector": "d051c97d",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "inXMsgOffset",
									"nameLocation": "3269:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "srcChainId",
												"nameLocation": "3289:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3282:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 94,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3282:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "shardId",
												"nameLocation": "3308:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3301:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 96,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3301:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3281:35:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3340:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 99,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:8:0"
									},
									"scope": 175,
									"src": "3260:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "3354:108:0",
										"text": " @notice Returns the offset of the last inbound XBlock received from srcChainId in shardId"
									},
									"functionSelector": "3fd3b15e",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "inXBlockOffset",
									"nameLocation": "3476:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "srcChainId",
												"nameLocation": "3498:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3491:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 104,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "shardId",
												"nameLocation": "3517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3510:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 106,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:35:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3549:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3549:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:8:0"
									},
									"scope": 175,
									"src": "3467:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "3563:392:0",
										"text": " @notice Returns the current XMsg being executed via this portal.\n          - xmsg().sourceChainId  Chain ID of the source xcall\n          - xmsg().sender         msg.sender of the source xcall\n         If no XMsg is being executed, all fields will be zero.\n          - xmsg().sourceChainId  == 0\n          - xmsg().sender         == address(0)"
									},
									"functionSelector": "2f32700e",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xmsg",
									"nameLocation": "3969:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3973:2:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "3999:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MsgContext_$245_memory_ptr",
													"typeString": "struct XTypes.MsgContext"
												},
												"typeName": {
													"id": 116,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 115,
														"name": "XTypes.MsgContext",
														"nameLocations": [
															"3999:6:0",
															"4006:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 245,
														"src": "3999:17:0"
													},
													"referencedDeclaration": 245,
													"src": "3999:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MsgContext_$245_storage_ptr",
														"typeString": "struct XTypes.MsgContext"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:26:0"
									},
									"scope": 175,
									"src": "3960:65:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "4031:92:0",
										"text": " @notice Returns true the current transaction is an xcall, false otherwise"
									},
									"functionSelector": "55e2448e",
									"id": 125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isXCall",
									"nameLocation": "4137:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4144:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "4170:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4169:6:0"
									},
									"scope": 175,
									"src": "4128:48:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "4182:75:0",
										"text": " @notice Returns the shard ID is supported by this portal"
									},
									"functionSelector": "aaf1bc97",
									"id": 133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSupportedShard",
									"nameLocation": "4271:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "shardId",
												"nameLocation": "4295:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4288:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 127,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4288:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4287:16:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4327:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4327:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4326:6:0"
									},
									"scope": 175,
									"src": "4262:71:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "4339:87:0",
										"text": " @notice Returns the destination chain ID is supported by this portal"
									},
									"functionSelector": "24278bbe",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSupportedDest",
									"nameLocation": "4440:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "4463:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4456:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 135,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4456:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4455:20:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4499:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4499:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4498:6:0"
									},
									"scope": 175,
									"src": "4431:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4511:306:0",
										"text": " @notice Calculate the fee for calling a contract on another chain\n         Fees denominated in wei.\n @param destChainId   Destination chain ID\n @param data          Encoded function calldata\n @param gasLimit      Execution gas limit, enforced on destination chain"
									},
									"functionSelector": "8dd9523c",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeFor",
									"nameLocation": "4831:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "4845:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4838:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 143,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4838:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4873:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4858:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4858:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "4886:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4879:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 147,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4879:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4837:58:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4919:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4918:9:0"
									},
									"scope": 175,
									"src": "4822:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "4934:371:0",
										"text": " @notice Call a contract on another chain.\n @param destChainId   Destination chain ID\n @param conf          Confirmation level;\n @param to            Address of contract to call on destination chain\n @param data          ABI Encoded function calldata\n @param gasLimit      Execution gas limit, enforced on destination chain"
									},
									"functionSelector": "c21dda4f",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xcall",
									"nameLocation": "5319:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "5332:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5325:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 155,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5325:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "conf",
												"nameLocation": "5351:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5345:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 157,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5345:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5365:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5357:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5357:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5384:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5369:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5369:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "5397:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5390:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 163,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5390:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:82:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5423:0:0"
									},
									"scope": 175,
									"src": "5310:114:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "5430:271:0",
										"text": " @notice Submit a batch of XMsgs to be executed on this chain\n @param xsub  An xchain submisison, including an attestation root w/ validator signatures,\n              and a block header and message batch, proven against the attestation root."
									},
									"functionSelector": "66a1eaf3",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xsubmit",
									"nameLocation": "5715:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "xsub",
												"nameLocation": "5750:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5723:31:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Submission_$282_calldata_ptr",
													"typeString": "struct XTypes.Submission"
												},
												"typeName": {
													"id": 170,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 169,
														"name": "XTypes.Submission",
														"nameLocations": [
															"5723:6:0",
															"5730:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 282,
														"src": "5723:17:0"
													},
													"referencedDeclaration": 282,
													"src": "5723:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Submission_$282_storage_ptr",
														"typeString": "struct XTypes.Submission"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5722:33:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5764:0:0"
									},
									"scope": 175,
									"src": "5706:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 176,
							"src": "307:5460:0",
							"usedErrors": [],
							"usedEvents": [
								23,
								40
							]
						}
					],
					"src": "41:5727:0"
				},
				"id": 0
			},
			"xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol": {
				"ast": {
					"absolutePath": "xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol",
					"exportedSymbols": {
						"ConfLevel": [
							220
						]
					},
					"id": 221,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ConfLevel",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 178,
								"nodeType": "StructuredDocumentation",
								"src": "67:354:1",
								"text": " @title ConfLevel\n @notice XMsg confirmation levels. Matches ConfLevels in lib/xchain/types.go\n @dev We prefer explicit constants over Enums, because we want uint8 values to start at 1, not 0, as they do in\n      lib/xchain/types.go, such that 0 can represent \"unset\". Note only latest and finalized levels are supported\n      on-chain."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220
							],
							"name": "ConfLevel",
							"nameLocation": "430:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "446:87:1",
										"text": " @notice XMsg confirmation level \"latest\", last byte of xmsg.shardId."
									},
									"id": 182,
									"mutability": "constant",
									"name": "Latest",
									"nameLocation": "562:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "538:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 180,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "538:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 181,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "571:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "579:90:1",
										"text": " @notice XMsg confirmation level \"finalized\", last byte of xmsg.shardId."
									},
									"id": 186,
									"mutability": "constant",
									"name": "Finalized",
									"nameLocation": "698:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "674:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 184,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "674:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 185,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "710:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "850:61:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 194,
															"name": "level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "867:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 195,
															"name": "Latest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "876:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "867:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 197,
															"name": "level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "886:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 198,
															"name": "Finalized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "895:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "886:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "867:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 193,
												"id": 201,
												"nodeType": "Return",
												"src": "860:44:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "718:68:1",
										"text": " @notice Returns true if the given level is valid."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValid",
									"nameLocation": "800:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "814:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "808:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 188,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "808:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:13:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 191,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:1"
									},
									"scope": 220,
									"src": "791:120:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "1070:46:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 213,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "1094:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1087:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 211,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "1087:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1087:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"hexValue": "307830313030",
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1103:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x0100"
													},
													"src": "1087:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 210,
												"id": 217,
												"nodeType": "Return",
												"src": "1080:29:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "917:78:1",
										"text": " @notice Returns broadcast shard version of the given level."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBroadcastShard",
									"nameLocation": "1009:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "1032:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1026:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 205,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1026:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:13:1"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1062:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 208,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1062:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:8:1"
									},
									"scope": 220,
									"src": "1000:116:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "422:696:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "41:1078:1"
				},
				"id": 1
			},
			"xstake/lib/omni/contracts/core/src/libraries/XTypes.sol": {
				"ast": {
					"absolutePath": "xstake/lib/omni/contracts/core/src/libraries/XTypes.sol",
					"exportedSymbols": {
						"XTypes": [
							302
						]
					},
					"id": 303,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "XTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 223,
								"nodeType": "StructuredDocumentation",
								"src": "67:166:2",
								"text": " @title XTypes\n @dev Defines xchain types, core to Omni's xchain messaging protocol. These\n      types mirror those defined in omni/lib/xchain/types.go."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "XTypes",
							"nameLocation": "242:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "XTypes.Msg",
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "255:852:2",
										"text": " @notice A cross chain message - the product of an xcall. This matches the XMsg type used\n        throughout Omni's cross-chain messaging protocol. Msg is used to construct and verify\n        XSubmission merkle trees / proofs.\n @custom:field destChainId    Chain ID of the destination chain\n @custom:field shardId        Shard ID of the XStream (first byte is the confirmation level)\n @custom:field offset         Monotonically incremented offset of Msg in source -> dest Stream\n @custom:field sender         msg.sender of xcall on source chain\n @custom:field to             Target address to call on destination chain\n @custom:field data           Data to provide to call on destination chain\n @custom:field gasLimit       Gas limit to use for call execution on destination chain"
									},
									"id": 239,
									"members": [
										{
											"constant": false,
											"id": 226,
											"mutability": "mutable",
											"name": "destChainId",
											"nameLocation": "1140:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "1133:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 225,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1133:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 228,
											"mutability": "mutable",
											"name": "shardId",
											"nameLocation": "1168:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "1161:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 227,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1161:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 230,
											"mutability": "mutable",
											"name": "offset",
											"nameLocation": "1192:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "1185:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 229,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1185:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 232,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "1216:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "1208:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 231,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 234,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "1240:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "1232:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 233,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1232:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 236,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "1258:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "1252:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 235,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1252:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 238,
											"mutability": "mutable",
											"name": "gasLimit",
											"nameLocation": "1279:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "1272:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 237,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1272:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Msg",
									"nameLocation": "1119:3:2",
									"nodeType": "StructDefinition",
									"scope": 302,
									"src": "1112:182:2",
									"visibility": "public"
								},
								{
									"canonicalName": "XTypes.MsgContext",
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1300:224:2",
										"text": " @notice Msg context exposed during its execution to consuming xapps.\n @custom:field sourceChainId  Chain ID of the source chain\n @custom:field sender         msg.sender of xcall on source chain"
									},
									"id": 245,
									"members": [
										{
											"constant": false,
											"id": 242,
											"mutability": "mutable",
											"name": "sourceChainId",
											"nameLocation": "1564:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 245,
											"src": "1557:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 241,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1557:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 244,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "1595:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 245,
											"src": "1587:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 243,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MsgContext",
									"nameLocation": "1536:10:2",
									"nodeType": "StructDefinition",
									"scope": 302,
									"src": "1529:79:2",
									"visibility": "public"
								},
								{
									"canonicalName": "XTypes.BlockHeader",
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "1614:498:2",
										"text": " @notice BlockHeader of an XBlock.\n @custom:field sourceChainId      Chain ID of the source chain\n @custom:field sourceChainId      Chain ID of the Omni consensus chain\n @custom:field confLevel          Confirmation level of the cross chain block\n @custom:field offset             Offset of the cross chain block\n @custom:field sourceBlockHeight  Height of the source chain block\n @custom:field sourceBlockHash    Hash of the source chain block"
									},
									"id": 259,
									"members": [
										{
											"constant": false,
											"id": 248,
											"mutability": "mutable",
											"name": "sourceChainId",
											"nameLocation": "2153:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "2146:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 247,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2146:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 250,
											"mutability": "mutable",
											"name": "consensusChainId",
											"nameLocation": "2183:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "2176:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 249,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2176:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 252,
											"mutability": "mutable",
											"name": "confLevel",
											"nameLocation": "2215:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "2209:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 251,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2209:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 254,
											"mutability": "mutable",
											"name": "offset",
											"nameLocation": "2241:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "2234:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 253,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2234:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 256,
											"mutability": "mutable",
											"name": "sourceBlockHeight",
											"nameLocation": "2264:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "2257:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 255,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2257:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 258,
											"mutability": "mutable",
											"name": "sourceBlockHash",
											"nameLocation": "2299:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "2291:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 257,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2291:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BlockHeader",
									"nameLocation": "2124:11:2",
									"nodeType": "StructDefinition",
									"scope": 302,
									"src": "2117:204:2",
									"visibility": "public"
								},
								{
									"canonicalName": "XTypes.Submission",
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "2327:823:2",
										"text": " @notice The required parameters to submit xmsgs to an OmniPortal. Constructed by the relayer\n         by watching Omni's consensus chain, and source chain blocks.\n @custom:field attestationRoot  Merkle root of xchain block (XBlockRoot), attested to and signed by validators\n @custom:field validatorSetId   Unique identifier of the validator set that attested to this root\n @custom:field blockHeader      Block header, identifies xchain block\n @custom:field msgs             Messages to execute\n @custom:field proof            Multi proof of block header and messages, proven against attestationRoot\n @custom:field proofFlags       Multi proof flags\n @custom:field signatures       Array of validator signatures of the attestationRoot, and their public keys"
									},
									"id": 282,
									"members": [
										{
											"constant": false,
											"id": 262,
											"mutability": "mutable",
											"name": "attestationRoot",
											"nameLocation": "3191:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 282,
											"src": "3183:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 261,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "3183:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 264,
											"mutability": "mutable",
											"name": "validatorSetId",
											"nameLocation": "3223:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 282,
											"src": "3216:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 263,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "3216:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 267,
											"mutability": "mutable",
											"name": "blockHeader",
											"nameLocation": "3259:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 282,
											"src": "3247:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BlockHeader_$259_storage_ptr",
												"typeString": "struct XTypes.BlockHeader"
											},
											"typeName": {
												"id": 266,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 265,
													"name": "BlockHeader",
													"nameLocations": [
														"3247:11:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 259,
													"src": "3247:11:2"
												},
												"referencedDeclaration": 259,
												"src": "3247:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BlockHeader_$259_storage_ptr",
													"typeString": "struct XTypes.BlockHeader"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 271,
											"mutability": "mutable",
											"name": "msgs",
											"nameLocation": "3286:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 282,
											"src": "3280:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Msg_$239_storage_$dyn_storage_ptr",
												"typeString": "struct XTypes.Msg[]"
											},
											"typeName": {
												"baseType": {
													"id": 269,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 268,
														"name": "Msg",
														"nameLocations": [
															"3280:3:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 239,
														"src": "3280:3:2"
													},
													"referencedDeclaration": 239,
													"src": "3280:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Msg_$239_storage_ptr",
														"typeString": "struct XTypes.Msg"
													}
												},
												"id": 270,
												"nodeType": "ArrayTypeName",
												"src": "3280:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Msg_$239_storage_$dyn_storage_ptr",
													"typeString": "struct XTypes.Msg[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 274,
											"mutability": "mutable",
											"name": "proof",
											"nameLocation": "3310:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 282,
											"src": "3300:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 272,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3300:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 273,
												"nodeType": "ArrayTypeName",
												"src": "3300:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 277,
											"mutability": "mutable",
											"name": "proofFlags",
											"nameLocation": "3332:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 282,
											"src": "3325:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
												"typeString": "bool[]"
											},
											"typeName": {
												"baseType": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3325:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 276,
												"nodeType": "ArrayTypeName",
												"src": "3325:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
													"typeString": "bool[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 281,
											"mutability": "mutable",
											"name": "signatures",
											"nameLocation": "3363:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 282,
											"src": "3352:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_SigTuple_$288_storage_$dyn_storage_ptr",
												"typeString": "struct XTypes.SigTuple[]"
											},
											"typeName": {
												"baseType": {
													"id": 279,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 278,
														"name": "SigTuple",
														"nameLocations": [
															"3352:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 288,
														"src": "3352:8:2"
													},
													"referencedDeclaration": 288,
													"src": "3352:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SigTuple_$288_storage_ptr",
														"typeString": "struct XTypes.SigTuple"
													}
												},
												"id": 280,
												"nodeType": "ArrayTypeName",
												"src": "3352:10:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SigTuple_$288_storage_$dyn_storage_ptr",
													"typeString": "struct XTypes.SigTuple[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Submission",
									"nameLocation": "3162:10:2",
									"nodeType": "StructDefinition",
									"scope": 302,
									"src": "3155:225:2",
									"visibility": "public"
								},
								{
									"canonicalName": "XTypes.SigTuple",
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "3386:277:2",
										"text": " @notice A tuple of a validator's ethereum address and signature over some digest.\n @custom:field validatorAddr  Validator ethereum address\n @custom:field signature      Validator signature over some digest; Ethereum 65 bytes [R || S || V] format."
									},
									"id": 288,
									"members": [
										{
											"constant": false,
											"id": 285,
											"mutability": "mutable",
											"name": "validatorAddr",
											"nameLocation": "3702:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "3694:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 284,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3694:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 287,
											"mutability": "mutable",
											"name": "signature",
											"nameLocation": "3731:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "3725:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 286,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "3725:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SigTuple",
									"nameLocation": "3675:8:2",
									"nodeType": "StructDefinition",
									"scope": 302,
									"src": "3668:79:2",
									"visibility": "public"
								},
								{
									"canonicalName": "XTypes.Validator",
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "3753:205:2",
										"text": " @notice An Omni validator, specified by their etheruem address and voting power.\n @custom:field addr   Validator ethereum address\n @custom:field power  Validator voting power"
									},
									"id": 294,
									"members": [
										{
											"constant": false,
											"id": 291,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "3998:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 294,
											"src": "3990:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 290,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3990:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 293,
											"mutability": "mutable",
											"name": "power",
											"nameLocation": "4019:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 294,
											"src": "4012:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 292,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "4012:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Validator",
									"nameLocation": "3970:9:2",
									"nodeType": "StructDefinition",
									"scope": 302,
									"src": "3963:68:2",
									"visibility": "public"
								},
								{
									"canonicalName": "XTypes.Chain",
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "4037:190:2",
										"text": " @notice A chain in the \"omni network\" specified by its chain ID and supported shards.\n @custom:field chainId  Chain ID\n @custom:field shards   Supported shards"
									},
									"id": 301,
									"members": [
										{
											"constant": false,
											"id": 297,
											"mutability": "mutable",
											"name": "chainId",
											"nameLocation": "4262:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 301,
											"src": "4255:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 296,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "4255:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 300,
											"mutability": "mutable",
											"name": "shards",
											"nameLocation": "4288:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 301,
											"src": "4279:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
												"typeString": "uint64[]"
											},
											"typeName": {
												"baseType": {
													"id": 298,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4279:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 299,
												"nodeType": "ArrayTypeName",
												"src": "4279:8:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
													"typeString": "uint64[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Chain",
									"nameLocation": "4239:5:2",
									"nodeType": "StructDefinition",
									"scope": 302,
									"src": "4232:69:2",
									"visibility": "public"
								}
							],
							"scope": 303,
							"src": "234:4069:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "41:4263:2"
				},
				"id": 2
			},
			"xstake/lib/omni/contracts/core/src/pkg/XApp.sol": {
				"ast": {
					"absolutePath": "xstake/lib/omni/contracts/core/src/pkg/XApp.sol",
					"exportedSymbols": {
						"XApp": [
							326
						],
						"XAppBase": [
							581
						]
					},
					"id": 327,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:3"
						},
						{
							"absolutePath": "xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol",
							"file": "./XAppBase.sol",
							"id": 306,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 327,
							"sourceUnit": 582,
							"src": "67:42:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 305,
										"name": "XAppBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 581,
										"src": "76:8:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 308,
										"name": "XAppBase",
										"nameLocations": [
											"219:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 581,
										"src": "219:8:3"
									},
									"id": 309,
									"nodeType": "InheritanceSpecifier",
									"src": "219:8:3"
								}
							],
							"canonicalName": "XApp",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 307,
								"nodeType": "StructuredDocumentation",
								"src": "111:81:3",
								"text": " @title XApp\n @notice Base contract for Omni cross-chain applications"
							},
							"fullyImplemented": true,
							"id": 326,
							"linearizedBaseContracts": [
								326,
								581
							],
							"name": "XApp",
							"nameLocation": "211:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "286:87:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 317,
															"name": "omni_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "311:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 316,
														"name": "_setOmniPortal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "296:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "296:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "296:21:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 321,
															"name": "defaultConfLevel_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "348:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 320,
														"name": "_setDefaultConfLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "327:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "327:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "327:39:3"
											}
										]
									},
									"id": 325,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "omni_",
												"nameLocation": "254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "defaultConfLevel_",
												"nameLocation": "267:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "261:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 312,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "261:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:40:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:0:3"
									},
									"scope": 326,
									"src": "234:139:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 327,
							"src": "193:182:3",
							"usedErrors": [],
							"usedEvents": [
								340,
								345
							]
						}
					],
					"src": "41:335:3"
				},
				"id": 3
			},
			"xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol": {
				"ast": {
					"absolutePath": "xstake/lib/omni/contracts/core/src/pkg/XAppBase.sol",
					"exportedSymbols": {
						"ConfLevel": [
							220
						],
						"IOmniPortal": [
							175
						],
						"XAppBase": [
							581
						],
						"XTypes": [
							302
						]
					},
					"id": 582,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 328,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:4"
						},
						{
							"absolutePath": "xstake/lib/omni/contracts/core/src/interfaces/IOmniPortal.sol",
							"file": "../interfaces/IOmniPortal.sol",
							"id": 330,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 176,
							"src": "67:60:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IOmniPortal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "76:11:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "xstake/lib/omni/contracts/core/src/libraries/XTypes.sol",
							"file": "../libraries/XTypes.sol",
							"id": 332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 303,
							"src": "128:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 331,
										"name": "XTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 302,
										"src": "137:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol",
							"file": "../libraries/ConfLevel.sol",
							"id": 334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 221,
							"src": "178:55:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 333,
										"name": "ConfLevel",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 220,
										"src": "187:9:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "XAppBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 335,
								"nodeType": "StructuredDocumentation",
								"src": "235:68:4",
								"text": " @title XAppBase\n @notice Shared XApp storage and logic."
							},
							"fullyImplemented": true,
							"id": 581,
							"linearizedBaseContracts": [
								581
							],
							"name": "XAppBase",
							"nameLocation": "322:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "337:78:4",
										"text": " @notice Emitted when the OmniPortal contract address is set"
									},
									"eventSelector": "79162c8d053a07e70cdc1ccc536f0440b571f8508377d2bef51094fadab98f47",
									"id": 340,
									"name": "OmniPortalSet",
									"nameLocation": "426:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"indexed": false,
												"mutability": "mutable",
												"name": "omni",
												"nameLocation": "448:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "440:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:14:4"
									},
									"src": "420:34:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "460:116:4",
										"text": " @notice Emitted when the default confirmation level is set\n @param conf  Confirmation level"
									},
									"eventSelector": "8de08a798b4e50b4f351c1eaa91a11530043802be3ffac2df87db0c45a2e8483",
									"id": 345,
									"name": "DefaultConfLevelSet",
									"nameLocation": "587:19:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"indexed": false,
												"mutability": "mutable",
												"name": "conf",
												"nameLocation": "613:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "607:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 342,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "607:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:12:4"
									},
									"src": "581:38:4"
								},
								{
									"constant": false,
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "625:50:4",
										"text": " @notice The OmniPortal contract"
									},
									"functionSelector": "39acf9f1",
									"id": 349,
									"mutability": "mutable",
									"name": "omni",
									"nameLocation": "699:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "680:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IOmniPortal_$175",
										"typeString": "contract IOmniPortal"
									},
									"typeName": {
										"id": 348,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 347,
											"name": "IOmniPortal",
											"nameLocations": [
												"680:11:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 175,
											"src": "680:11:4"
										},
										"referencedDeclaration": 175,
										"src": "680:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOmniPortal_$175",
											"typeString": "contract IOmniPortal"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "710:64:4",
										"text": " @notice Default confirmation level for xcalls"
									},
									"functionSelector": "74eeb847",
									"id": 352,
									"mutability": "mutable",
									"name": "defaultConfLevel",
									"nameLocation": "792:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "779:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 351,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "779:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "815:65:4",
										"text": " @notice Transient storage for the current xmsg"
									},
									"id": 356,
									"mutability": "mutable",
									"name": "xmsg",
									"nameLocation": "912:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "885:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_MsgContext_$245_storage",
										"typeString": "struct XTypes.MsgContext"
									},
									"typeName": {
										"id": 355,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 354,
											"name": "XTypes.MsgContext",
											"nameLocations": [
												"885:6:4",
												"892:10:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 245,
											"src": "885:17:4"
										},
										"referencedDeclaration": 245,
										"src": "885:17:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_MsgContext_$245_storage_ptr",
											"typeString": "struct XTypes.MsgContext"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "1041:67:4",
										"statements": [
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 359,
														"name": "xmsg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "1051:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MsgContext_$245_storage",
															"typeString": "struct XTypes.MsgContext storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 360,
																"name": "omni",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1058:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IOmniPortal_$175",
																	"typeString": "contract IOmniPortal"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1063:4:4",
															"memberName": "xmsg",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "1058:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_struct$_MsgContext_$245_memory_ptr_$",
																"typeString": "function () view external returns (struct XTypes.MsgContext memory)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1058:11:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MsgContext_$245_memory_ptr",
															"typeString": "struct XTypes.MsgContext memory"
														}
													},
													"src": "1051:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MsgContext_$245_storage",
														"typeString": "struct XTypes.MsgContext storage ref"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "1051:18:4"
											},
											{
												"id": 365,
												"nodeType": "PlaceholderStatement",
												"src": "1079:1:4"
											},
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1090:11:4",
													"subExpression": {
														"id": 366,
														"name": "xmsg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "1097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MsgContext_$245_storage",
															"typeString": "struct XTypes.MsgContext storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "1090:11:4"
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "923:96:4",
										"text": " @notice Read current xmsg into storage before execution, delete it afterwards"
									},
									"id": 370,
									"name": "xrecv",
									"nameLocation": "1033:5:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:2:4"
									},
									"src": "1024:84:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "1257:69:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 376,
																"name": "omni",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1274:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IOmniPortal_$175",
																	"typeString": "contract IOmniPortal"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1279:7:4",
															"memberName": "isXCall",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 125,
															"src": "1274:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
																"typeString": "function () view external returns (bool)"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1274:14:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 379,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1292:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1296:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1292:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 383,
																	"name": "omni",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "1314:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IOmniPortal_$175",
																		"typeString": "contract IOmniPortal"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IOmniPortal_$175",
																		"typeString": "contract IOmniPortal"
																	}
																],
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1306:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 381,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1306:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1306:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1292:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1274:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 375,
												"id": 387,
												"nodeType": "Return",
												"src": "1267:52:4"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "1114:90:4",
										"text": " @notice Return true if the current call is an xcall from the OmniPortal"
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isXCall",
									"nameLocation": "1218:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1225:2:4"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1251:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1251:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:6:4"
									},
									"scope": 581,
									"src": "1209:117:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "1553:64:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "destChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "1582:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 404,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "1595:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 405,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "1601:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 401,
															"name": "omni",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1570:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOmniPortal_$175",
																"typeString": "contract IOmniPortal"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1575:6:4",
														"memberName": "feeFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 153,
														"src": "1570:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint64_$_t_bytes_memory_ptr_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint64,bytes memory,uint64) view external returns (uint256)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1570:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 400,
												"id": 407,
												"nodeType": "Return",
												"src": "1563:47:4"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "1332:112:4",
										"text": " @notice Retruns the fee for calling a contract on another chain, with the specified gas limit"
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "feeFor",
									"nameLocation": "1458:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "1472:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1465:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 391,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1465:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1498:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1485:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1485:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "1511:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1504:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 395,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1504:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:56:4"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1544:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:9:4"
									},
									"scope": 581,
									"src": "1449:168:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "1766:42:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 415,
															"name": "omni",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1783:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOmniPortal_$175",
																"typeString": "contract IOmniPortal"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1788:11:4",
														"memberName": "omniChainId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 82,
														"src": "1783:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint64_$",
															"typeString": "function () view external returns (uint64)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1783:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 414,
												"id": 418,
												"nodeType": "Return",
												"src": "1776:25:4"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1623:84:4",
										"text": " @notice Returns the chain ID of the Omni EVM in this Omni network"
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "omniChainId",
									"nameLocation": "1721:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1732:2:4"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "1758:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 412,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1758:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1757:8:4"
									},
									"scope": 581,
									"src": "1712:96:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "2266:271:4",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "2284:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "2276:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 434,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2276:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"id": 438,
															"name": "destChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "2302:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 439,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "2315:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 440,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "2321:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 436,
															"name": "omni",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "2290:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOmniPortal_$175",
																"typeString": "contract IOmniPortal"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2295:6:4",
														"memberName": "feeFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 153,
														"src": "2290:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint64_$_t_bytes_memory_ptr_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint64,bytes memory,uint64) view external returns (uint256)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2276:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 446,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2356:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_XAppBase_$581",
																					"typeString": "contract XAppBase"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_XAppBase_$581",
																					"typeString": "contract XAppBase"
																				}
																			],
																			"id": 445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2348:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 444,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2348:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2348:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2362:7:4",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "2348:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 449,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "2373:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2348:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 451,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2380:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2384:5:4",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2380:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 453,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "2393:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2380:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2348:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "584170703a20696e73756666696369656e742066756e6473",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2398:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6",
																"typeString": "literal_string \"XApp: insufficient funds\""
															},
															"value": "XApp: insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6",
																"typeString": "literal_string \"XApp: insufficient funds\""
															}
														],
														"id": 443,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2340:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2340:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "2340:85:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "destChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "2460:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 465,
															"name": "defaultConfLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "2473:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 466,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "2491:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "2495:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 468,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "2501:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"expression": {
																"id": 459,
																"name": "omni",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "2435:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IOmniPortal_$175",
																	"typeString": "contract IOmniPortal"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2440:5:4",
															"memberName": "xcall",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 167,
															"src": "2435:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint64_$_t_uint8_$_t_address_$_t_bytes_memory_ptr_$_t_uint64_$returns$__$",
																"typeString": "function (uint64,uint8,address,bytes memory,uint64) payable external"
															}
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 462,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "2454:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2435:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint64_$_t_uint8_$_t_address_$_t_bytes_memory_ptr_$_t_uint64_$returns$__$value",
															"typeString": "function (uint64,uint8,address,bytes memory,uint64) payable external"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2435:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "2435:75:4"
											},
											{
												"expression": {
													"id": 471,
													"name": "fee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "2527:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 472,
												"nodeType": "Return",
												"src": "2520:10:4"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "1814:337:4",
										"text": " @notice Call a contract on another. (Default ConfLevel)\n @param destChainId   Destination chain ID\n @param to            Address of contract to call on destination chain\n @param data          ABI Encoded function calldata\n @param gasLimit      Execution gas limit, enforced on destination chain"
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "xcall",
									"nameLocation": "2165:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "2178:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2171:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 422,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2171:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2199:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2191:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2216:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2203:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 426,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2203:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "2229:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2222:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 428,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2222:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:68:4"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2257:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2257:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:9:4"
									},
									"scope": 581,
									"src": "2156:381:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "3081:259:4",
										"statements": [
											{
												"assignments": [
													491
												],
												"declarations": [
													{
														"constant": false,
														"id": 491,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3099:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 529,
														"src": "3091:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3091:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 498,
												"initialValue": {
													"arguments": [
														{
															"id": 494,
															"name": "destChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3117:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 495,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "3130:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 496,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3136:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 492,
															"name": "omni",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "3105:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOmniPortal_$175",
																"typeString": "contract IOmniPortal"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3110:6:4",
														"memberName": "feeFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 153,
														"src": "3105:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint64_$_t_bytes_memory_ptr_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint64,bytes memory,uint64) view external returns (uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3105:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3091:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 502,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3171:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_XAppBase_$581",
																					"typeString": "contract XAppBase"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_XAppBase_$581",
																					"typeString": "contract XAppBase"
																				}
																			],
																			"id": 501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3163:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 500,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3163:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3163:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3177:7:4",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "3163:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 505,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3188:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3163:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 507,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3195:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3199:5:4",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "3195:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 509,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3208:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3195:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3163:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "584170703a20696e73756666696369656e742066756e6473",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3213:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6",
																"typeString": "literal_string \"XApp: insufficient funds\""
															},
															"value": "XApp: insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6",
																"typeString": "literal_string \"XApp: insufficient funds\""
															}
														],
														"id": 499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3155:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3155:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "3155:85:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 520,
															"name": "destChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3275:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 521,
															"name": "conf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3288:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 522,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "3294:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "3298:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 524,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3304:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"expression": {
																"id": 515,
																"name": "omni",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "3250:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IOmniPortal_$175",
																	"typeString": "contract IOmniPortal"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3255:5:4",
															"memberName": "xcall",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 167,
															"src": "3250:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint64_$_t_uint8_$_t_address_$_t_bytes_memory_ptr_$_t_uint64_$returns$__$",
																"typeString": "function (uint64,uint8,address,bytes memory,uint64) payable external"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 518,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "3269:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3250:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint64_$_t_uint8_$_t_address_$_t_bytes_memory_ptr_$_t_uint64_$returns$__$value",
															"typeString": "function (uint64,uint8,address,bytes memory,uint64) payable external"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3250:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "3250:63:4"
											},
											{
												"expression": {
													"id": 527,
													"name": "fee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 491,
													"src": "3330:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 489,
												"id": 528,
												"nodeType": "Return",
												"src": "3323:10:4"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "2543:391:4",
										"text": " @notice Call a contract on another chain. (Explicit ConfLevel)\n @param destChainId   Destination chain ID\n @param conf          Confirmation level\n @param to            Address of contract to call on destination chain\n @param data          ABI Encoded function calldata\n @param gasLimit      Execution gas limit, enforced on destination chain"
									},
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "xcall",
									"nameLocation": "2948:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "2961:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2954:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 476,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2954:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "conf",
												"nameLocation": "2980:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2974:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2974:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2994:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2986:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2986:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3011:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2998:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 482,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2998:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "3024:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "3017:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 484,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3017:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2953:80:4"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "3068:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3068:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3067:9:4"
									},
									"scope": 581,
									"src": "2939:401:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "3513:150:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 539,
																	"name": "conf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "3549:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 537,
																	"name": "ConfLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "3531:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ConfLevel_$220_$",
																		"typeString": "type(library ConfLevel)"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3541:7:4",
																"memberName": "isValid",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 203,
																"src": "3531:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$_t_bool_$",
																	"typeString": "function (uint8) pure returns (bool)"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3531:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "584170703a20696e76616c696420636f6e66206c6576656c",
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3556:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5",
																"typeString": "literal_string \"XApp: invalid conf level\""
															},
															"value": "XApp: invalid conf level"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5",
																"typeString": "literal_string \"XApp: invalid conf level\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3523:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3523:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "3523:60:4"
											},
											{
												"expression": {
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 544,
														"name": "defaultConfLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "3593:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 545,
														"name": "conf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "3612:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3593:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "3593:23:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 549,
															"name": "conf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "3651:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 548,
														"name": "DefaultConfLevelSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "3631:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3631:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "EmitStatement",
												"src": "3626:30:4"
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "3346:111:4",
										"text": " @notice Set the default confirmation level for xcalls\n @param conf  Confirmation level"
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setDefaultConfLevel",
									"nameLocation": "3471:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "conf",
												"nameLocation": "3498:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3492:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 532,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3492:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:12:4"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3513:0:4"
									},
									"scope": 581,
									"src": "3462:201:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "3839:137:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "_omni",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "3857:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3874:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3866:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 561,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3866:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3866:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3857:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "584170703a206e6f207a65726f206f6d6e69",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3878:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52",
																"typeString": "literal_string \"XApp: no zero omni\""
															},
															"value": "XApp: no zero omni"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52",
																"typeString": "literal_string \"XApp: no zero omni\""
															}
														],
														"id": 559,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3849:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3849:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3849:50:4"
											},
											{
												"expression": {
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 569,
														"name": "omni",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "3909:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOmniPortal_$175",
															"typeString": "contract IOmniPortal"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 571,
																"name": "_omni",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "3928:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 570,
															"name": "IOmniPortal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3916:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IOmniPortal_$175_$",
																"typeString": "type(contract IOmniPortal)"
															}
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3916:18:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOmniPortal_$175",
															"typeString": "contract IOmniPortal"
														}
													},
													"src": "3909:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOmniPortal_$175",
														"typeString": "contract IOmniPortal"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "3909:25:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 576,
															"name": "_omni",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "3963:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 575,
														"name": "OmniPortalSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "3949:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3949:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "EmitStatement",
												"src": "3944:25:4"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "3669:117:4",
										"text": " @notice Set the OmniPortal contract address\n @param _omni    The OmniPortal contract address"
									},
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOmniPortal",
									"nameLocation": "3800:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "_omni",
												"nameLocation": "3823:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3815:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3814:15:4"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3839:0:4"
									},
									"scope": 581,
									"src": "3791:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 582,
							"src": "304:3674:4",
							"usedErrors": [],
							"usedEvents": [
								340,
								345
							]
						}
					],
					"src": "41:3938:4"
				},
				"id": 4
			},
			"xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							718
						],
						"IERC20Errors": [
							623
						],
						"IERC721Errors": [
							671
						]
					},
					"id": 719,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 584,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:5",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 623,
							"linearizedBaseContracts": [
								623
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:5",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 593,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "668:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "685:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:5"
									},
									"src": "621:80:5"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 598,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "889:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:5"
									},
									"src": "864:41:5"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 603,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1102:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:5"
									},
									"src": "1075:45:5"
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:5",
										"text": " @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 612,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1509:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1526:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1545:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:5"
									},
									"src": "1476:85:5"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 617,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "1773:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:5"
									},
									"src": "1746:45:5"
								},
								{
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:5",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 622,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "2023:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:5"
									},
									"src": "1997:43:5"
								}
							],
							"scope": 719,
							"src": "278:1764:5",
							"usedErrors": [
								593,
								598,
								603,
								612,
								617,
								622
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 624,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:5",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 671,
							"linearizedBaseContracts": [
								671
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:5",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 629,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2465:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:5"
									},
									"src": "2440:40:5"
								},
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:5",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 634,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "2652:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:5"
									},
									"src": "2623:46:5"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:5",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 643,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "2996:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "3012:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "3029:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:5"
									},
									"src": "2969:75:5"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 648,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3233:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:5"
									},
									"src": "3207:42:5"
								},
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 653,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "3447:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:5"
									},
									"src": "3419:46:5"
								},
								{
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:5",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 660,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "3756:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "3774:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:5"
									},
									"src": "3723:68:5"
								},
								{
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 665,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "4004:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:5"
									},
									"src": "3976:46:5"
								},
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:5",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 670,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "4258:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:5"
									},
									"src": "4230:46:5"
								}
							],
							"scope": 719,
							"src": "2186:2092:5",
							"usedErrors": [
								629,
								634,
								643,
								648,
								653,
								660,
								665,
								670
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 672,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:5",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 718,
							"linearizedBaseContracts": [
								718
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:5",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 683,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4854:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4870:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4887:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4903:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:5"
									},
									"src": "4821:99:5"
								},
								{
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 688,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5110:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:5"
									},
									"src": "5083:43:5"
								},
								{
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 693,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5325:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:5"
									},
									"src": "5296:47:5"
								},
								{
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:5",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 700,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "5645:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "5663:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:5"
									},
									"src": "5610:68:5"
								},
								{
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 705,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "5892:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:5"
									},
									"src": "5863:47:5"
								},
								{
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:5",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 710,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6147:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:5"
									},
									"src": "6118:47:5"
								},
								{
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:5",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 717,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "6488:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "6507:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:5"
									},
									"src": "6456:73:5"
								}
							],
							"scope": 719,
							"src": "4424:2107:5",
							"usedErrors": [
								683,
								688,
								693,
								700,
								705,
								710,
								717
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:5"
				},
				"id": 5
			},
			"xstake/src/wstf token launch/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "xstake/src/wstf token launch/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							796
						]
					},
					"id": 797,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 720,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 721,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 796,
							"linearizedBaseContracts": [
								796
							],
							"name": "IERC20",
							"nameLocation": "213:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 730,
									"name": "Transfer",
									"nameLocation": "395:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "404:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "426:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "446:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:6"
									},
									"src": "389:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 739,
									"name": "Approval",
									"nameLocation": "626:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "635:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "658:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "683:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:6"
									},
									"src": "620:78:6"
								},
								{
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:6"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "820:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:6"
									},
									"scope": 796,
									"src": "774:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "930:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:6"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "970:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:6"
									},
									"scope": 796,
									"src": "911:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1221:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1233:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:6"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1266:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:6"
									},
									"scope": 796,
									"src": "1203:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "1566:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "1581:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:6"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "1621:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:6"
									},
									"scope": 796,
									"src": "1547:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2325:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:6"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 780,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 796,
									"src": "2308:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2711:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2725:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2737:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:6"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2770:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:6"
									},
									"scope": 796,
									"src": "2689:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 797,
							"src": "203:2575:6",
							"usedErrors": [],
							"usedEvents": [
								730,
								739
							]
						}
					],
					"src": "106:2673:6"
				},
				"id": 6
			},
			"xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol": {
				"ast": {
					"absolutePath": "xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol",
					"exportedSymbols": {
						"ConfLevel": [
							220
						],
						"Context": [
							1481
						],
						"IERC20": [
							796
						],
						"IERC20Errors": [
							623
						],
						"IERC20Metadata": [
							1359
						],
						"OmniERC20": [
							1333
						],
						"XApp": [
							326
						]
					},
					"id": 1334,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 798,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "xstake/src/wstf token launch/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 800,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 797,
							"src": "58:36:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 799,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 796,
										"src": "66:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "xstake/src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 802,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 1360,
							"src": "95:63:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 801,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1359,
										"src": "103:14:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "xstake/src/wstf token launch/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 804,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 1482,
							"src": "159:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 803,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1481,
										"src": "167:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "xstake/src/wstf token launch/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 806,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 719,
							"src": "208:65:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 805,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 623,
										"src": "216:12:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "xstake/lib/omni/contracts/core/src/pkg/XApp.sol",
							"file": "../../../../../lib/omni/contracts/core/src/pkg/XApp.sol",
							"id": 808,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 327,
							"src": "274:77:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 807,
										"name": "XApp",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 326,
										"src": "282:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "xstake/lib/omni/contracts/core/src/libraries/ConfLevel.sol",
							"file": "../../../../../lib/omni/contracts/core/src/libraries/ConfLevel.sol",
							"id": 810,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 221,
							"src": "352:93:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 809,
										"name": "ConfLevel",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 220,
										"src": "360:9:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 811,
										"name": "Context",
										"nameLocations": [
											"479:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1481,
										"src": "479:7:7"
									},
									"id": 812,
									"nodeType": "InheritanceSpecifier",
									"src": "479:7:7"
								},
								{
									"baseName": {
										"id": 813,
										"name": "IERC20",
										"nameLocations": [
											"488:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 796,
										"src": "488:6:7"
									},
									"id": 814,
									"nodeType": "InheritanceSpecifier",
									"src": "488:6:7"
								},
								{
									"baseName": {
										"id": 815,
										"name": "IERC20Metadata",
										"nameLocations": [
											"496:14:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1359,
										"src": "496:14:7"
									},
									"id": 816,
									"nodeType": "InheritanceSpecifier",
									"src": "496:14:7"
								},
								{
									"baseName": {
										"id": 817,
										"name": "IERC20Errors",
										"nameLocations": [
											"512:12:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "512:12:7"
									},
									"id": 818,
									"nodeType": "InheritanceSpecifier",
									"src": "512:12:7"
								},
								{
									"baseName": {
										"id": 819,
										"name": "XApp",
										"nameLocations": [
											"526:4:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 326,
										"src": "526:4:7"
									},
									"id": 820,
									"nodeType": "InheritanceSpecifier",
									"src": "526:4:7"
								}
							],
							"canonicalName": "OmniERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1333,
							"linearizedBaseContracts": [
								1333,
								326,
								581,
								623,
								1359,
								796,
								1481
							],
							"name": "OmniERC20",
							"nameLocation": "466:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 824,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "581:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "537:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 823,
										"keyName": "account",
										"keyNameLocation": "553:7:7",
										"keyType": {
											"id": 821,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "545:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "537:35:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 822,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "564:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 830,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "668:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "596:83:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 829,
										"keyName": "account",
										"keyNameLocation": "612:7:7",
										"keyType": {
											"id": 825,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "604:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "596:63:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 828,
											"keyName": "spender",
											"keyNameLocation": "639:7:7",
											"keyType": {
												"id": 826,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "631:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "623:35:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 827,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "650:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 832,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "701:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "685:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 831,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "685:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 834,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "734:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "719:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 833,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "719:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 836,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "760:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "745:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 835,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "745:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "885:57:7",
										"statements": [
											{
												"expression": {
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 850,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "895:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 851,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "903:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "895:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "895:13:7"
											},
											{
												"expression": {
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 854,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "918:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 855,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "928:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "918:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "918:17:7"
											}
										]
									},
									"id": 859,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 845,
													"name": "omniPortal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 842,
													"src": "855:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"expression": {
														"id": 846,
														"name": "ConfLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "867:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ConfLevel_$220_$",
															"typeString": "type(library ConfLevel)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "877:6:7",
													"memberName": "Latest",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 182,
													"src": "867:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 848,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 844,
												"name": "XApp",
												"nameLocations": [
													"850:4:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 326,
												"src": "850:4:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "850:34:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "800:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "786:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 837,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "786:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "821:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "807:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 839,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "807:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "omniPortal",
												"nameLocation": "838:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "830:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:64:7"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:7"
									},
									"scope": 1333,
									"src": "774:168:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1346
									],
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "1017:29:7",
										"statements": [
											{
												"expression": {
													"id": 865,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 834,
													"src": "1034:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 864,
												"id": 866,
												"nodeType": "Return",
												"src": "1027:12:7"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "957:4:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 861,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "984:8:7"
									},
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:2:7"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1002:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 862,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1002:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:15:7"
									},
									"scope": 1333,
									"src": "948:98:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1352
									],
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "1123:31:7",
										"statements": [
											{
												"expression": {
													"id": 874,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "1140:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 873,
												"id": 875,
												"nodeType": "Return",
												"src": "1133:14:7"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1061:6:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 870,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1090:8:7"
									},
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:2:7"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "1108:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 871,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1108:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:15:7"
									},
									"scope": 1333,
									"src": "1052:102:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1358
									],
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "1225:26:7",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1242:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 882,
												"id": 884,
												"nodeType": "Return",
												"src": "1235:9:7"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1169:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 879,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1200:8:7"
									},
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:2:7"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "1218:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 880,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1218:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1217:7:7"
									},
									"scope": 1333,
									"src": "1160:91:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										745
									],
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "1327:36:7",
										"statements": [
											{
												"expression": {
													"id": 892,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 832,
													"src": "1344:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 891,
												"id": 893,
												"nodeType": "Return",
												"src": "1337:19:7"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1266:11:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 888,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1300:8:7"
									},
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1277:2:7"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "1318:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1317:9:7"
									},
									"scope": 1333,
									"src": "1257:106:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										753
									],
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "1452:42:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 903,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "1469:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 905,
													"indexExpression": {
														"id": 904,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "1479:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1469:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 902,
												"id": 906,
												"nodeType": "Return",
												"src": "1462:25:7"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1378:9:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 899,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1425:8:7"
									},
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1396:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1388:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1387:17:7"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1443:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:9:7"
									},
									"scope": 1333,
									"src": "1369:125:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										773
									],
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "1599:51:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 918,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "1616:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 920,
														"indexExpression": {
															"id": 919,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "1628:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1616:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 922,
													"indexExpression": {
														"id": 921,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "1635:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1616:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 917,
												"id": 923,
												"nodeType": "Return",
												"src": "1609:34:7"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1510:9:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 914,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1572:8:7"
									},
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1528:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1520:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1520:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1543:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1535:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1535:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1519:32:7"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1590:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1590:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1589:9:7"
									},
									"scope": 1333,
									"src": "1501:149:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										783
									],
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "1744:107:7",
										"statements": [
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "1762:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "1754:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 935,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1754:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 939,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 937,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "1770:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1754:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "1801:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "1808:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "1817:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 940,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1226,
															1285
														],
														"referencedDeclaration": 1226,
														"src": "1792:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1792:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "1792:31:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1840:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 934,
												"id": 947,
												"nodeType": "Return",
												"src": "1833:11:7"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1665:7:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 931,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1720:8:7"
									},
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1681:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "1673:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1698:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "1690:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:32:7"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "1738:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 932,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1738:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1737:6:7"
									},
									"scope": 1333,
									"src": "1656:195:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										795
									],
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "1959:151:7",
										"statements": [
											{
												"assignments": [
													962
												],
												"declarations": [
													{
														"constant": false,
														"id": 962,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "1977:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 980,
														"src": "1969:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 961,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1969:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 963,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "1987:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1969:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 967,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "2025:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "2031:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "2040:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 966,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "2009:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "2009:37:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 973,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "2066:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2072:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 975,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "2076:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 972,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "2056:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2056:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "2056:26:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2099:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 960,
												"id": 979,
												"nodeType": "Return",
												"src": "2092:11:7"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1866:12:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 957,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1935:8:7"
									},
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1887:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1879:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1879:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1901:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1893:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1913:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1905:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1878:41:7"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1953:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1953:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:6:7"
									},
									"scope": 1333,
									"src": "1857:253:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										763
									],
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "2201:103:7",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2219:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1004,
														"src": "2211:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 991,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2211:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 993,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "2227:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2227:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2211:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 997,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "2259:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "2266:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "2270:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 996,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "2249:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "2249:27:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2293:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 990,
												"id": 1003,
												"nodeType": "Return",
												"src": "2286:11:7"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2126:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 987,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2177:8:7"
									},
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2143:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2135:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2155:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2147:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2147:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:27:7"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2195:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2195:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:6:7"
									},
									"scope": 1333,
									"src": "2117:187:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "2408:360:7",
										"statements": [
											{
												"assignments": [
													1017
												],
												"declarations": [
													{
														"constant": false,
														"id": 1017,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "2427:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1062,
														"src": "2419:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1016,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2419:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1020,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1018,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "2434:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2434:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2419:27:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1022,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "2466:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1025,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2480:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OmniERC20_$1333",
																		"typeString": "contract OmniERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OmniERC20_$1333",
																		"typeString": "contract OmniERC20"
																	}
																],
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2472:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1023,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2472:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2472:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "2487:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1021,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "2456:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2456:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "2456:37:7"
											},
											{
												"assignments": [
													1031
												],
												"declarations": [
													{
														"constant": false,
														"id": 1031,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2553:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1062,
														"src": "2540:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1030,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2540:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1044,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1034,
																"name": "OmniERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "2575:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_OmniERC20_$1333_$",
																	"typeString": "type(contract OmniERC20)"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2585:15:7",
															"memberName": "receiveTransfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1087,
															"src": "2575:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function OmniERC20.receiveTransfer(address,address,uint256)"
															}
														},
														{
															"components": [
																{
																	"arguments": [
																		{
																			"id": 1038,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2611:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_OmniERC20_$1333",
																				"typeString": "contract OmniERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_OmniERC20_$1333",
																				"typeString": "contract OmniERC20"
																			}
																		],
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2603:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1036,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2603:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2603:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1040,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "2618:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1041,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "2622:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1042,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2602:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function OmniERC20.receiveTransfer(address,address,uint256)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,address,uint256)"
															}
														],
														"expression": {
															"id": 1032,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "2560:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2564:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "2560:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2560:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2540:89:7"
											},
											{
												"assignments": [
													1046
												],
												"declarations": [
													{
														"constant": false,
														"id": 1046,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "2647:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1062,
														"src": "2639:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1045,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2639:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"initialValue": {
													"arguments": [
														{
															"id": 1048,
															"name": "destChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "2659:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1049,
															"name": "destToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "2670:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "2681:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "313530303030",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2687:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_150000_by_1",
																"typeString": "int_const 150000"
															},
															"value": "150000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_150000_by_1",
																"typeString": "int_const 150000"
															}
														],
														"id": 1047,
														"name": "xcall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															474,
															530
														],
														"referencedDeclaration": 474,
														"src": "2653:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint64,address,bytes memory,uint64) returns (uint256)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2639:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1055,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2712:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2716:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2712:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1057,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "2725:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2712:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6d6e6945524332303a20496e73756666696369656e7420666565",
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2730:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805",
																"typeString": "literal_string \"OmniERC20: Insufficient fee\""
															},
															"value": "OmniERC20: Insufficient fee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805",
																"typeString": "literal_string \"OmniERC20: Insufficient fee\""
															}
														],
														"id": 1054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2704:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2704:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "2704:56:7"
											}
										]
									},
									"functionSelector": "bdb3c8e6",
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2318:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "destChain",
												"nameLocation": "2334:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2327:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1006,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2327:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "destToken",
												"nameLocation": "2353:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2345:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2372:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2364:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2384:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2376:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2376:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:64:7"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2408:0:7"
									},
									"scope": 1333,
									"src": "2309:459:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "2855:123:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1075,
																"name": "isXCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "2874:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2874:9:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6d6e6945524332303a204f6e6c792063616c6c61626c65207669612063726f73732d636861696e206d657373616765",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2885:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808",
																"typeString": "literal_string \"OmniERC20: Only callable via cross-chain message\""
															},
															"value": "OmniERC20: Only callable via cross-chain message"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808",
																"typeString": "literal_string \"OmniERC20: Only callable via cross-chain message\""
															}
														],
														"id": 1074,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2866:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2866:70:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "2866:70:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1081,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "2954:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1082,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2960:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1083,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "2964:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1080,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "2946:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2946:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "2946:24:7"
											}
										]
									},
									"functionSelector": "4a536a06",
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1072,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1071,
												"name": "xrecv",
												"nameLocations": [
													"2849:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 370,
												"src": "2849:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2849:5:7"
										}
									],
									"name": "receiveTransfer",
									"nameLocation": "2783:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2807:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2799:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2821:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2813:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2833:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2825:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2825:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:41:7"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2855:0:7"
									},
									"scope": 1333,
									"src": "2774:204:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "3061:232:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1096,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "3075:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3091:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3083:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1097,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3083:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3083:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3075:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "3071:86:7",
												"trueBody": {
													"id": 1109,
													"nodeType": "Block",
													"src": "3095:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3143:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3135:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1103,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3135:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3135:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1102,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "3116:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3116:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1108,
															"nodeType": "RevertStatement",
															"src": "3109:37:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1111,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "3170:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3184:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3176:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1112,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3176:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3176:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3170:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1125,
												"nodeType": "IfStatement",
												"src": "3166:86:7",
												"trueBody": {
													"id": 1124,
													"nodeType": "Block",
													"src": "3188:64:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3238:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3230:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1118,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3230:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3230:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1117,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "3209:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3209:32:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1123,
															"nodeType": "RevertStatement",
															"src": "3202:39:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1127,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "3270:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "3276:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1129,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "3280:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1126,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "3262:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3262:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "3262:24:7"
											}
										]
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "2993:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3011:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3003:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3025:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3017:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3017:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3037:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3029:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3002:41:7"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3061:0:7"
									},
									"scope": 1333,
									"src": "2984:309:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "3375:631:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1142,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "3389:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3405:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3397:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1143,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3397:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3397:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3389:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1179,
													"nodeType": "Block",
													"src": "3461:283:7",
													"statements": [
														{
															"assignments": [
																1154
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1154,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "3483:11:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1179,
																	"src": "3475:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1153,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3475:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1158,
															"initialValue": {
																"baseExpression": {
																	"id": 1155,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "3497:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1157,
																"indexExpression": {
																	"id": 1156,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "3507:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3497:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3475:37:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1159,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "3530:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1160,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "3544:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3530:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1169,
															"nodeType": "IfStatement",
															"src": "3526:115:7",
															"trueBody": {
																"id": 1168,
																"nodeType": "Block",
																"src": "3551:90:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1163,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "3601:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1164,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1154,
																					"src": "3607:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1165,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1139,
																					"src": "3620:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1162,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 593,
																				"src": "3576:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3576:50:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1167,
																		"nodeType": "RevertStatement",
																		"src": "3569:57:7"
																	}
																]
															}
														},
														{
															"id": 1178,
															"nodeType": "UncheckedBlock",
															"src": "3654:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1170,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 824,
																				"src": "3682:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1172,
																			"indexExpression": {
																				"id": 1171,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "3692:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "3682:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1173,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1154,
																				"src": "3700:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1174,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1139,
																				"src": "3714:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3700:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3682:37:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1177,
																	"nodeType": "ExpressionStatement",
																	"src": "3682:37:7"
																}
															]
														}
													]
												},
												"id": 1180,
												"nodeType": "IfStatement",
												"src": "3385:359:7",
												"trueBody": {
													"id": 1152,
													"nodeType": "Block",
													"src": "3409:46:7",
													"statements": [
														{
															"expression": {
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1148,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "3423:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1149,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "3439:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3423:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1151,
															"nodeType": "ExpressionStatement",
															"src": "3423:21:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1181,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "3758:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3772:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3764:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1182,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3764:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3764:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3758:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1200,
													"nodeType": "Block",
													"src": "3870:89:7",
													"statements": [
														{
															"id": 1199,
															"nodeType": "UncheckedBlock",
															"src": "3884:65:7",
															"statements": [
																{
																	"expression": {
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1193,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 824,
																				"src": "3912:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1195,
																			"indexExpression": {
																				"id": 1194,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1137,
																				"src": "3922:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "3912:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1196,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1139,
																			"src": "3929:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3912:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1198,
																	"nodeType": "ExpressionStatement",
																	"src": "3912:22:7"
																}
															]
														}
													]
												},
												"id": 1201,
												"nodeType": "IfStatement",
												"src": "3754:205:7",
												"trueBody": {
													"id": 1192,
													"nodeType": "Block",
													"src": "3776:88:7",
													"statements": [
														{
															"id": 1191,
															"nodeType": "UncheckedBlock",
															"src": "3790:64:7",
															"statements": [
																{
																	"expression": {
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1187,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "3818:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1188,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1139,
																			"src": "3834:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3818:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1190,
																	"nodeType": "ExpressionStatement",
																	"src": "3818:21:7"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1203,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "3983:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1204,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "3989:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1205,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "3993:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1202,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "3974:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "EmitStatement",
												"src": "3969:30:7"
											}
										]
									},
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "3309:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3325:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "3317:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3317:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3339:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "3331:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3331:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3351:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "3343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3316:41:7"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3375:0:7"
									},
									"scope": 1333,
									"src": "3300:706:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "4087:54:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1219,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "4106:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1220,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "4113:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1221,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "4122:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4129:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1218,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1226,
															1285
														],
														"referencedDeclaration": 1285,
														"src": "4097:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4097:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "4097:37:7"
											}
										]
									},
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "4022:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4039:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "4031:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4054:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "4046:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4046:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4071:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "4063:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:47:7"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4087:0:7"
									},
									"scope": 1333,
									"src": "4013:128:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "4245:334:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1237,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "4259:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4276:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4268:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1238,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4268:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4268:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4259:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1251,
												"nodeType": "IfStatement",
												"src": "4255:89:7",
												"trueBody": {
													"id": 1250,
													"nodeType": "Block",
													"src": "4280:64:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4330:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4322:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1244,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4322:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4322:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1243,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "4301:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4301:32:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1249,
															"nodeType": "RevertStatement",
															"src": "4294:39:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1252,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "4357:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4376:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4368:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1253,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4368:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4368:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4357:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1266,
												"nodeType": "IfStatement",
												"src": "4353:90:7",
												"trueBody": {
													"id": 1265,
													"nodeType": "Block",
													"src": "4380:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4429:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4421:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1259,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4421:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4421:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1258,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "4401:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4401:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1264,
															"nodeType": "RevertStatement",
															"src": "4394:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1267,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "4452:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1270,
															"indexExpression": {
																"id": 1268,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "4464:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4452:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1271,
														"indexExpression": {
															"id": 1269,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "4471:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4452:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1272,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "4482:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4452:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "4452:35:7"
											},
											{
												"condition": {
													"id": 1275,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1234,
													"src": "4501:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1283,
												"nodeType": "IfStatement",
												"src": "4497:76:7",
												"trueBody": {
													"id": 1282,
													"nodeType": "Block",
													"src": "4512:61:7",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1277,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1228,
																		"src": "4540:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1278,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1230,
																		"src": "4547:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1279,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1232,
																		"src": "4556:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1276,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "4531:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4531:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1281,
															"nodeType": "EmitStatement",
															"src": "4526:36:7"
														}
													]
												}
											}
										]
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "4156:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4173:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "4165:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4188:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "4180:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4180:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4205:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "4197:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4197:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "4217:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "4212:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4212:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:63:7"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4245:0:7"
									},
									"scope": 1333,
									"src": "4147:432:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "4674:388:7",
										"statements": [
											{
												"assignments": [
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "4692:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1331,
														"src": "4684:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1294,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4684:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"arguments": [
														{
															"id": 1297,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "4721:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1298,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "4728:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1296,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "4711:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4711:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4684:52:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1301,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "4750:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4775:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1303,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4775:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1302,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4770:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4770:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4784:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4770:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4750:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1330,
												"nodeType": "IfStatement",
												"src": "4746:310:7",
												"trueBody": {
													"id": 1329,
													"nodeType": "Block",
													"src": "4789:267:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1308,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "4807:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1309,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "4826:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4807:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1318,
															"nodeType": "IfStatement",
															"src": "4803:130:7",
															"trueBody": {
																"id": 1317,
																"nodeType": "Block",
																"src": "4833:100:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1312,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1289,
																					"src": "4885:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1313,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1295,
																					"src": "4894:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1314,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1291,
																					"src": "4912:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1311,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 612,
																				"src": "4858:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4858:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1316,
																		"nodeType": "RevertStatement",
																		"src": "4851:67:7"
																	}
																]
															}
														},
														{
															"id": 1328,
															"nodeType": "UncheckedBlock",
															"src": "4946:100:7",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1320,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1287,
																				"src": "4983:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1321,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1289,
																				"src": "4990:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1322,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1295,
																					"src": "4999:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1323,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1291,
																					"src": "5018:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4999:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1325,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5025:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1319,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1226,
																				1285
																			],
																			"referencedDeclaration": 1285,
																			"src": "4974:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4974:57:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1327,
																	"nodeType": "ExpressionStatement",
																	"src": "4974:57:7"
																}
															]
														}
													]
												}
											}
										]
									},
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "4594:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4618:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "4610:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4610:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4633:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "4625:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4625:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4650:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "4642:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4642:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4609:47:7"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4674:0:7"
									},
									"scope": 1333,
									"src": "4585:477:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1334,
							"src": "448:4616:7",
							"usedErrors": [
								593,
								598,
								603,
								612,
								617,
								622
							],
							"usedEvents": [
								340,
								345,
								730,
								739
							]
						}
					],
					"src": "32:5033:7"
				},
				"id": 7
			},
			"xstake/src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "xstake/src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							796
						],
						"IERC20Metadata": [
							1359
						]
					},
					"id": 1360,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1335,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:8"
						},
						{
							"absolutePath": "xstake/src/wstf token launch/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1337,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 797,
							"src": "151:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1336,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 796,
										"src": "159:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1339,
										"name": "IERC20",
										"nameLocations": [
											"305:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 796,
										"src": "305:6:8"
									},
									"id": 1340,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1338,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:8",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1359,
							"linearizedBaseContracts": [
								1359,
								796
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:8"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "416:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1343,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:8"
									},
									"scope": 1359,
									"src": "377:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:8"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "539:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1349,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:8"
									},
									"scope": 1359,
									"src": "498:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:8"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "673:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1355,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:8"
									},
									"scope": 1359,
									"src": "630:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1360,
							"src": "277:405:8",
							"usedErrors": [],
							"usedEvents": [
								730,
								739
							]
						}
					],
					"src": "125:558:8"
				},
				"id": 8
			},
			"xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol": {
				"ast": {
					"absolutePath": "xstake/src/wstf token launch/contracts/token/ERC20/implementation.sol",
					"exportedSymbols": {
						"ConfLevel": [
							220
						],
						"Context": [
							1481
						],
						"IERC20": [
							796
						],
						"IERC20Errors": [
							623
						],
						"IERC20Metadata": [
							1359
						],
						"MyOmniToken": [
							1451
						],
						"OmniERC20": [
							1333
						],
						"XApp": [
							326
						]
					},
					"id": 1452,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1361,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "xstake/src/wstf token launch/contracts/token/ERC20/OmniERC20.sol",
							"file": "./OmniERC20.sol",
							"id": 1362,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1452,
							"sourceUnit": 1334,
							"src": "58:25:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1363,
										"name": "OmniERC20",
										"nameLocations": [
											"152:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1333,
										"src": "152:9:9"
									},
									"id": 1364,
									"nodeType": "InheritanceSpecifier",
									"src": "152:9:9"
								}
							],
							"canonicalName": "MyOmniToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1451,
							"linearizedBaseContracts": [
								1451,
								1333,
								326,
								581,
								623,
								1359,
								796,
								1481
							],
							"name": "MyOmniToken",
							"nameLocation": "137:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1367,
									"mutability": "mutable",
									"name": "omniPortal",
									"nameLocation": "172:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1451,
									"src": "164:61:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1365,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "164:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307863423630413034353138333145343836356243343966343146394336373636354663396237354333",
										"id": 1366,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "183:42:9",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xcB60A0451831E4865bC49f41F9C67665Fc9b75C3"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "442:256:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1385,
														"name": "ismainChain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "534:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "548:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "534:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1402,
													"nodeType": "Block",
													"src": "630:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1397,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "660:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MyOmniToken_$1451",
																					"typeString": "contract MyOmniToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MyOmniToken_$1451",
																					"typeString": "contract MyOmniToken"
																				}
																			],
																			"id": 1396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "652:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1395,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "652:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "652:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1399,
																		"name": "initialSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1373,
																		"src": "667:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1394,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1450,
																	"src": "646:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "646:35:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1401,
															"nodeType": "ExpressionStatement",
															"src": "646:35:9"
														}
													]
												},
												"id": 1403,
												"nodeType": "IfStatement",
												"src": "531:161:9",
												"trueBody": {
													"id": 1393,
													"nodeType": "Block",
													"src": "553:63:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1389,
																		"name": "initialMinterAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "569:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1390,
																		"name": "initialSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1373,
																		"src": "591:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1388,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1450,
																	"src": "563:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "563:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1392,
															"nodeType": "ExpressionStatement",
															"src": "563:42:9"
														}
													]
												}
											}
										]
									},
									"id": 1405,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1380,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1369,
													"src": "414:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1381,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1371,
													"src": "421:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1382,
													"name": "omniPortal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1367,
													"src": "430:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1383,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1379,
												"name": "OmniERC20",
												"nameLocations": [
													"404:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1333,
												"src": "404:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "404:37:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "266:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "252:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1368,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "252:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "295:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "281:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1370,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "281:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "320:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "312:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "312:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "initialMinterAddress",
												"nameLocation": "351:20:9",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "343:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "ismainChain",
												"nameLocation": "386:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "381:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "381:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:161:9"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:0:9"
									},
									"scope": 1451,
									"src": "231:467:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "856:108:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1413,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "942:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1414,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "951:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1412,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "936:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "936:21:9"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "812:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "825:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "817:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "842:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "834:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:32:9"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "856:0:9"
									},
									"scope": 1451,
									"src": "803:161:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "1056:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1425,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "1070:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1089:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1081:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1081:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1081:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1070:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1439,
												"nodeType": "IfStatement",
												"src": "1066:91:9",
												"trueBody": {
													"id": 1438,
													"nodeType": "Block",
													"src": "1093:64:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1143:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1135:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1432,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1135:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1135:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1431,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "1114:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1114:32:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1437,
															"nodeType": "RevertStatement",
															"src": "1107:39:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1182:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1174:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1441,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1174:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1174:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1445,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "1186:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1446,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "1195:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1440,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "1166:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1166:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "1166:35:9"
											}
										]
									},
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "1009:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1023:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "1015:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1040:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "1032:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:32:9"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:0:9"
									},
									"scope": 1451,
									"src": "1000:208:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1452,
							"src": "128:1082:9",
							"usedErrors": [
								593,
								598,
								603,
								612,
								617,
								622
							],
							"usedEvents": [
								340,
								345,
								730,
								739
							]
						}
					],
					"src": "32:1179:9"
				},
				"id": 9
			},
			"xstake/src/wstf token launch/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "xstake/src/wstf token launch/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1481
						]
					},
					"id": 1482,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1453,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1454,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1481,
							"linearizedBaseContracts": [
								1481
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1459,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1458,
												"id": 1461,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1481,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1468,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1467,
												"id": 1470,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1481,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1476,
												"id": 1478,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1481,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1482,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			}
		}
	}
}