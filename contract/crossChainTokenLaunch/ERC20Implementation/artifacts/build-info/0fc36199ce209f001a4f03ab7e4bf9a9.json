{
	"id": "0fc36199ce209f001a4f03ab7e4bf9a9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/token/ERC20/implementation.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"contract/token/ERC20/CorssCToken.sol\";  // Import the abstract OmniERC20 contract\n\ncontract tokenLaunch is CrossCToken {\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint256 initialSupply,\n        address minterAddress,\n        bool ismainChain\n    ) CrossCToken(name_, symbol_) {\n        // Mint initial supply to the deployer (you can change this as needed)\n        if(ismainChain== true){\n        _mint(minterAddress, initialSupply);\n        }\n        else {\n              _mint(address(this), initialSupply);\n        }\n    }\n\n    // Public mint function, callable by the owner (if you wish to allow minting after deployment)\n    function mint(address account, uint256 value) public {\n        // Add your own access control here, e.g., onlyOwner modifier\n        _mint(account, value);\n    }\n\n    // Internal mint function\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n}\n"
			},
			"contract/token/ERC20/CorssCToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\n\n// import {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\nimport {IERC20Errors} from \"contract/token/interfaces/draft-IERC6093.sol\";\n\nabstract contract CrossCToken is  IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n    uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\n        address owner = msg.sender;\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint256 value) public virtual override returns (bool) {\n        address spender = msg.sender;\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n\n    function transfer(address to, uint256 value) public virtual override returns (bool) {\n        address owner = msg.sender;\n        _transfer(owner, to, value);\n        return true;\n    }\n\n\n\n\n    function _transfer(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n\n        _update(from, to, value);\n    }\n\n\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"contract/token/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"contract/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"contract/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"contract/token/ERC20/CorssCToken.sol": {
				"CrossCToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/token/ERC20/CorssCToken.sol\":\"CrossCToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/token/ERC20/CorssCToken.sol\":{\"keccak256\":\"0xa3f5f4360f6dcda75bd70b32f3bce6e591fd53b292cd75041e7e51c5fd6e0103\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://459c988ee5e12aaa85c0767b342f55357472aa386ce09132c70bb045801d649f\",\"dweb:/ipfs/QmchEwjWWF8cXYoCxetDEv3sZd75uSRJxuXnBoYjHf64Qe\"]},\"contract/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contract/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"contract/token/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 17,
								"contract": "contract/token/ERC20/CorssCToken.sol:CrossCToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 23,
								"contract": "contract/token/ERC20/CorssCToken.sol:CrossCToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 25,
								"contract": "contract/token/ERC20/CorssCToken.sol:CrossCToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 27,
								"contract": "contract/token/ERC20/CorssCToken.sol:CrossCToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 29,
								"contract": "contract/token/ERC20/CorssCToken.sol:CrossCToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contract/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract/token/ERC20/implementation.sol": {
				"tokenLaunch": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "minterAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "ismainChain",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/token/ERC20/implementation.sol\":149:1147  contract tokenLaunch is CrossCToken {... */\n  mstore(0x40, 0x80)\n    /* \"contract/token/ERC20/implementation.sol\":192:635  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contract/token/ERC20/implementation.sol\":370:375  name_ */\n  dup5\n    /* \"contract/token/ERC20/implementation.sol\":377:384  symbol_ */\n  dup5\n    /* \"contract/token/ERC20/CorssCToken.sol\":686:691  _name */\n  0x03\n    /* \"contract/token/ERC20/CorssCToken.sol\":686:699  _name = name_ */\n  tag_7\n    /* \"contract/token/ERC20/implementation.sol\":370:375  name_ */\n  dup4\n    /* \"contract/token/ERC20/CorssCToken.sol\":686:691  _name */\n  dup3\n    /* \"contract/token/ERC20/CorssCToken.sol\":686:699  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"contract/token/ERC20/CorssCToken.sol\":709:716  _symbol */\n  0x04\n    /* \"contract/token/ERC20/CorssCToken.sol\":709:726  _symbol = symbol_ */\n  tag_9\n    /* \"contract/token/ERC20/CorssCToken.sol\":719:726  symbol_ */\n  dup3\n    /* \"contract/token/ERC20/CorssCToken.sol\":709:716  _symbol */\n  dup3\n    /* \"contract/token/ERC20/CorssCToken.sol\":709:726  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n  pop\n    /* \"contract/token/ERC20/implementation.sol\":478:496  ismainChain== true */\n  dup1\n  iszero\n  iszero\n    /* \"contract/token/ERC20/implementation.sol\":492:496  true */\n  0x01\n    /* \"contract/token/ERC20/implementation.sol\":478:496  ismainChain== true */\n  sub\n    /* \"contract/token/ERC20/implementation.sol\":475:629  if(ismainChain== true){... */\n  tag_11\n  jumpi\n    /* \"contract/token/ERC20/implementation.sol\":507:542  _mint(minterAddress, initialSupply) */\n  tag_12\n    /* \"contract/token/ERC20/implementation.sol\":513:526  minterAddress */\n  dup3\n    /* \"contract/token/ERC20/implementation.sol\":528:541  initialSupply */\n  dup5\n    /* \"contract/token/ERC20/implementation.sol\":507:512  _mint */\n  tag_13\n    /* \"contract/token/ERC20/implementation.sol\":507:542  _mint(minterAddress, initialSupply) */\n  jump\t// in\ntag_12:\n    /* \"contract/token/ERC20/implementation.sol\":475:629  if(ismainChain== true){... */\n  jump(tag_15)\ntag_11:\n    /* \"contract/token/ERC20/implementation.sol\":583:618  _mint(address(this), initialSupply) */\n  tag_15\n    /* \"contract/token/ERC20/implementation.sol\":597:601  this */\n  address\n    /* \"contract/token/ERC20/implementation.sol\":604:617  initialSupply */\n  dup5\n    /* \"contract/token/ERC20/implementation.sol\":583:588  _mint */\n  tag_13\n    /* \"contract/token/ERC20/implementation.sol\":583:618  _mint(address(this), initialSupply) */\n  jump\t// in\ntag_15:\n    /* \"contract/token/ERC20/implementation.sol\":192:635  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contract/token/ERC20/implementation.sol\":149:1147  contract tokenLaunch is CrossCToken {... */\n  jump(tag_41)\n    /* \"contract/token/ERC20/implementation.sol\":937:1145  function _mint(address account, uint256 value) internal {... */\ntag_13:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/token/ERC20/implementation.sol\":1007:1028  account == address(0) */\n  dup3\n  and\n    /* \"contract/token/ERC20/implementation.sol\":1003:1094  if (account == address(0)) {... */\n  tag_18\n  jumpi\n    /* \"contract/token/ERC20/implementation.sol\":1051:1083  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"contract/token/ERC20/implementation.sol\":1080:1081  0 */\n  0x00\n    /* \"contract/token/ERC20/implementation.sol\":1051:1083  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4615:4666   */\n  mstore\n    /* \"#utility.yul\":4588:4606   */\n  0x24\n  add\n    /* \"contract/token/ERC20/implementation.sol\":1051:1083  ERC20InvalidReceiver(address(0)) */\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contract/token/ERC20/implementation.sol\":1003:1094  if (account == address(0)) {... */\ntag_18:\n    /* \"contract/token/ERC20/implementation.sol\":1103:1138  _update(address(0), account, value) */\n  tag_21\n    /* \"contract/token/ERC20/implementation.sol\":1119:1120  0 */\n  0x00\n    /* \"contract/token/ERC20/implementation.sol\":1123:1130  account */\n  dup4\n    /* \"contract/token/ERC20/implementation.sol\":1132:1137  value */\n  dup4\n    /* \"contract/token/ERC20/implementation.sol\":1103:1110  _update */\n  tag_22\n    /* \"contract/token/ERC20/implementation.sol\":1103:1138  _update(address(0), account, value) */\n  jump\t// in\ntag_21:\n    /* \"contract/token/ERC20/implementation.sol\":937:1145  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contract/token/ERC20/CorssCToken.sol\":2414:3120  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_22:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/token/ERC20/CorssCToken.sol\":2503:2521  from == address(0) */\n  dup4\n  and\n    /* \"contract/token/ERC20/CorssCToken.sol\":2499:2858  if (from == address(0)) {... */\n  tag_24\n  jumpi\n    /* \"contract/token/ERC20/CorssCToken.sol\":2553:2558  value */\n  dup1\n    /* \"contract/token/ERC20/CorssCToken.sol\":2537:2549  _totalSupply */\n  0x02\n  0x00\n    /* \"contract/token/ERC20/CorssCToken.sol\":2537:2558  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"contract/token/ERC20/CorssCToken.sol\":2499:2858  if (from == address(0)) {... */\n  tag_27\n  swap1\n  pop\n  jump\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/token/ERC20/CorssCToken.sol\":2611:2626  _balances[from] */\n  dup4\n  and\n    /* \"contract/token/ERC20/CorssCToken.sol\":2589:2608  uint256 fromBalance */\n  0x00\n    /* \"contract/token/ERC20/CorssCToken.sol\":2611:2626  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"contract/token/ERC20/CorssCToken.sol\":2644:2663  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"contract/token/ERC20/CorssCToken.sol\":2640:2755  if (fromBalance < value) {... */\n  iszero\n  tag_28\n  jumpi\n    /* \"contract/token/ERC20/CorssCToken.sol\":2690:2740  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5124:5156   */\n  dup6\n  and\n    /* \"contract/token/ERC20/CorssCToken.sol\":2690:2740  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5106:5157   */\n  mstore\n    /* \"#utility.yul\":5173:5191   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5166:5200   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5216:5234   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5209:5243   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5079:5097   */\n  0x64\n  add\n    /* \"contract/token/ERC20/CorssCToken.sol\":2690:2740  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_19\n    /* \"#utility.yul\":4904:5249   */\n  jump\n    /* \"contract/token/ERC20/CorssCToken.sol\":2640:2755  if (fromBalance < value) {... */\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/token/ERC20/CorssCToken.sol\":2796:2811  _balances[from] */\n  dup5\n  and\n    /* \"contract/token/ERC20/CorssCToken.sol\":2796:2805  _balances */\n  0x00\n    /* \"contract/token/ERC20/CorssCToken.sol\":2796:2811  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contract/token/ERC20/CorssCToken.sol\":2814:2833  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"contract/token/ERC20/CorssCToken.sol\":2796:2833  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"contract/token/ERC20/CorssCToken.sol\":2499:2858  if (from == address(0)) {... */\ntag_27:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/token/ERC20/CorssCToken.sol\":2872:2888  to == address(0) */\n  dup3\n  and\n    /* \"contract/token/ERC20/CorssCToken.sol\":2868:3073  if (to == address(0)) {... */\n  tag_31\n  jumpi\n    /* \"contract/token/ERC20/CorssCToken.sol\":2932:2944  _totalSupply */\n  0x02\n    /* \"contract/token/ERC20/CorssCToken.sol\":2932:2953  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"contract/token/ERC20/CorssCToken.sol\":2868:3073  if (to == address(0)) {... */\n  jump(tag_32)\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/token/ERC20/CorssCToken.sol\":3026:3039  _balances[to] */\n  dup3\n  and\n    /* \"contract/token/ERC20/CorssCToken.sol\":3026:3035  _balances */\n  0x00\n    /* \"contract/token/ERC20/CorssCToken.sol\":3026:3039  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contract/token/ERC20/CorssCToken.sol\":3026:3048  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"contract/token/ERC20/CorssCToken.sol\":2868:3073  if (to == address(0)) {... */\ntag_32:\n    /* \"contract/token/ERC20/CorssCToken.sol\":3103:3105  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/token/ERC20/CorssCToken.sol\":3088:3113  Transfer(from, to, value) */\n  and\n    /* \"contract/token/ERC20/CorssCToken.sol\":3097:3101  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/token/ERC20/CorssCToken.sol\":3088:3113  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contract/token/ERC20/CorssCToken.sol\":3107:3112  value */\n  dup4\n    /* \"contract/token/ERC20/CorssCToken.sol\":3088:3113  Transfer(from, to, value) */\n  mload(0x40)\n  tag_33\n  swap2\n    /* \"#utility.yul\":5400:5425   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5388:5390   */\n  0x20\n    /* \"#utility.yul\":5373:5391   */\n  add\n  swap1\n    /* \"#utility.yul\":5254:5431   */\n  jump\n    /* \"contract/token/ERC20/CorssCToken.sol\":3088:3113  Transfer(from, to, value) */\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contract/token/ERC20/CorssCToken.sol\":2414:3120  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_35:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:980   */\ntag_36:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_44:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_46\n  tag_35\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_48\n  tag_35\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_49:\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":757:900   */\ntag_50:\n    /* \"#utility.yul\":771:777   */\n  dup3\n    /* \"#utility.yul\":768:769   */\n  dup2\n    /* \"#utility.yul\":765:778   */\n  lt\n    /* \"#utility.yul\":757:900   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":883:887   */\n  0x20\n    /* \"#utility.yul\":867:881   */\n  dup2\n  dup7\n  add\n    /* \"#utility.yul\":863:888   */\n  dup2\n  add\n    /* \"#utility.yul\":857:889   */\n  mload\n    /* \"#utility.yul\":834:848   */\n  dup4\n  dup4\n  add\n    /* \"#utility.yul\":830:855   */\n  dup3\n  add\n    /* \"#utility.yul\":823:890   */\n  mstore\n    /* \"#utility.yul\":786:798   */\n  add\n    /* \"#utility.yul\":757:900   */\n  jump(tag_50)\ntag_52:\n  pop\n    /* \"#utility.yul\":948:949   */\n  0x00\n    /* \"#utility.yul\":920:939   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":941:945   */\n  0x20\n    /* \"#utility.yul\":916:946   */\n  add\n    /* \"#utility.yul\":909:950   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":924:930   */\n  swap4\n    /* \"#utility.yul\":146:980   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":985:1955   */\ntag_3:\n    /* \"#utility.yul\":1108:1114   */\n  0x00\n    /* \"#utility.yul\":1116:1122   */\n  dup1\n    /* \"#utility.yul\":1124:1130   */\n  0x00\n    /* \"#utility.yul\":1132:1138   */\n  dup1\n    /* \"#utility.yul\":1140:1146   */\n  0x00\n    /* \"#utility.yul\":1193:1196   */\n  0xa0\n    /* \"#utility.yul\":1181:1190   */\n  dup7\n    /* \"#utility.yul\":1172:1179   */\n  dup9\n    /* \"#utility.yul\":1168:1191   */\n  sub\n    /* \"#utility.yul\":1164:1197   */\n  slt\n    /* \"#utility.yul\":1161:1214   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1210:1211   */\n  0x00\n    /* \"#utility.yul\":1207:1208   */\n  dup1\n    /* \"#utility.yul\":1200:1212   */\n  revert\n    /* \"#utility.yul\":1161:1214   */\ntag_54:\n    /* \"#utility.yul\":1237:1253   */\n  dup6\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1265:1295   */\n  dup2\n  gt\n    /* \"#utility.yul\":1262:1312   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1308:1309   */\n  0x00\n    /* \"#utility.yul\":1305:1306   */\n  dup1\n    /* \"#utility.yul\":1298:1310   */\n  revert\n    /* \"#utility.yul\":1262:1312   */\ntag_55:\n    /* \"#utility.yul\":1331:1392   */\n  tag_56\n    /* \"#utility.yul\":1384:1391   */\n  dup9\n    /* \"#utility.yul\":1375:1381   */\n  dup3\n    /* \"#utility.yul\":1364:1373   */\n  dup10\n    /* \"#utility.yul\":1360:1382   */\n  add\n    /* \"#utility.yul\":1331:1392   */\n  tag_36\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1438:1440   */\n  0x20\n    /* \"#utility.yul\":1423:1441   */\n  dup9\n  add\n    /* \"#utility.yul\":1417:1442   */\n  mload\n    /* \"#utility.yul\":1321:1392   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":1417:1442   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1454:1486   */\n  dup2\n  gt\n    /* \"#utility.yul\":1451:1503   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1499:1500   */\n  0x00\n    /* \"#utility.yul\":1496:1497   */\n  dup1\n    /* \"#utility.yul\":1489:1501   */\n  revert\n    /* \"#utility.yul\":1451:1503   */\ntag_57:\n    /* \"#utility.yul\":1522:1585   */\n  tag_58\n    /* \"#utility.yul\":1577:1584   */\n  dup9\n    /* \"#utility.yul\":1566:1574   */\n  dup3\n    /* \"#utility.yul\":1555:1564   */\n  dup10\n    /* \"#utility.yul\":1551:1575   */\n  add\n    /* \"#utility.yul\":1522:1585   */\n  tag_36\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1625:1627   */\n  0x40\n    /* \"#utility.yul\":1610:1628   */\n  dup9\n  add\n    /* \"#utility.yul\":1604:1629   */\n  mload\n    /* \"#utility.yul\":1672:1674   */\n  0x60\n    /* \"#utility.yul\":1657:1675   */\n  dup10\n  add\n    /* \"#utility.yul\":1651:1676   */\n  mload\n    /* \"#utility.yul\":1512:1585   */\n  swap2\n  swap7\n  pop\n    /* \"#utility.yul\":1604:1629   */\n  swap5\n  pop\n    /* \"#utility.yul\":1651:1676   */\n  swap1\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1705:1736   */\n  dup2\n  and\n    /* \"#utility.yul\":1695:1737   */\n  dup2\n  eq\n    /* \"#utility.yul\":1685:1755   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1751:1752   */\n  0x00\n    /* \"#utility.yul\":1748:1749   */\n  dup1\n    /* \"#utility.yul\":1741:1753   */\n  revert\n    /* \"#utility.yul\":1685:1755   */\ntag_59:\n    /* \"#utility.yul\":1845:1848   */\n  0x80\n    /* \"#utility.yul\":1830:1849   */\n  dup8\n  add\n    /* \"#utility.yul\":1824:1850   */\n  mload\n    /* \"#utility.yul\":1774:1779   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":1888:1903   */\n  dup1\n  iszero\n    /* \"#utility.yul\":1881:1904   */\n  iszero\n    /* \"#utility.yul\":1869:1905   */\n  dup2\n  eq\n    /* \"#utility.yul\":1859:1923   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1919:1920   */\n  0x00\n    /* \"#utility.yul\":1916:1917   */\n  dup1\n    /* \"#utility.yul\":1909:1921   */\n  revert\n    /* \"#utility.yul\":1859:1923   */\ntag_60:\n    /* \"#utility.yul\":1942:1949   */\n  dup1\n    /* \"#utility.yul\":1932:1949   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":985:1955   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1960:2340   */\ntag_37:\n    /* \"#utility.yul\":2039:2040   */\n  0x01\n    /* \"#utility.yul\":2035:2047   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2082:2094   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2103:2164   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2157:2161   */\n  0x7f\n    /* \"#utility.yul\":2149:2155   */\n  dup3\n    /* \"#utility.yul\":2145:2162   */\n  and\n    /* \"#utility.yul\":2135:2162   */\n  swap2\n  pop\n    /* \"#utility.yul\":2103:2164   */\ntag_62:\n    /* \"#utility.yul\":2210:2212   */\n  0x20\n    /* \"#utility.yul\":2202:2208   */\n  dup3\n    /* \"#utility.yul\":2199:2213   */\n  lt\n    /* \"#utility.yul\":2179:2197   */\n  dup2\n    /* \"#utility.yul\":2176:2214   */\n  sub\n    /* \"#utility.yul\":2173:2334   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2256:2266   */\n  0x4e487b71\n    /* \"#utility.yul\":2251:2254   */\n  0xe0\n    /* \"#utility.yul\":2247:2267   */\n  shl\n    /* \"#utility.yul\":2244:2245   */\n  0x00\n    /* \"#utility.yul\":2237:2268   */\n  mstore\n    /* \"#utility.yul\":2291:2295   */\n  0x22\n    /* \"#utility.yul\":2288:2289   */\n  0x04\n    /* \"#utility.yul\":2281:2296   */\n  mstore\n    /* \"#utility.yul\":2319:2323   */\n  0x24\n    /* \"#utility.yul\":2316:2317   */\n  0x00\n    /* \"#utility.yul\":2309:2324   */\n  revert\n    /* \"#utility.yul\":2173:2334   */\ntag_63:\n  pop\n    /* \"#utility.yul\":1960:2340   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2471:2989   */\ntag_39:\n    /* \"#utility.yul\":2573:2575   */\n  0x1f\n    /* \"#utility.yul\":2568:2571   */\n  dup3\n    /* \"#utility.yul\":2565:2576   */\n  gt\n    /* \"#utility.yul\":2562:2983   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2609:2614   */\n  dup1\n    /* \"#utility.yul\":2606:2607   */\n  0x00\n    /* \"#utility.yul\":2599:2615   */\n  mstore\n    /* \"#utility.yul\":2653:2657   */\n  0x20\n    /* \"#utility.yul\":2650:2651   */\n  0x00\n    /* \"#utility.yul\":2640:2658   */\n  keccak256\n    /* \"#utility.yul\":2723:2725   */\n  0x1f\n    /* \"#utility.yul\":2711:2721   */\n  dup5\n    /* \"#utility.yul\":2707:2726   */\n  add\n    /* \"#utility.yul\":2704:2705   */\n  0x05\n    /* \"#utility.yul\":2700:2727   */\n  shr\n    /* \"#utility.yul\":2694:2698   */\n  dup2\n    /* \"#utility.yul\":2690:2728   */\n  add\n    /* \"#utility.yul\":2759:2763   */\n  0x20\n    /* \"#utility.yul\":2747:2757   */\n  dup6\n    /* \"#utility.yul\":2744:2764   */\n  lt\n    /* \"#utility.yul\":2741:2788   */\n  iszero\n  tag_67\n  jumpi\n  pop\n    /* \"#utility.yul\":2782:2786   */\n  dup1\n    /* \"#utility.yul\":2741:2788   */\ntag_67:\n    /* \"#utility.yul\":2837:2839   */\n  0x1f\n    /* \"#utility.yul\":2832:2835   */\n  dup5\n    /* \"#utility.yul\":2828:2840   */\n  add\n    /* \"#utility.yul\":2825:2826   */\n  0x05\n    /* \"#utility.yul\":2821:2841   */\n  shr\n    /* \"#utility.yul\":2815:2819   */\n  dup3\n    /* \"#utility.yul\":2811:2842   */\n  add\n    /* \"#utility.yul\":2801:2842   */\n  swap2\n  pop\n    /* \"#utility.yul\":2892:2973   */\ntag_68:\n    /* \"#utility.yul\":2910:2912   */\n  dup2\n    /* \"#utility.yul\":2903:2908   */\n  dup2\n    /* \"#utility.yul\":2900:2913   */\n  lt\n    /* \"#utility.yul\":2892:2973   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2969:2970   */\n  0x00\n    /* \"#utility.yul\":2955:2971   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2936:2937   */\n  0x01\n    /* \"#utility.yul\":2925:2938   */\n  add\n    /* \"#utility.yul\":2892:2973   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":2896:2899   */\n  pop\n  pop\n    /* \"#utility.yul\":2562:2983   */\ntag_66:\n    /* \"#utility.yul\":2471:2989   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3165:4464   */\ntag_8:\n    /* \"#utility.yul\":3285:3295   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3307:3337   */\n  dup2\n  gt\n    /* \"#utility.yul\":3304:3360   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3340:3358   */\n  tag_74\n  tag_35\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3369:3466   */\n  tag_75\n    /* \"#utility.yul\":3459:3465   */\n  dup2\n    /* \"#utility.yul\":3419:3457   */\n  tag_76\n    /* \"#utility.yul\":3451:3455   */\n  dup5\n    /* \"#utility.yul\":3445:3456   */\n  sload\n    /* \"#utility.yul\":3419:3457   */\n  tag_37\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3413:3417   */\n  dup5\n    /* \"#utility.yul\":3369:3466   */\n  tag_39\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3515:3519   */\n  0x20\n    /* \"#utility.yul\":3546:3548   */\n  0x1f\n    /* \"#utility.yul\":3535:3549   */\n  dup3\n  gt\n    /* \"#utility.yul\":3563:3564   */\n  0x01\n    /* \"#utility.yul\":3558:4207   */\n  dup2\n  eq\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4251:4252   */\n  0x00\n    /* \"#utility.yul\":4268:4274   */\n  dup4\n    /* \"#utility.yul\":4265:4354   */\n  iszero\n  tag_79\n  jumpi\n  pop\n    /* \"#utility.yul\":4320:4339   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":4314:4340   */\n  mload\n    /* \"#utility.yul\":4265:4354   */\ntag_79:\n  not(0x00)\n    /* \"#utility.yul\":3122:3123   */\n  0x03\n    /* \"#utility.yul\":3118:3129   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3114:3138   */\n  shr\n    /* \"#utility.yul\":3110:3139   */\n  not\n    /* \"#utility.yul\":3100:3140   */\n  and\n    /* \"#utility.yul\":3146:3147   */\n  0x01\n    /* \"#utility.yul\":3142:3153   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":3097:3154   */\n  or\n    /* \"#utility.yul\":4367:4448   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3528:4458   */\n  jump(tag_70)\n    /* \"#utility.yul\":3558:4207   */\ntag_78:\n    /* \"#utility.yul\":2418:2419   */\n  0x00\n    /* \"#utility.yul\":2411:2425   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2455:2459   */\n  0x20\n    /* \"#utility.yul\":2442:2460   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3594:3614   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3712:3934   */\ntag_82:\n    /* \"#utility.yul\":3726:3733   */\n  dup3\n    /* \"#utility.yul\":3723:3724   */\n  dup2\n    /* \"#utility.yul\":3720:3734   */\n  lt\n    /* \"#utility.yul\":3712:3934   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3808:3827   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3802:3828   */\n  mload\n    /* \"#utility.yul\":3787:3829   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3915:3919   */\n  0x20\n    /* \"#utility.yul\":3900:3920   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3868:3869   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3742:3754   */\n  add\n    /* \"#utility.yul\":3712:3934   */\n  jump(tag_82)\ntag_84:\n    /* \"#utility.yul\":3716:3719   */\n  pop\n    /* \"#utility.yul\":3962:3968   */\n  dup5\n    /* \"#utility.yul\":3953:3960   */\n  dup3\n    /* \"#utility.yul\":3950:3969   */\n  lt\n    /* \"#utility.yul\":3947:4148   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":4023:4042   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":4017:4043   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4106:4107   */\n  0x03\n    /* \"#utility.yul\":4102:4116   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":4118:4121   */\n  0xf8\n    /* \"#utility.yul\":4098:4122   */\n  and\n    /* \"#utility.yul\":4094:4131   */\n  shr\n    /* \"#utility.yul\":4090:4132   */\n  not\n    /* \"#utility.yul\":4075:4133   */\n  and\n    /* \"#utility.yul\":4060:4134   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3947:4148   */\ntag_85:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4194:4195   */\n  0x01\n    /* \"#utility.yul\":4178:4192   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4174:4196   */\n  add\n    /* \"#utility.yul\":4161:4197   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3165:4464   */\n  jump\t// out\n    /* \"#utility.yul\":4677:4899   */\ntag_26:\n    /* \"#utility.yul\":4742:4751   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4763:4773   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4760:4893   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4815:4825   */\n  0x4e487b71\n    /* \"#utility.yul\":4810:4813   */\n  0xe0\n    /* \"#utility.yul\":4806:4826   */\n  shl\n    /* \"#utility.yul\":4803:4804   */\n  0x00\n    /* \"#utility.yul\":4796:4827   */\n  mstore\n    /* \"#utility.yul\":4850:4854   */\n  0x11\n    /* \"#utility.yul\":4847:4848   */\n  0x04\n    /* \"#utility.yul\":4840:4855   */\n  mstore\n    /* \"#utility.yul\":4878:4882   */\n  0x24\n    /* \"#utility.yul\":4875:4876   */\n  0x00\n    /* \"#utility.yul\":4868:4883   */\n  revert\n    /* \"#utility.yul\":4760:4893   */\ntag_88:\n    /* \"#utility.yul\":4677:4899   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5254:5431   */\ntag_41:\n    /* \"contract/token/ERC20/implementation.sol\":149:1147  contract tokenLaunch is CrossCToken {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/token/ERC20/implementation.sol\":149:1147  contract tokenLaunch is CrossCToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract/token/ERC20/CorssCToken.sol\":739:837  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/token/ERC20/CorssCToken.sol\":1447:1640  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1194:1208   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1187:1209   */\n      iszero\n        /* \"#utility.yul\":1169:1210   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1157:1159   */\n      0x20\n        /* \"#utility.yul\":1142:1160   */\n      add\n        /* \"contract/token/ERC20/CorssCToken.sol\":1447:1640  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1029:1216   */\n      jump\n        /* \"contract/token/ERC20/CorssCToken.sol\":1048:1154  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"contract/token/ERC20/CorssCToken.sol\":1135:1147  _totalSupply */\n      sload(0x02)\n        /* \"contract/token/ERC20/CorssCToken.sol\":1048:1154  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1367:1392   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1355:1357   */\n      0x20\n        /* \"#utility.yul\":1340:1358   */\n      add\n        /* \"contract/token/ERC20/CorssCToken.sol\":1048:1154  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_16\n        /* \"#utility.yul\":1221:1398   */\n      jump\n        /* \"contract/token/ERC20/CorssCToken.sol\":1646:1897  function transferFrom(address from, address to, uint256 value) public virtual override returns (bool) {... */\n    tag_6:\n      tag_18\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"contract/token/ERC20/CorssCToken.sol\":951:1042  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"contract/token/ERC20/CorssCToken.sol\":1033:1035  18 */\n      0x12\n        /* \"#utility.yul\":1924:1960   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1897:1915   */\n      add\n        /* \"contract/token/ERC20/CorssCToken.sol\":951:1042  function decimals() public view virtual override returns (uint8) {... */\n      tag_16\n        /* \"#utility.yul\":1782:1966   */\n      jump\n        /* \"contract/token/ERC20/implementation.sol\":740:901  function mint(address account, uint256 value) public {... */\n    tag_8:\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contract/token/ERC20/CorssCToken.sol\":1160:1285  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_24\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":1260:1278  _balances[account] */\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":1234:1241  uint256 */\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":1260:1278  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contract/token/ERC20/CorssCToken.sol\":1160:1285  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contract/token/ERC20/CorssCToken.sol\":843:945  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_14\n      tag_46\n      jump\t// in\n        /* \"contract/token/ERC20/CorssCToken.sol\":1904:2089  function transfer(address to, uint256 value) public virtual override returns (bool) {... */\n    tag_11:\n      tag_18\n      tag_49\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"contract/token/ERC20/CorssCToken.sol\":1292:1441  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_12:\n      tag_24\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":1407:1425  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":1381:1388  uint256 */\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":1407:1425  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contract/token/ERC20/CorssCToken.sol\":1407:1418  _allowances */\n      0x01\n        /* \"contract/token/ERC20/CorssCToken.sol\":1407:1425  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contract/token/ERC20/CorssCToken.sol\":1407:1434  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contract/token/ERC20/CorssCToken.sol\":1292:1441  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contract/token/ERC20/CorssCToken.sol\":739:837  function name() public view virtual override returns (string memory) {... */\n    tag_15:\n        /* \"contract/token/ERC20/CorssCToken.sol\":793:806  string memory */\n      0x60\n        /* \"contract/token/ERC20/CorssCToken.sol\":825:830  _name */\n      0x03\n        /* \"contract/token/ERC20/CorssCToken.sol\":818:830  return _name */\n      dup1\n      sload\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_59\n      jump\t// in\n    tag_60:\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_62\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_61)\n    tag_62:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_63:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_63\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contract/token/ERC20/CorssCToken.sol\":739:837  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract/token/ERC20/CorssCToken.sol\":1447:1640  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_21:\n        /* \"contract/token/ERC20/CorssCToken.sol\":1529:1533  bool */\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":1561:1571  msg.sender */\n      caller\n        /* \"contract/token/ERC20/CorssCToken.sol\":1581:1612  _approve(owner, spender, value) */\n      tag_65\n        /* \"contract/token/ERC20/CorssCToken.sol\":1561:1571  msg.sender */\n      dup2\n        /* \"contract/token/ERC20/CorssCToken.sol\":1597:1604  spender */\n      dup6\n        /* \"contract/token/ERC20/CorssCToken.sol\":1606:1611  value */\n      dup6\n        /* \"contract/token/ERC20/CorssCToken.sol\":1581:1589  _approve */\n      tag_66\n        /* \"contract/token/ERC20/CorssCToken.sol\":1581:1612  _approve(owner, spender, value) */\n      jump\t// in\n    tag_65:\n        /* \"contract/token/ERC20/CorssCToken.sol\":1629:1633  true */\n      0x01\n        /* \"contract/token/ERC20/CorssCToken.sol\":1622:1633  return true */\n      swap2\n      pop\n      pop\n        /* \"contract/token/ERC20/CorssCToken.sol\":1447:1640  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_64:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract/token/ERC20/CorssCToken.sol\":1646:1897  function transferFrom(address from, address to, uint256 value) public virtual override returns (bool) {... */\n    tag_31:\n        /* \"contract/token/ERC20/CorssCToken.sol\":1742:1746  bool */\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":1776:1786  msg.sender */\n      caller\n        /* \"contract/token/ERC20/CorssCToken.sol\":1796:1833  _spendAllowance(from, spender, value) */\n      tag_69\n        /* \"contract/token/ERC20/CorssCToken.sol\":1812:1816  from */\n      dup6\n        /* \"contract/token/ERC20/CorssCToken.sol\":1776:1786  msg.sender */\n      dup3\n        /* \"contract/token/ERC20/CorssCToken.sol\":1827:1832  value */\n      dup6\n        /* \"contract/token/ERC20/CorssCToken.sol\":1796:1811  _spendAllowance */\n      tag_70\n        /* \"contract/token/ERC20/CorssCToken.sol\":1796:1833  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_69:\n        /* \"contract/token/ERC20/CorssCToken.sol\":1843:1869  _transfer(from, to, value) */\n      tag_71\n        /* \"contract/token/ERC20/CorssCToken.sol\":1853:1857  from */\n      dup6\n        /* \"contract/token/ERC20/CorssCToken.sol\":1859:1861  to */\n      dup6\n        /* \"contract/token/ERC20/CorssCToken.sol\":1863:1868  value */\n      dup6\n        /* \"contract/token/ERC20/CorssCToken.sol\":1843:1852  _transfer */\n      tag_72\n        /* \"contract/token/ERC20/CorssCToken.sol\":1843:1869  _transfer(from, to, value) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"contract/token/ERC20/CorssCToken.sol\":1886:1890  true */\n      0x01\n      swap5\n        /* \"contract/token/ERC20/CorssCToken.sol\":1646:1897  function transferFrom(address from, address to, uint256 value) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/token/ERC20/implementation.sol\":740:901  function mint(address account, uint256 value) public {... */\n    tag_39:\n        /* \"contract/token/ERC20/implementation.sol\":873:894  _mint(account, value) */\n      tag_75\n        /* \"contract/token/ERC20/implementation.sol\":879:886  account */\n      dup3\n        /* \"contract/token/ERC20/implementation.sol\":888:893  value */\n      dup3\n        /* \"contract/token/ERC20/implementation.sol\":873:878  _mint */\n      tag_76\n        /* \"contract/token/ERC20/implementation.sol\":873:894  _mint(account, value) */\n      jump\t// in\n    tag_75:\n        /* \"contract/token/ERC20/implementation.sol\":740:901  function mint(address account, uint256 value) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract/token/ERC20/CorssCToken.sol\":843:945  function symbol() public view virtual override returns (string memory) {... */\n    tag_46:\n        /* \"contract/token/ERC20/CorssCToken.sol\":899:912  string memory */\n      0x60\n        /* \"contract/token/ERC20/CorssCToken.sol\":931:938  _symbol */\n      0x04\n        /* \"contract/token/ERC20/CorssCToken.sol\":924:938  return _symbol */\n      dup1\n      sload\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n        /* \"contract/token/ERC20/CorssCToken.sol\":1904:2089  function transfer(address to, uint256 value) public virtual override returns (bool) {... */\n    tag_50:\n        /* \"contract/token/ERC20/CorssCToken.sol\":1982:1986  bool */\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":2014:2024  msg.sender */\n      caller\n        /* \"contract/token/ERC20/CorssCToken.sol\":2034:2061  _transfer(owner, to, value) */\n      tag_65\n        /* \"contract/token/ERC20/CorssCToken.sol\":2014:2024  msg.sender */\n      dup2\n        /* \"contract/token/ERC20/CorssCToken.sol\":2051:2053  to */\n      dup6\n        /* \"contract/token/ERC20/CorssCToken.sol\":2055:2060  value */\n      dup6\n        /* \"contract/token/ERC20/CorssCToken.sol\":2034:2043  _transfer */\n      tag_72\n        /* \"contract/token/ERC20/CorssCToken.sol\":2034:2061  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contract/token/ERC20/CorssCToken.sol\":3127:3255  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_66:\n        /* \"contract/token/ERC20/CorssCToken.sol\":3211:3248  _approve(owner, spender, value, true) */\n      tag_88\n        /* \"contract/token/ERC20/CorssCToken.sol\":3220:3225  owner */\n      dup4\n        /* \"contract/token/ERC20/CorssCToken.sol\":3227:3234  spender */\n      dup4\n        /* \"contract/token/ERC20/CorssCToken.sol\":3236:3241  value */\n      dup4\n        /* \"contract/token/ERC20/CorssCToken.sol\":3243:3247  true */\n      0x01\n        /* \"contract/token/ERC20/CorssCToken.sol\":3211:3219  _approve */\n      tag_89\n        /* \"contract/token/ERC20/CorssCToken.sol\":3211:3248  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_88:\n        /* \"contract/token/ERC20/CorssCToken.sol\":3127:3255  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/token/ERC20/CorssCToken.sol\":3699:4176  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":1407:1425  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":3798:3822  uint256 currentAllowance */\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":1407:1425  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contract/token/ERC20/CorssCToken.sol\":1407:1418  _allowances */\n      0x01\n        /* \"contract/token/ERC20/CorssCToken.sol\":1407:1425  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contract/token/ERC20/CorssCToken.sol\":1407:1434  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"contract/token/ERC20/CorssCToken.sol\":3864:3901  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"contract/token/ERC20/CorssCToken.sol\":3860:4170  if (currentAllowance != type(uint256).max) {... */\n      tag_96\n      jumpi\n        /* \"contract/token/ERC20/CorssCToken.sol\":3940:3945  value */\n      dup2\n        /* \"contract/token/ERC20/CorssCToken.sol\":3921:3937  currentAllowance */\n      dup2\n        /* \"contract/token/ERC20/CorssCToken.sol\":3921:3945  currentAllowance < value */\n      lt\n        /* \"contract/token/ERC20/CorssCToken.sol\":3917:4047  if (currentAllowance < value) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"contract/token/ERC20/CorssCToken.sol\":3972:4032  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3032:3064   */\n      dup5\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":3972:4032  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3014:3065   */\n      mstore\n        /* \"#utility.yul\":3081:3099   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3074:3108   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3124:3142   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3117:3151   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2987:3005   */\n      0x64\n      add\n        /* \"contract/token/ERC20/CorssCToken.sol\":3972:4032  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/token/ERC20/CorssCToken.sol\":3917:4047  if (currentAllowance < value) {... */\n    tag_93:\n        /* \"contract/token/ERC20/CorssCToken.sol\":4088:4145  _approve(owner, spender, currentAllowance - value, false) */\n      tag_96\n        /* \"contract/token/ERC20/CorssCToken.sol\":4097:4102  owner */\n      dup5\n        /* \"contract/token/ERC20/CorssCToken.sol\":4104:4111  spender */\n      dup5\n        /* \"contract/token/ERC20/CorssCToken.sol\":4132:4137  value */\n      dup5\n        /* \"contract/token/ERC20/CorssCToken.sol\":4113:4129  currentAllowance */\n      dup5\n        /* \"contract/token/ERC20/CorssCToken.sol\":4113:4137  currentAllowance - value */\n      sub\n        /* \"contract/token/ERC20/CorssCToken.sol\":4139:4144  false */\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":4088:4096  _approve */\n      tag_89\n        /* \"contract/token/ERC20/CorssCToken.sol\":4088:4145  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_96:\n        /* \"contract/token/ERC20/CorssCToken.sol\":3788:4176  {... */\n      pop\n        /* \"contract/token/ERC20/CorssCToken.sol\":3699:4176  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/token/ERC20/CorssCToken.sol\":2098:2407  function _transfer(address from, address to, uint256 value) internal virtual {... */\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":2189:2207  from == address(0) */\n      dup4\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":2185:2271  if (from == address(0)) {... */\n      tag_98\n      jumpi\n        /* \"contract/token/ERC20/CorssCToken.sol\":2230:2260  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"contract/token/ERC20/CorssCToken.sol\":2257:2258  0 */\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":2230:2260  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3308:3359   */\n      mstore\n        /* \"#utility.yul\":3281:3299   */\n      0x24\n      add\n        /* \"contract/token/ERC20/CorssCToken.sol\":2230:2260  ERC20InvalidSender(address(0)) */\n      tag_94\n        /* \"#utility.yul\":3162:3365   */\n      jump\n        /* \"contract/token/ERC20/CorssCToken.sol\":2185:2271  if (from == address(0)) {... */\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":2284:2300  to == address(0) */\n      dup3\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":2280:2366  if (to == address(0)) {... */\n      tag_101\n      jumpi\n        /* \"contract/token/ERC20/CorssCToken.sol\":2323:2355  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"contract/token/ERC20/CorssCToken.sol\":2352:2353  0 */\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":2323:2355  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3308:3359   */\n      mstore\n        /* \"#utility.yul\":3281:3299   */\n      0x24\n      add\n        /* \"contract/token/ERC20/CorssCToken.sol\":2323:2355  ERC20InvalidReceiver(address(0)) */\n      tag_94\n        /* \"#utility.yul\":3162:3365   */\n      jump\n        /* \"contract/token/ERC20/CorssCToken.sol\":2280:2366  if (to == address(0)) {... */\n    tag_101:\n        /* \"contract/token/ERC20/CorssCToken.sol\":2376:2400  _update(from, to, value) */\n      tag_88\n        /* \"contract/token/ERC20/CorssCToken.sol\":2384:2388  from */\n      dup4\n        /* \"contract/token/ERC20/CorssCToken.sol\":2390:2392  to */\n      dup4\n        /* \"contract/token/ERC20/CorssCToken.sol\":2394:2399  value */\n      dup4\n        /* \"contract/token/ERC20/CorssCToken.sol\":2376:2383  _update */\n      tag_104\n        /* \"contract/token/ERC20/CorssCToken.sol\":2376:2400  _update(from, to, value) */\n      jump\t// in\n        /* \"contract/token/ERC20/implementation.sol\":937:1145  function _mint(address account, uint256 value) internal {... */\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/implementation.sol\":1007:1028  account == address(0) */\n      dup3\n      and\n        /* \"contract/token/ERC20/implementation.sol\":1003:1094  if (account == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"contract/token/ERC20/implementation.sol\":1051:1083  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"contract/token/ERC20/implementation.sol\":1080:1081  0 */\n      0x00\n        /* \"contract/token/ERC20/implementation.sol\":1051:1083  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3308:3359   */\n      mstore\n        /* \"#utility.yul\":3281:3299   */\n      0x24\n      add\n        /* \"contract/token/ERC20/implementation.sol\":1051:1083  ERC20InvalidReceiver(address(0)) */\n      tag_94\n        /* \"#utility.yul\":3162:3365   */\n      jump\n        /* \"contract/token/ERC20/implementation.sol\":1003:1094  if (account == address(0)) {... */\n    tag_106:\n        /* \"contract/token/ERC20/implementation.sol\":1103:1138  _update(address(0), account, value) */\n      tag_75\n        /* \"contract/token/ERC20/implementation.sol\":1119:1120  0 */\n      0x00\n        /* \"contract/token/ERC20/implementation.sol\":1123:1130  account */\n      dup4\n        /* \"contract/token/ERC20/implementation.sol\":1132:1137  value */\n      dup4\n        /* \"contract/token/ERC20/implementation.sol\":1103:1110  _update */\n      tag_104\n        /* \"contract/token/ERC20/implementation.sol\":1103:1138  _update(address(0), account, value) */\n      jump\t// in\n        /* \"contract/token/ERC20/CorssCToken.sol\":3261:3693  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":3373:3392  owner == address(0) */\n      dup5\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":3369:3458  if (owner == address(0)) {... */\n      tag_110\n      jumpi\n        /* \"contract/token/ERC20/CorssCToken.sol\":3415:3447  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"contract/token/ERC20/CorssCToken.sol\":3444:3445  0 */\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":3415:3447  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3308:3359   */\n      mstore\n        /* \"#utility.yul\":3281:3299   */\n      0x24\n      add\n        /* \"contract/token/ERC20/CorssCToken.sol\":3415:3447  ERC20InvalidApprover(address(0)) */\n      tag_94\n        /* \"#utility.yul\":3162:3365   */\n      jump\n        /* \"contract/token/ERC20/CorssCToken.sol\":3369:3458  if (owner == address(0)) {... */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":3471:3492  spender == address(0) */\n      dup4\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":3467:3557  if (spender == address(0)) {... */\n      tag_112\n      jumpi\n        /* \"contract/token/ERC20/CorssCToken.sol\":3515:3546  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"contract/token/ERC20/CorssCToken.sol\":3543:3544  0 */\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":3515:3546  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3308:3359   */\n      mstore\n        /* \"#utility.yul\":3281:3299   */\n      0x24\n      add\n        /* \"contract/token/ERC20/CorssCToken.sol\":3515:3546  ERC20InvalidSpender(address(0)) */\n      tag_94\n        /* \"#utility.yul\":3162:3365   */\n      jump\n        /* \"contract/token/ERC20/CorssCToken.sol\":3467:3557  if (spender == address(0)) {... */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":3566:3584  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contract/token/ERC20/CorssCToken.sol\":3566:3577  _allowances */\n      0x01\n        /* \"contract/token/ERC20/CorssCToken.sol\":3566:3584  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contract/token/ERC20/CorssCToken.sol\":3566:3593  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contract/token/ERC20/CorssCToken.sol\":3566:3601  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"contract/token/ERC20/CorssCToken.sol\":3611:3687  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_96\n      jumpi\n        /* \"contract/token/ERC20/CorssCToken.sol\":3661:3668  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":3645:3676  Approval(owner, spender, value) */\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":3654:3659  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":3645:3676  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contract/token/ERC20/CorssCToken.sol\":3670:3675  value */\n      dup5\n        /* \"contract/token/ERC20/CorssCToken.sol\":3645:3676  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_115\n      swap2\n        /* \"#utility.yul\":1367:1392   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1355:1357   */\n      0x20\n        /* \"#utility.yul\":1340:1358   */\n      add\n      swap1\n        /* \"#utility.yul\":1221:1398   */\n      jump\n        /* \"contract/token/ERC20/CorssCToken.sol\":3645:3676  Approval(owner, spender, value) */\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract/token/ERC20/CorssCToken.sol\":3261:3693  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/token/ERC20/CorssCToken.sol\":2414:3120  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":2503:2521  from == address(0) */\n      dup4\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":2499:2858  if (from == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"contract/token/ERC20/CorssCToken.sol\":2553:2558  value */\n      dup1\n        /* \"contract/token/ERC20/CorssCToken.sol\":2537:2549  _totalSupply */\n      0x02\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":2537:2558  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contract/token/ERC20/CorssCToken.sol\":2499:2858  if (from == address(0)) {... */\n      tag_120\n      swap1\n      pop\n      jump\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":2611:2626  _balances[from] */\n      dup4\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":2589:2608  uint256 fromBalance */\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":2611:2626  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contract/token/ERC20/CorssCToken.sol\":2644:2663  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"contract/token/ERC20/CorssCToken.sol\":2640:2755  if (fromBalance < value) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contract/token/ERC20/CorssCToken.sol\":2690:2740  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3032:3064   */\n      dup6\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":2690:2740  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3014:3065   */\n      mstore\n        /* \"#utility.yul\":3081:3099   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3074:3108   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3124:3142   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3117:3151   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2987:3005   */\n      0x64\n      add\n        /* \"contract/token/ERC20/CorssCToken.sol\":2690:2740  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_94\n        /* \"#utility.yul\":2812:3157   */\n      jump\n        /* \"contract/token/ERC20/CorssCToken.sol\":2640:2755  if (fromBalance < value) {... */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":2796:2811  _balances[from] */\n      dup5\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":2796:2805  _balances */\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":2796:2811  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contract/token/ERC20/CorssCToken.sol\":2814:2833  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"contract/token/ERC20/CorssCToken.sol\":2796:2833  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"contract/token/ERC20/CorssCToken.sol\":2499:2858  if (from == address(0)) {... */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":2872:2888  to == address(0) */\n      dup3\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":2868:3073  if (to == address(0)) {... */\n      tag_123\n      jumpi\n        /* \"contract/token/ERC20/CorssCToken.sol\":2932:2944  _totalSupply */\n      0x02\n        /* \"contract/token/ERC20/CorssCToken.sol\":2932:2953  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contract/token/ERC20/CorssCToken.sol\":2868:3073  if (to == address(0)) {... */\n      jump(tag_124)\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":3026:3039  _balances[to] */\n      dup3\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":3026:3035  _balances */\n      0x00\n        /* \"contract/token/ERC20/CorssCToken.sol\":3026:3039  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contract/token/ERC20/CorssCToken.sol\":3026:3048  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"contract/token/ERC20/CorssCToken.sol\":2868:3073  if (to == address(0)) {... */\n    tag_124:\n        /* \"contract/token/ERC20/CorssCToken.sol\":3103:3105  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":3088:3113  Transfer(from, to, value) */\n      and\n        /* \"contract/token/ERC20/CorssCToken.sol\":3097:3101  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/token/ERC20/CorssCToken.sol\":3088:3113  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contract/token/ERC20/CorssCToken.sol\":3107:3112  value */\n      dup4\n        /* \"contract/token/ERC20/CorssCToken.sol\":3088:3113  Transfer(from, to, value) */\n      mload(0x40)\n      tag_125\n      swap2\n        /* \"#utility.yul\":1367:1392   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1355:1357   */\n      0x20\n        /* \"#utility.yul\":1340:1358   */\n      add\n      swap1\n        /* \"#utility.yul\":1221:1398   */\n      jump\n        /* \"contract/token/ERC20/CorssCToken.sol\":3088:3113  Transfer(from, to, value) */\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract/token/ERC20/CorssCToken.sol\":2414:3120  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:541   */\n    tag_17:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":273:413   */\n    tag_129:\n        /* \"#utility.yul\":287:293   */\n      dup2\n        /* \"#utility.yul\":284:285   */\n      dup2\n        /* \"#utility.yul\":281:294   */\n      lt\n        /* \"#utility.yul\":273:413   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":398:400   */\n      0x20\n        /* \"#utility.yul\":382:396   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":378:401   */\n      dup2\n      add\n        /* \"#utility.yul\":372:402   */\n      mload\n        /* \"#utility.yul\":367:369   */\n      0x40\n        /* \"#utility.yul\":348:365   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":344:370   */\n      add\n        /* \"#utility.yul\":337:403   */\n      mstore\n        /* \"#utility.yul\":302:312   */\n      add\n        /* \"#utility.yul\":273:413   */\n      jump(tag_129)\n    tag_131:\n        /* \"#utility.yul\":277:280   */\n      pop\n        /* \"#utility.yul\":462:463   */\n      0x00\n        /* \"#utility.yul\":457:459   */\n      0x40\n        /* \"#utility.yul\":448:454   */\n      dup3\n        /* \"#utility.yul\":437:446   */\n      dup6\n        /* \"#utility.yul\":433:455   */\n      add\n        /* \"#utility.yul\":429:460   */\n      add\n        /* \"#utility.yul\":422:464   */\n      mstore\n        /* \"#utility.yul\":532:534   */\n      0x40\n        /* \"#utility.yul\":525:527   */\n      0x1f\n        /* \"#utility.yul\":521:528   */\n      not\n        /* \"#utility.yul\":516:518   */\n      0x1f\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":504:519   */\n      add\n        /* \"#utility.yul\":500:529   */\n      and\n        /* \"#utility.yul\":489:498   */\n      dup5\n        /* \"#utility.yul\":485:530   */\n      add\n        /* \"#utility.yul\":481:535   */\n      add\n        /* \"#utility.yul\":473:535   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":546:719   */\n    tag_126:\n        /* \"#utility.yul\":614:634   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":663:694   */\n      dup2\n      and\n        /* \"#utility.yul\":653:695   */\n      dup2\n      eq\n        /* \"#utility.yul\":643:713   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":709:710   */\n      0x00\n        /* \"#utility.yul\":706:707   */\n      dup1\n        /* \"#utility.yul\":699:711   */\n      revert\n        /* \"#utility.yul\":643:713   */\n    tag_133:\n        /* \"#utility.yul\":546:719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":724:1024   */\n    tag_20:\n        /* \"#utility.yul\":792:798   */\n      0x00\n        /* \"#utility.yul\":800:806   */\n      dup1\n        /* \"#utility.yul\":853:855   */\n      0x40\n        /* \"#utility.yul\":841:850   */\n      dup4\n        /* \"#utility.yul\":832:839   */\n      dup6\n        /* \"#utility.yul\":828:851   */\n      sub\n        /* \"#utility.yul\":824:856   */\n      slt\n        /* \"#utility.yul\":821:873   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":869:870   */\n      0x00\n        /* \"#utility.yul\":866:867   */\n      dup1\n        /* \"#utility.yul\":859:871   */\n      revert\n        /* \"#utility.yul\":821:873   */\n    tag_135:\n        /* \"#utility.yul\":892:921   */\n      tag_136\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":892:921   */\n      tag_126\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":882:921   */\n      swap5\n        /* \"#utility.yul\":990:992   */\n      0x20\n        /* \"#utility.yul\":975:993   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":962:994   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":724:1024   */\n      jump\t// out\n        /* \"#utility.yul\":1403:1777   */\n    tag_30:\n        /* \"#utility.yul\":1480:1486   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup1\n        /* \"#utility.yul\":1496:1502   */\n      0x00\n        /* \"#utility.yul\":1549:1551   */\n      0x60\n        /* \"#utility.yul\":1537:1546   */\n      dup5\n        /* \"#utility.yul\":1528:1535   */\n      dup7\n        /* \"#utility.yul\":1524:1547   */\n      sub\n        /* \"#utility.yul\":1520:1552   */\n      slt\n        /* \"#utility.yul\":1517:1569   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":1565:1566   */\n      0x00\n        /* \"#utility.yul\":1562:1563   */\n      dup1\n        /* \"#utility.yul\":1555:1567   */\n      revert\n        /* \"#utility.yul\":1517:1569   */\n    tag_140:\n        /* \"#utility.yul\":1588:1617   */\n      tag_141\n        /* \"#utility.yul\":1607:1616   */\n      dup5\n        /* \"#utility.yul\":1588:1617   */\n      tag_126\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1578:1617   */\n      swap3\n      pop\n        /* \"#utility.yul\":1636:1674   */\n      tag_142\n        /* \"#utility.yul\":1670:1672   */\n      0x20\n        /* \"#utility.yul\":1659:1668   */\n      dup6\n        /* \"#utility.yul\":1655:1673   */\n      add\n        /* \"#utility.yul\":1636:1674   */\n      tag_126\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1403:1777   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1626:1674   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1743:1745   */\n      0x40\n        /* \"#utility.yul\":1728:1746   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1715:1747   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1403:1777   */\n      jump\t// out\n        /* \"#utility.yul\":1971:2157   */\n    tag_42:\n        /* \"#utility.yul\":2030:2036   */\n      0x00\n        /* \"#utility.yul\":2083:2085   */\n      0x20\n        /* \"#utility.yul\":2071:2080   */\n      dup3\n        /* \"#utility.yul\":2062:2069   */\n      dup5\n        /* \"#utility.yul\":2058:2081   */\n      sub\n        /* \"#utility.yul\":2054:2086   */\n      slt\n        /* \"#utility.yul\":2051:2103   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":2099:2100   */\n      0x00\n        /* \"#utility.yul\":2096:2097   */\n      dup1\n        /* \"#utility.yul\":2089:2101   */\n      revert\n        /* \"#utility.yul\":2051:2103   */\n    tag_145:\n        /* \"#utility.yul\":2122:2151   */\n      tag_146\n        /* \"#utility.yul\":2141:2150   */\n      dup3\n        /* \"#utility.yul\":2122:2151   */\n      tag_126\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2112:2151   */\n      swap4\n        /* \"#utility.yul\":1971:2157   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2162:2422   */\n    tag_54:\n        /* \"#utility.yul\":2230:2236   */\n      0x00\n        /* \"#utility.yul\":2238:2244   */\n      dup1\n        /* \"#utility.yul\":2291:2293   */\n      0x40\n        /* \"#utility.yul\":2279:2288   */\n      dup4\n        /* \"#utility.yul\":2270:2277   */\n      dup6\n        /* \"#utility.yul\":2266:2289   */\n      sub\n        /* \"#utility.yul\":2262:2294   */\n      slt\n        /* \"#utility.yul\":2259:2311   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":2307:2308   */\n      0x00\n        /* \"#utility.yul\":2304:2305   */\n      dup1\n        /* \"#utility.yul\":2297:2309   */\n      revert\n        /* \"#utility.yul\":2259:2311   */\n    tag_148:\n        /* \"#utility.yul\":2330:2359   */\n      tag_149\n        /* \"#utility.yul\":2349:2358   */\n      dup4\n        /* \"#utility.yul\":2330:2359   */\n      tag_126\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2320:2359   */\n      swap2\n      pop\n        /* \"#utility.yul\":2378:2416   */\n      tag_150\n        /* \"#utility.yul\":2412:2414   */\n      0x20\n        /* \"#utility.yul\":2401:2410   */\n      dup5\n        /* \"#utility.yul\":2397:2415   */\n      add\n        /* \"#utility.yul\":2378:2416   */\n      tag_126\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2368:2416   */\n      swap1\n      pop\n        /* \"#utility.yul\":2162:2422   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2427:2807   */\n    tag_59:\n        /* \"#utility.yul\":2506:2507   */\n      0x01\n        /* \"#utility.yul\":2502:2514   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2549:2561   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2570:2631   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":2624:2628   */\n      0x7f\n        /* \"#utility.yul\":2616:2622   */\n      dup3\n        /* \"#utility.yul\":2612:2629   */\n      and\n        /* \"#utility.yul\":2602:2629   */\n      swap2\n      pop\n        /* \"#utility.yul\":2570:2631   */\n    tag_152:\n        /* \"#utility.yul\":2677:2679   */\n      0x20\n        /* \"#utility.yul\":2669:2675   */\n      dup3\n        /* \"#utility.yul\":2666:2680   */\n      lt\n        /* \"#utility.yul\":2646:2664   */\n      dup2\n        /* \"#utility.yul\":2643:2681   */\n      sub\n        /* \"#utility.yul\":2640:2801   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":2723:2733   */\n      0x4e487b71\n        /* \"#utility.yul\":2718:2721   */\n      0xe0\n        /* \"#utility.yul\":2714:2734   */\n      shl\n        /* \"#utility.yul\":2711:2712   */\n      0x00\n        /* \"#utility.yul\":2704:2735   */\n      mstore\n        /* \"#utility.yul\":2758:2762   */\n      0x22\n        /* \"#utility.yul\":2755:2756   */\n      0x04\n        /* \"#utility.yul\":2748:2763   */\n      mstore\n        /* \"#utility.yul\":2786:2790   */\n      0x24\n        /* \"#utility.yul\":2783:2784   */\n      0x00\n        /* \"#utility.yul\":2776:2791   */\n      revert\n        /* \"#utility.yul\":2640:2801   */\n    tag_153:\n      pop\n        /* \"#utility.yul\":2427:2807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3370:3592   */\n    tag_119:\n        /* \"#utility.yul\":3435:3444   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3456:3466   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3453:3586   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":3508:3518   */\n      0x4e487b71\n        /* \"#utility.yul\":3503:3506   */\n      0xe0\n        /* \"#utility.yul\":3499:3519   */\n      shl\n        /* \"#utility.yul\":3496:3497   */\n      0x00\n        /* \"#utility.yul\":3489:3520   */\n      mstore\n        /* \"#utility.yul\":3543:3547   */\n      0x11\n        /* \"#utility.yul\":3540:3541   */\n      0x04\n        /* \"#utility.yul\":3533:3548   */\n      mstore\n        /* \"#utility.yul\":3571:3575   */\n      0x24\n        /* \"#utility.yul\":3568:3569   */\n      0x00\n        /* \"#utility.yul\":3561:3576   */\n      revert\n\n    auxdata: 0xa2646970667358221220ab34bedbd060678663cbf940c6c389c5c714e65ded28079781f69830456fb3d464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_45": {
									"entryPoint": null,
									"id": 45,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_583": {
									"entryPoint": null,
									"id": 583,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_mint_628": {
									"entryPoint": 122,
									"id": 628,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_313": {
									"entryPoint": 185,
									"id": 313,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_bool_fromMemory": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5433:5",
										"nodeType": "YulBlock",
										"src": "0:5433:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:5",
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:5",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:5",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:5",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nativeSrc": "66:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nativeSrc": "56:31:5",
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nativeSrc": "56:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:5",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:5",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nativeSrc": "96:15:5",
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nativeSrc": "96:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:5",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nativeSrc": "120:15:5",
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nativeSrc": "120:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nativeSrc": "210:770:5",
													"nodeType": "YulBlock",
													"src": "210:770:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:5",
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:5",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:5",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nativeSrc": "261:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nativeSrc": "261:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:5",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nativeSrc": "234:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nativeSrc": "230:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nativeSrc": "223:35:5",
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nativeSrc": "220:55:5",
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nativeSrc": "284:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:5"
																},
																"nativeSrc": "298:13:5",
																"nodeType": "YulFunctionCall",
																"src": "298:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:5",
																	"nodeType": "YulTypedName",
																	"src": "288:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:5",
																"nodeType": "YulBlock",
																"src": "354:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:5"
																			},
																			"nativeSrc": "356:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:5"
																		},
																		"nativeSrc": "356:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:5",
																						"nodeType": "YulLiteral",
																						"src": "342:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:5",
																						"nodeType": "YulLiteral",
																						"src": "346:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:5"
																				},
																				"nativeSrc": "338:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:5",
																				"nodeType": "YulLiteral",
																				"src": "350:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:5"
																		},
																		"nativeSrc": "334:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:5"
																},
																"nativeSrc": "323:30:5",
																"nodeType": "YulFunctionCall",
																"src": "323:30:5"
															},
															"nativeSrc": "320:56:5",
															"nodeType": "YulIf",
															"src": "320:56:5"
														},
														{
															"nativeSrc": "385:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:5",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:5"
																},
																"nativeSrc": "399:9:5",
																"nodeType": "YulFunctionCall",
																"src": "399:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:5",
																	"nodeType": "YulTypedName",
																	"src": "389:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:5",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:5",
																										"nodeType": "YulLiteral",
																										"src": "471:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:5"
																								},
																								"nativeSrc": "459:17:5",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:5",
																										"nodeType": "YulLiteral",
																										"src": "482:2:5",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:5"
																								},
																								"nativeSrc": "478:7:5",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:5"
																						},
																						"nativeSrc": "455:31:5",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:5",
																						"nodeType": "YulLiteral",
																						"src": "488:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:5"
																				},
																				"nativeSrc": "451:40:5",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:5",
																						"nodeType": "YulLiteral",
																						"src": "497:2:5",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:5"
																				},
																				"nativeSrc": "493:7:5",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:5"
																		},
																		"nativeSrc": "447:54:5",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:5"
																},
																"nativeSrc": "435:67:5",
																"nodeType": "YulFunctionCall",
																"src": "435:67:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:5",
																	"nodeType": "YulTypedName",
																	"src": "421:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:5",
																"nodeType": "YulBlock",
																"src": "577:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:5"
																			},
																			"nativeSrc": "579:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:5"
																		},
																		"nativeSrc": "579:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:5",
																								"nodeType": "YulLiteral",
																								"src": "540:2:5",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:5",
																								"nodeType": "YulLiteral",
																								"src": "544:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:5"
																						},
																						"nativeSrc": "536:10:5",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:5",
																						"nodeType": "YulLiteral",
																						"src": "548:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:5"
																				},
																				"nativeSrc": "532:18:5",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:5"
																		},
																		"nativeSrc": "517:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:5"
																		},
																		"nativeSrc": "553:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:5"
																},
																"nativeSrc": "514:62:5",
																"nodeType": "YulFunctionCall",
																"src": "514:62:5"
															},
															"nativeSrc": "511:88:5",
															"nodeType": "YulIf",
															"src": "511:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:5",
																		"nodeType": "YulLiteral",
																		"src": "615:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:5"
																},
																"nativeSrc": "608:22:5",
																"nodeType": "YulFunctionCall",
																"src": "608:22:5"
															},
															"nativeSrc": "608:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:5"
																},
																"nativeSrc": "639:22:5",
																"nodeType": "YulFunctionCall",
																"src": "639:22:5"
															},
															"nativeSrc": "639:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:5"
														},
														{
															"body": {
																"nativeSrc": "713:16:5",
																"nodeType": "YulBlock",
																"src": "713:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:5",
																					"nodeType": "YulLiteral",
																					"src": "722:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:5",
																					"nodeType": "YulLiteral",
																					"src": "725:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:5"
																			},
																			"nativeSrc": "715:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:5"
																		},
																		"nativeSrc": "715:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:5"
																				},
																				"nativeSrc": "680:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:5",
																				"nodeType": "YulLiteral",
																				"src": "701:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:5"
																		},
																		"nativeSrc": "676:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:5"
																},
																"nativeSrc": "673:39:5",
																"nodeType": "YulFunctionCall",
																"src": "673:39:5"
															},
															"nativeSrc": "670:59:5",
															"nodeType": "YulIf",
															"src": "670:59:5"
														},
														{
															"nativeSrc": "738:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "738:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "747:1:5",
																"nodeType": "YulLiteral",
																"src": "747:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "742:1:5",
																	"nodeType": "YulTypedName",
																	"src": "742:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "809:91:5",
																"nodeType": "YulBlock",
																"src": "809:91:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "838:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "838:6:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "846:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "846:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "834:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "834:3:5"
																							},
																							"nativeSrc": "834:14:5",
																							"nodeType": "YulFunctionCall",
																							"src": "834:14:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "850:4:5",
																							"nodeType": "YulLiteral",
																							"src": "850:4:5",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "830:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "830:3:5"
																					},
																					"nativeSrc": "830:25:5",
																					"nodeType": "YulFunctionCall",
																					"src": "830:25:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "871:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "871:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "879:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "879:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "867:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "867:3:5"
																									},
																									"nativeSrc": "867:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "867:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "883:4:5",
																									"nodeType": "YulLiteral",
																									"src": "883:4:5",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "863:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "863:3:5"
																							},
																							"nativeSrc": "863:25:5",
																							"nodeType": "YulFunctionCall",
																							"src": "863:25:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "857:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:5"
																					},
																					"nativeSrc": "857:32:5",
																					"nodeType": "YulFunctionCall",
																					"src": "857:32:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "823:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:5"
																			},
																			"nativeSrc": "823:67:5",
																			"nodeType": "YulFunctionCall",
																			"src": "823:67:5"
																		},
																		"nativeSrc": "823:67:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "823:67:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "768:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "768:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "771:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "771:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "765:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "765:2:5"
																},
																"nativeSrc": "765:13:5",
																"nodeType": "YulFunctionCall",
																"src": "765:13:5"
															},
															"nativeSrc": "757:143:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "779:21:5",
																"nodeType": "YulBlock",
																"src": "779:21:5",
																"statements": [
																	{
																		"nativeSrc": "781:17:5",
																		"nodeType": "YulAssignment",
																		"src": "781:17:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "790:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "790:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "793:4:5",
																					"nodeType": "YulLiteral",
																					"src": "793:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "786:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "786:3:5"
																			},
																			"nativeSrc": "786:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "786:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "781:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "781:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "761:3:5",
																"nodeType": "YulBlock",
																"src": "761:3:5",
																"statements": []
															},
															"src": "757:143:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "924:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "924:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "932:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "932:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "920:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:5"
																				},
																				"nativeSrc": "920:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "920:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "941:4:5",
																				"nodeType": "YulLiteral",
																				"src": "941:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "916:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:5"
																		},
																		"nativeSrc": "916:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "916:30:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:1:5",
																		"nodeType": "YulLiteral",
																		"src": "948:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "909:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:5"
																},
																"nativeSrc": "909:41:5",
																"nodeType": "YulFunctionCall",
																"src": "909:41:5"
															},
															"nativeSrc": "909:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "909:41:5"
														},
														{
															"nativeSrc": "959:15:5",
															"nodeType": "YulAssignment",
															"src": "959:15:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "968:6:5",
																"nodeType": "YulIdentifier",
																"src": "968:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "959:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:834:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:5",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:5",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:5",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:834:5"
											},
											{
												"body": {
													"nativeSrc": "1151:804:5",
													"nodeType": "YulBlock",
													"src": "1151:804:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1198:16:5",
																"nodeType": "YulBlock",
																"src": "1198:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1207:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1207:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1210:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1210:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1200:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1200:6:5"
																			},
																			"nativeSrc": "1200:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1200:12:5"
																		},
																		"nativeSrc": "1200:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1200:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1172:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1172:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1181:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1181:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1168:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1168:3:5"
																		},
																		"nativeSrc": "1168:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1168:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1193:3:5",
																		"nodeType": "YulLiteral",
																		"src": "1193:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1164:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1164:3:5"
																},
																"nativeSrc": "1164:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1164:33:5"
															},
															"nativeSrc": "1161:53:5",
															"nodeType": "YulIf",
															"src": "1161:53:5"
														},
														{
															"nativeSrc": "1223:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1223:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1243:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1243:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1237:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1237:5:5"
																},
																"nativeSrc": "1237:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1237:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1227:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1227:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1296:16:5",
																"nodeType": "YulBlock",
																"src": "1296:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1305:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1305:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1308:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1308:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1298:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1298:6:5"
																			},
																			"nativeSrc": "1298:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1298:12:5"
																		},
																		"nativeSrc": "1298:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1298:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1268:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1268:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1284:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1284:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1288:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1288:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1280:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1280:3:5"
																				},
																				"nativeSrc": "1280:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1280:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1292:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1292:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1276:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:5"
																		},
																		"nativeSrc": "1276:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1265:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1265:2:5"
																},
																"nativeSrc": "1265:30:5",
																"nodeType": "YulFunctionCall",
																"src": "1265:30:5"
															},
															"nativeSrc": "1262:50:5",
															"nodeType": "YulIf",
															"src": "1262:50:5"
														},
														{
															"nativeSrc": "1321:71:5",
															"nodeType": "YulAssignment",
															"src": "1321:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1364:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1364:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1375:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1375:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1360:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1360:3:5"
																		},
																		"nativeSrc": "1360:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1360:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1384:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1384:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1331:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1331:28:5"
																},
																"nativeSrc": "1331:61:5",
																"nodeType": "YulFunctionCall",
																"src": "1331:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1321:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1321:6:5"
																}
															]
														},
														{
															"nativeSrc": "1401:41:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1401:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1427:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1427:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1438:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1438:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1423:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1423:3:5"
																		},
																		"nativeSrc": "1423:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1423:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1417:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1417:5:5"
																},
																"nativeSrc": "1417:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1417:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1405:8:5",
																	"nodeType": "YulTypedName",
																	"src": "1405:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1487:16:5",
																"nodeType": "YulBlock",
																"src": "1487:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1496:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1496:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1499:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1499:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1489:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1489:6:5"
																			},
																			"nativeSrc": "1489:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1489:12:5"
																		},
																		"nativeSrc": "1489:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1489:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1457:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "1457:8:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1475:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1475:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1479:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1479:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1471:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1471:3:5"
																				},
																				"nativeSrc": "1471:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1471:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1483:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1483:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1467:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1467:3:5"
																		},
																		"nativeSrc": "1467:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1467:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1454:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1454:2:5"
																},
																"nativeSrc": "1454:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1454:32:5"
															},
															"nativeSrc": "1451:52:5",
															"nodeType": "YulIf",
															"src": "1451:52:5"
														},
														{
															"nativeSrc": "1512:73:5",
															"nodeType": "YulAssignment",
															"src": "1512:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1555:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1555:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1566:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "1566:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1551:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1551:3:5"
																		},
																		"nativeSrc": "1551:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1551:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1577:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1577:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1522:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1522:28:5"
																},
																"nativeSrc": "1522:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1522:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1512:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1512:6:5"
																}
															]
														},
														{
															"nativeSrc": "1594:35:5",
															"nodeType": "YulAssignment",
															"src": "1594:35:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1614:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1614:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1625:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1625:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1610:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1610:3:5"
																		},
																		"nativeSrc": "1610:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1610:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1604:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1604:5:5"
																},
																"nativeSrc": "1604:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1604:25:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1594:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1594:6:5"
																}
															]
														},
														{
															"nativeSrc": "1638:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1638:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1661:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1672:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1672:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1657:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:5"
																		},
																		"nativeSrc": "1657:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1651:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1651:5:5"
																},
																"nativeSrc": "1651:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1651:25:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1642:5:5",
																	"nodeType": "YulTypedName",
																	"src": "1642:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1739:16:5",
																"nodeType": "YulBlock",
																"src": "1739:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1748:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1748:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1751:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1751:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1741:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1741:6:5"
																			},
																			"nativeSrc": "1741:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1741:12:5"
																		},
																		"nativeSrc": "1741:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1741:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1698:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1698:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1709:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1709:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1724:3:5",
																										"nodeType": "YulLiteral",
																										"src": "1724:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1729:1:5",
																										"nodeType": "YulLiteral",
																										"src": "1729:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1720:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1720:3:5"
																								},
																								"nativeSrc": "1720:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1720:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1733:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1733:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1716:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1716:3:5"
																						},
																						"nativeSrc": "1716:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1716:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1705:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1705:3:5"
																				},
																				"nativeSrc": "1705:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1705:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1695:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1695:2:5"
																		},
																		"nativeSrc": "1695:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1695:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1688:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1688:6:5"
																},
																"nativeSrc": "1688:50:5",
																"nodeType": "YulFunctionCall",
																"src": "1688:50:5"
															},
															"nativeSrc": "1685:70:5",
															"nodeType": "YulIf",
															"src": "1685:70:5"
														},
														{
															"nativeSrc": "1764:15:5",
															"nodeType": "YulAssignment",
															"src": "1764:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1774:5:5",
																"nodeType": "YulIdentifier",
																"src": "1774:5:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1764:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1764:6:5"
																}
															]
														},
														{
															"nativeSrc": "1788:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1788:16:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1803:1:5",
																"nodeType": "YulLiteral",
																"src": "1803:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1792:7:5",
																	"nodeType": "YulTypedName",
																	"src": "1792:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1813:37:5",
															"nodeType": "YulAssignment",
															"src": "1813:37:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1834:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1834:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:3:5",
																				"nodeType": "YulLiteral",
																				"src": "1845:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:5"
																		},
																		"nativeSrc": "1830:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:19:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1824:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1824:5:5"
																},
																"nativeSrc": "1824:26:5",
																"nodeType": "YulFunctionCall",
																"src": "1824:26:5"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1813:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1813:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1907:16:5",
																"nodeType": "YulBlock",
																"src": "1907:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1916:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1919:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1919:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1909:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1909:6:5"
																			},
																			"nativeSrc": "1909:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1909:12:5"
																		},
																		"nativeSrc": "1909:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1909:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "1872:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1872:7:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_1",
																								"nativeSrc": "1895:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "1895:7:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "1888:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "1888:6:5"
																						},
																						"nativeSrc": "1888:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1888:15:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1881:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1881:6:5"
																				},
																				"nativeSrc": "1881:23:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1881:23:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1869:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1869:2:5"
																		},
																		"nativeSrc": "1869:36:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1869:36:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1862:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1862:6:5"
																},
																"nativeSrc": "1862:44:5",
																"nodeType": "YulFunctionCall",
																"src": "1862:44:5"
															},
															"nativeSrc": "1859:64:5",
															"nodeType": "YulIf",
															"src": "1859:64:5"
														},
														{
															"nativeSrc": "1932:17:5",
															"nodeType": "YulAssignment",
															"src": "1932:17:5",
															"value": {
																"name": "value_1",
																"nativeSrc": "1942:7:5",
																"nodeType": "YulIdentifier",
																"src": "1942:7:5"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1932:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1932:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_bool_fromMemory",
												"nativeSrc": "985:970:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1085:9:5",
														"nodeType": "YulTypedName",
														"src": "1085:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1096:7:5",
														"nodeType": "YulTypedName",
														"src": "1096:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1108:6:5",
														"nodeType": "YulTypedName",
														"src": "1108:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1116:6:5",
														"nodeType": "YulTypedName",
														"src": "1116:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1124:6:5",
														"nodeType": "YulTypedName",
														"src": "1124:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1132:6:5",
														"nodeType": "YulTypedName",
														"src": "1132:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1140:6:5",
														"nodeType": "YulTypedName",
														"src": "1140:6:5",
														"type": ""
													}
												],
												"src": "985:970:5"
											},
											{
												"body": {
													"nativeSrc": "2015:325:5",
													"nodeType": "YulBlock",
													"src": "2015:325:5",
													"statements": [
														{
															"nativeSrc": "2025:22:5",
															"nodeType": "YulAssignment",
															"src": "2025:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2039:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2039:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2042:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2042:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2035:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2035:3:5"
																},
																"nativeSrc": "2035:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2035:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2025:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2025:6:5"
																}
															]
														},
														{
															"nativeSrc": "2056:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2056:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2086:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2086:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2092:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2092:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2082:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2082:3:5"
																},
																"nativeSrc": "2082:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2082:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2060:18:5",
																	"nodeType": "YulTypedName",
																	"src": "2060:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2133:31:5",
																"nodeType": "YulBlock",
																"src": "2133:31:5",
																"statements": [
																	{
																		"nativeSrc": "2135:27:5",
																		"nodeType": "YulAssignment",
																		"src": "2135:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2149:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2149:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2157:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2157:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2145:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2145:3:5"
																			},
																			"nativeSrc": "2145:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2145:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2135:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2135:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2113:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2113:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2106:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2106:6:5"
																},
																"nativeSrc": "2106:26:5",
																"nodeType": "YulFunctionCall",
																"src": "2106:26:5"
															},
															"nativeSrc": "2103:61:5",
															"nodeType": "YulIf",
															"src": "2103:61:5"
														},
														{
															"body": {
																"nativeSrc": "2223:111:5",
																"nodeType": "YulBlock",
																"src": "2223:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2244:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2244:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2251:3:5",
																							"nodeType": "YulLiteral",
																							"src": "2251:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2256:10:5",
																							"nodeType": "YulLiteral",
																							"src": "2256:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2247:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2247:3:5"
																					},
																					"nativeSrc": "2247:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2247:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2237:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2237:6:5"
																			},
																			"nativeSrc": "2237:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2237:31:5"
																		},
																		"nativeSrc": "2237:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2237:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2288:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2288:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2291:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2291:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2281:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2281:6:5"
																			},
																			"nativeSrc": "2281:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2281:15:5"
																		},
																		"nativeSrc": "2281:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2281:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2316:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2316:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2319:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2319:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2309:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2309:6:5"
																			},
																			"nativeSrc": "2309:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2309:15:5"
																		},
																		"nativeSrc": "2309:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2309:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2179:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2179:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2202:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2202:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2210:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2210:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2199:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2199:2:5"
																		},
																		"nativeSrc": "2199:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2199:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2176:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2176:2:5"
																},
																"nativeSrc": "2176:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2176:38:5"
															},
															"nativeSrc": "2173:161:5",
															"nodeType": "YulIf",
															"src": "2173:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1960:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1995:4:5",
														"nodeType": "YulTypedName",
														"src": "1995:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2004:6:5",
														"nodeType": "YulTypedName",
														"src": "2004:6:5",
														"type": ""
													}
												],
												"src": "1960:380:5"
											},
											{
												"body": {
													"nativeSrc": "2401:65:5",
													"nodeType": "YulBlock",
													"src": "2401:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2418:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2418:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2421:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2421:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2411:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2411:6:5"
																},
																"nativeSrc": "2411:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2411:14:5"
															},
															"nativeSrc": "2411:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "2411:14:5"
														},
														{
															"nativeSrc": "2434:26:5",
															"nodeType": "YulAssignment",
															"src": "2434:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2452:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2452:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2455:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2455:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2442:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2442:9:5"
																},
																"nativeSrc": "2442:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2442:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2434:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2434:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2345:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2384:3:5",
														"nodeType": "YulTypedName",
														"src": "2384:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2392:4:5",
														"nodeType": "YulTypedName",
														"src": "2392:4:5",
														"type": ""
													}
												],
												"src": "2345:121:5"
											},
											{
												"body": {
													"nativeSrc": "2552:437:5",
													"nodeType": "YulBlock",
													"src": "2552:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2585:398:5",
																"nodeType": "YulBlock",
																"src": "2585:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2606:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2606:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2609:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2609:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2599:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2599:6:5"
																			},
																			"nativeSrc": "2599:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2599:16:5"
																		},
																		"nativeSrc": "2599:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2599:16:5"
																	},
																	{
																		"nativeSrc": "2628:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2628:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2650:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2650:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2653:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2653:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2640:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2640:9:5"
																			},
																			"nativeSrc": "2640:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2640:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2632:4:5",
																				"nodeType": "YulTypedName",
																				"src": "2632:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2671:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2671:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2694:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2694:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2704:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2704:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2711:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "2711:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2723:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2723:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2707:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2707:3:5"
																							},
																							"nativeSrc": "2707:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2707:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2700:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2700:3:5"
																					},
																					"nativeSrc": "2700:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2700:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2690:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2690:3:5"
																			},
																			"nativeSrc": "2690:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2690:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2675:11:5",
																				"nodeType": "YulTypedName",
																				"src": "2675:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2765:23:5",
																			"nodeType": "YulBlock",
																			"src": "2765:23:5",
																			"statements": [
																				{
																					"nativeSrc": "2767:19:5",
																					"nodeType": "YulAssignment",
																					"src": "2767:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2782:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2782:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2767:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "2767:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2747:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "2747:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2759:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2759:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2744:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2744:2:5"
																			},
																			"nativeSrc": "2744:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2744:20:5"
																		},
																		"nativeSrc": "2741:47:5",
																		"nodeType": "YulIf",
																		"src": "2741:47:5"
																	},
																	{
																		"nativeSrc": "2801:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2801:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2815:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2815:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2825:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2825:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2832:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2832:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2837:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2837:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2828:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2828:3:5"
																							},
																							"nativeSrc": "2828:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2828:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2821:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2821:3:5"
																					},
																					"nativeSrc": "2821:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2821:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2811:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2811:3:5"
																			},
																			"nativeSrc": "2811:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2811:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2805:2:5",
																				"nodeType": "YulTypedName",
																				"src": "2805:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2855:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2855:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2868:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "2868:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2859:5:5",
																				"nodeType": "YulTypedName",
																				"src": "2859:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2953:20:5",
																			"nodeType": "YulBlock",
																			"src": "2953:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2962:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2962:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2969:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2969:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2955:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2955:6:5"
																						},
																						"nativeSrc": "2955:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2955:16:5"
																					},
																					"nativeSrc": "2955:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "2955:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2903:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2903:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2910:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "2910:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2900:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2900:2:5"
																			},
																			"nativeSrc": "2900:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2900:13:5"
																		},
																		"nativeSrc": "2892:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2914:26:5",
																			"nodeType": "YulBlock",
																			"src": "2914:26:5",
																			"statements": [
																				{
																					"nativeSrc": "2916:22:5",
																					"nodeType": "YulAssignment",
																					"src": "2916:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2929:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2929:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2936:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2936:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2925:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2925:3:5"
																						},
																						"nativeSrc": "2925:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2925:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2916:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "2916:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2896:3:5",
																			"nodeType": "YulBlock",
																			"src": "2896:3:5",
																			"statements": []
																		},
																		"src": "2892:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2568:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2568:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2573:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2573:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2565:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2565:2:5"
																},
																"nativeSrc": "2565:11:5",
																"nodeType": "YulFunctionCall",
																"src": "2565:11:5"
															},
															"nativeSrc": "2562:421:5",
															"nodeType": "YulIf",
															"src": "2562:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2471:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2524:5:5",
														"nodeType": "YulTypedName",
														"src": "2524:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2531:3:5",
														"nodeType": "YulTypedName",
														"src": "2531:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2536:10:5",
														"nodeType": "YulTypedName",
														"src": "2536:10:5",
														"type": ""
													}
												],
												"src": "2471:518:5"
											},
											{
												"body": {
													"nativeSrc": "3079:81:5",
													"nodeType": "YulBlock",
													"src": "3079:81:5",
													"statements": [
														{
															"nativeSrc": "3089:65:5",
															"nodeType": "YulAssignment",
															"src": "3089:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3104:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "3104:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3122:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3122:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "3125:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3125:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3118:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3118:3:5"
																								},
																								"nativeSrc": "3118:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3118:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3135:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3135:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3131:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3131:3:5"
																								},
																								"nativeSrc": "3131:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3131:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "3114:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3114:3:5"
																						},
																						"nativeSrc": "3114:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3114:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3110:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3110:3:5"
																				},
																				"nativeSrc": "3110:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3110:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3100:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3100:3:5"
																		},
																		"nativeSrc": "3100:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3100:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3146:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3146:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3149:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3149:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3142:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3142:3:5"
																		},
																		"nativeSrc": "3142:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3142:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3097:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3097:2:5"
																},
																"nativeSrc": "3097:57:5",
																"nodeType": "YulFunctionCall",
																"src": "3097:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3089:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3089:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2994:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3056:4:5",
														"nodeType": "YulTypedName",
														"src": "3056:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3062:3:5",
														"nodeType": "YulTypedName",
														"src": "3062:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3070:4:5",
														"nodeType": "YulTypedName",
														"src": "3070:4:5",
														"type": ""
													}
												],
												"src": "2994:166:5"
											},
											{
												"body": {
													"nativeSrc": "3261:1203:5",
													"nodeType": "YulBlock",
													"src": "3261:1203:5",
													"statements": [
														{
															"nativeSrc": "3271:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3271:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3291:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3291:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3285:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3285:5:5"
																},
																"nativeSrc": "3285:10:5",
																"nodeType": "YulFunctionCall",
																"src": "3285:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3275:6:5",
																	"nodeType": "YulTypedName",
																	"src": "3275:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3338:22:5",
																"nodeType": "YulBlock",
																"src": "3338:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3340:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "3340:16:5"
																			},
																			"nativeSrc": "3340:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3340:18:5"
																		},
																		"nativeSrc": "3340:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3340:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3310:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3310:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3326:2:5",
																						"nodeType": "YulLiteral",
																						"src": "3326:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3330:1:5",
																						"nodeType": "YulLiteral",
																						"src": "3330:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3322:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3322:3:5"
																				},
																				"nativeSrc": "3322:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3322:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3334:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3334:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3318:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3318:3:5"
																		},
																		"nativeSrc": "3318:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3318:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3307:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3307:2:5"
																},
																"nativeSrc": "3307:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3307:30:5"
															},
															"nativeSrc": "3304:56:5",
															"nodeType": "YulIf",
															"src": "3304:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3413:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3413:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3451:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "3451:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3445:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "3445:5:5"
																				},
																				"nativeSrc": "3445:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3445:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3419:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "3419:25:5"
																		},
																		"nativeSrc": "3419:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3419:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3459:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3459:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3369:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3369:43:5"
																},
																"nativeSrc": "3369:97:5",
																"nodeType": "YulFunctionCall",
																"src": "3369:97:5"
															},
															"nativeSrc": "3369:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "3369:97:5"
														},
														{
															"nativeSrc": "3475:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3475:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3492:1:5",
																"nodeType": "YulLiteral",
																"src": "3492:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3479:9:5",
																	"nodeType": "YulTypedName",
																	"src": "3479:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3502:17:5",
															"nodeType": "YulAssignment",
															"src": "3502:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3515:4:5",
																"nodeType": "YulLiteral",
																"src": "3515:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3502:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3502:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3565:642:5",
																		"nodeType": "YulBlock",
																		"src": "3565:642:5",
																		"statements": [
																			{
																				"nativeSrc": "3579:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3579:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3598:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3598:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3610:2:5",
																									"nodeType": "YulLiteral",
																									"src": "3610:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3606:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3606:3:5"
																							},
																							"nativeSrc": "3606:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3606:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3594:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3594:3:5"
																					},
																					"nativeSrc": "3594:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3594:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3583:7:5",
																						"nodeType": "YulTypedName",
																						"src": "3583:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3627:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3627:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3671:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3671:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3641:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "3641:29:5"
																					},
																					"nativeSrc": "3641:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3641:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3631:6:5",
																						"nodeType": "YulTypedName",
																						"src": "3631:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3689:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3689:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3698:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3698:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3693:1:5",
																						"nodeType": "YulTypedName",
																						"src": "3693:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3769:165:5",
																					"nodeType": "YulBlock",
																					"src": "3769:165:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3794:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3794:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3812:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "3812:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3817:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "3817:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3808:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3808:3:5"
																												},
																												"nativeSrc": "3808:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3808:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3802:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "3802:5:5"
																										},
																										"nativeSrc": "3802:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3802:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3787:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3787:6:5"
																								},
																								"nativeSrc": "3787:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3787:42:5"
																							},
																							"nativeSrc": "3787:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3787:42:5"
																						},
																						{
																							"nativeSrc": "3846:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3846:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3860:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3860:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3868:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3868:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3856:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3856:3:5"
																								},
																								"nativeSrc": "3856:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3856:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3846:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3846:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3887:33:5",
																							"nodeType": "YulAssignment",
																							"src": "3887:33:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3904:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "3904:9:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3915:4:5",
																										"nodeType": "YulLiteral",
																										"src": "3915:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3900:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3900:3:5"
																								},
																								"nativeSrc": "3900:20:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3900:20:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3887:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "3887:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3723:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "3723:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3726:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3726:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3720:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3720:2:5"
																					},
																					"nativeSrc": "3720:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3720:14:5"
																				},
																				"nativeSrc": "3712:222:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3735:21:5",
																					"nodeType": "YulBlock",
																					"src": "3735:21:5",
																					"statements": [
																						{
																							"nativeSrc": "3737:17:5",
																							"nodeType": "YulAssignment",
																							"src": "3737:17:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3746:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "3746:1:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3749:4:5",
																										"nodeType": "YulLiteral",
																										"src": "3749:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3742:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3742:3:5"
																								},
																								"nativeSrc": "3742:12:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3742:12:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3737:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "3737:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3716:3:5",
																					"nodeType": "YulBlock",
																					"src": "3716:3:5",
																					"statements": []
																				},
																				"src": "3712:222:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "3982:166:5",
																					"nodeType": "YulBlock",
																					"src": "3982:166:5",
																					"statements": [
																						{
																							"nativeSrc": "4000:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4000:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4027:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "4027:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4032:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "4032:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4023:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "4023:3:5"
																										},
																										"nativeSrc": "4023:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "4023:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4017:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4017:5:5"
																								},
																								"nativeSrc": "4017:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4017:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4004:9:5",
																									"nodeType": "YulTypedName",
																									"src": "4004:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4067:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "4067:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4079:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "4079:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "4106:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "4106:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "4109:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "4109:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "4102:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "4102:3:5"
																																		},
																																		"nativeSrc": "4102:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "4102:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4118:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "4118:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "4098:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "4098:3:5"
																																},
																																"nativeSrc": "4098:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "4098:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4128:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "4128:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "4124:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "4124:3:5"
																																},
																																"nativeSrc": "4124:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "4124:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "4094:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "4094:3:5"
																														},
																														"nativeSrc": "4094:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "4094:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "4090:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "4090:3:5"
																												},
																												"nativeSrc": "4090:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "4090:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "4075:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "4075:3:5"
																										},
																										"nativeSrc": "4075:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "4075:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4060:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "4060:6:5"
																								},
																								"nativeSrc": "4060:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4060:74:5"
																							},
																							"nativeSrc": "4060:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "4060:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3953:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3953:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3962:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3962:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3950:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3950:2:5"
																					},
																					"nativeSrc": "3950:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3950:19:5"
																				},
																				"nativeSrc": "3947:201:5",
																				"nodeType": "YulIf",
																				"src": "3947:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4168:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "4168:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4182:1:5",
																											"nodeType": "YulLiteral",
																											"src": "4182:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4185:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "4185:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4178:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "4178:3:5"
																									},
																									"nativeSrc": "4178:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "4178:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4194:1:5",
																									"nodeType": "YulLiteral",
																									"src": "4194:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4174:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "4174:3:5"
																							},
																							"nativeSrc": "4174:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4174:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4161:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4161:6:5"
																					},
																					"nativeSrc": "4161:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4161:36:5"
																				},
																				"nativeSrc": "4161:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "4161:36:5"
																			}
																		]
																	},
																	"nativeSrc": "3558:649:5",
																	"nodeType": "YulCase",
																	"src": "3558:649:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3563:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3563:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4224:234:5",
																		"nodeType": "YulBlock",
																		"src": "4224:234:5",
																		"statements": [
																			{
																				"nativeSrc": "4238:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4238:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4251:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4251:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4242:5:5",
																						"nodeType": "YulTypedName",
																						"src": "4242:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4287:67:5",
																					"nodeType": "YulBlock",
																					"src": "4287:67:5",
																					"statements": [
																						{
																							"nativeSrc": "4305:35:5",
																							"nodeType": "YulAssignment",
																							"src": "4305:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4324:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "4324:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4329:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "4329:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4320:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "4320:3:5"
																										},
																										"nativeSrc": "4320:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "4320:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4314:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4314:5:5"
																								},
																								"nativeSrc": "4314:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4314:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4305:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4305:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4268:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "4268:6:5"
																				},
																				"nativeSrc": "4265:89:5",
																				"nodeType": "YulIf",
																				"src": "4265:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4374:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "4374:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4433:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4433:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4440:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "4440:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4380:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "4380:52:5"
																							},
																							"nativeSrc": "4380:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4380:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4367:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4367:6:5"
																					},
																					"nativeSrc": "4367:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4367:81:5"
																				},
																				"nativeSrc": "4367:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "4367:81:5"
																			}
																		]
																	},
																	"nativeSrc": "4216:242:5",
																	"nodeType": "YulCase",
																	"src": "4216:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3538:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3538:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3546:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3546:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3535:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3535:2:5"
																},
																"nativeSrc": "3535:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3535:14:5"
															},
															"nativeSrc": "3528:930:5",
															"nodeType": "YulSwitch",
															"src": "3528:930:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3165:1299:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3246:4:5",
														"nodeType": "YulTypedName",
														"src": "3246:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3252:3:5",
														"nodeType": "YulTypedName",
														"src": "3252:3:5",
														"type": ""
													}
												],
												"src": "3165:1299:5"
											},
											{
												"body": {
													"nativeSrc": "4570:102:5",
													"nodeType": "YulBlock",
													"src": "4570:102:5",
													"statements": [
														{
															"nativeSrc": "4580:26:5",
															"nodeType": "YulAssignment",
															"src": "4580:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4592:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4592:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4603:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4603:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4588:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4588:3:5"
																},
																"nativeSrc": "4588:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4588:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4580:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4580:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4622:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4622:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4637:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4637:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4653:3:5",
																								"nodeType": "YulLiteral",
																								"src": "4653:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4658:1:5",
																								"nodeType": "YulLiteral",
																								"src": "4658:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4649:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4649:3:5"
																						},
																						"nativeSrc": "4649:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4649:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4662:1:5",
																						"nodeType": "YulLiteral",
																						"src": "4662:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4645:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4645:3:5"
																				},
																				"nativeSrc": "4645:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4645:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4633:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4633:3:5"
																		},
																		"nativeSrc": "4633:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4633:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4615:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4615:6:5"
																},
																"nativeSrc": "4615:51:5",
																"nodeType": "YulFunctionCall",
																"src": "4615:51:5"
															},
															"nativeSrc": "4615:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "4615:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4469:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4539:9:5",
														"nodeType": "YulTypedName",
														"src": "4539:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4550:6:5",
														"nodeType": "YulTypedName",
														"src": "4550:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4561:4:5",
														"nodeType": "YulTypedName",
														"src": "4561:4:5",
														"type": ""
													}
												],
												"src": "4469:203:5"
											},
											{
												"body": {
													"nativeSrc": "4725:174:5",
													"nodeType": "YulBlock",
													"src": "4725:174:5",
													"statements": [
														{
															"nativeSrc": "4735:16:5",
															"nodeType": "YulAssignment",
															"src": "4735:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4746:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4746:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4749:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4749:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4742:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4742:3:5"
																},
																"nativeSrc": "4742:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4742:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4735:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4782:111:5",
																"nodeType": "YulBlock",
																"src": "4782:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4803:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4803:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4810:3:5",
																							"nodeType": "YulLiteral",
																							"src": "4810:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4815:10:5",
																							"nodeType": "YulLiteral",
																							"src": "4815:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4806:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4806:3:5"
																					},
																					"nativeSrc": "4806:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4806:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4796:6:5"
																			},
																			"nativeSrc": "4796:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4796:31:5"
																		},
																		"nativeSrc": "4796:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4796:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4847:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4847:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4850:4:5",
																					"nodeType": "YulLiteral",
																					"src": "4850:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4840:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4840:6:5"
																			},
																			"nativeSrc": "4840:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4840:15:5"
																		},
																		"nativeSrc": "4840:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4840:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4875:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4875:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4878:4:5",
																					"nodeType": "YulLiteral",
																					"src": "4878:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4868:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4868:6:5"
																			},
																			"nativeSrc": "4868:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4868:15:5"
																		},
																		"nativeSrc": "4868:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4868:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4766:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4766:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4769:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4769:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4763:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4763:2:5"
																},
																"nativeSrc": "4763:10:5",
																"nodeType": "YulFunctionCall",
																"src": "4763:10:5"
															},
															"nativeSrc": "4760:133:5",
															"nodeType": "YulIf",
															"src": "4760:133:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4677:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4708:1:5",
														"nodeType": "YulTypedName",
														"src": "4708:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4711:1:5",
														"nodeType": "YulTypedName",
														"src": "4711:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4717:3:5",
														"nodeType": "YulTypedName",
														"src": "4717:3:5",
														"type": ""
													}
												],
												"src": "4677:222:5"
											},
											{
												"body": {
													"nativeSrc": "5061:188:5",
													"nodeType": "YulBlock",
													"src": "5061:188:5",
													"statements": [
														{
															"nativeSrc": "5071:26:5",
															"nodeType": "YulAssignment",
															"src": "5071:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5083:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5083:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5094:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5094:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5079:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5079:3:5"
																},
																"nativeSrc": "5079:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5079:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5071:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5071:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5113:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5113:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5128:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5128:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5144:3:5",
																								"nodeType": "YulLiteral",
																								"src": "5144:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5149:1:5",
																								"nodeType": "YulLiteral",
																								"src": "5149:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5140:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "5140:3:5"
																						},
																						"nativeSrc": "5140:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "5140:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5153:1:5",
																						"nodeType": "YulLiteral",
																						"src": "5153:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5136:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5136:3:5"
																				},
																				"nativeSrc": "5136:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5136:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5124:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5124:3:5"
																		},
																		"nativeSrc": "5124:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5124:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5106:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5106:6:5"
																},
																"nativeSrc": "5106:51:5",
																"nodeType": "YulFunctionCall",
																"src": "5106:51:5"
															},
															"nativeSrc": "5106:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "5106:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5188:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5188:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5173:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5173:3:5"
																		},
																		"nativeSrc": "5173:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5173:18:5"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5193:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5193:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5166:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:5"
																},
																"nativeSrc": "5166:34:5",
																"nodeType": "YulFunctionCall",
																"src": "5166:34:5"
															},
															"nativeSrc": "5166:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "5166:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5220:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5220:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5231:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5231:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5216:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5216:3:5"
																		},
																		"nativeSrc": "5216:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5216:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5236:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5236:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5209:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5209:6:5"
																},
																"nativeSrc": "5209:34:5",
																"nodeType": "YulFunctionCall",
																"src": "5209:34:5"
															},
															"nativeSrc": "5209:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "5209:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4904:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5014:9:5",
														"nodeType": "YulTypedName",
														"src": "5014:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5025:6:5",
														"nodeType": "YulTypedName",
														"src": "5025:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5033:6:5",
														"nodeType": "YulTypedName",
														"src": "5033:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5041:6:5",
														"nodeType": "YulTypedName",
														"src": "5041:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5052:4:5",
														"nodeType": "YulTypedName",
														"src": "5052:4:5",
														"type": ""
													}
												],
												"src": "4904:345:5"
											},
											{
												"body": {
													"nativeSrc": "5355:76:5",
													"nodeType": "YulBlock",
													"src": "5355:76:5",
													"statements": [
														{
															"nativeSrc": "5365:26:5",
															"nodeType": "YulAssignment",
															"src": "5365:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5377:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5377:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5388:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5388:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5373:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:5"
																},
																"nativeSrc": "5373:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5373:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5365:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5365:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5407:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5407:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5418:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5418:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5400:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5400:6:5"
																},
																"nativeSrc": "5400:25:5",
																"nodeType": "YulFunctionCall",
																"src": "5400:25:5"
															},
															"nativeSrc": "5400:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "5400:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5254:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5324:9:5",
														"nodeType": "YulTypedName",
														"src": "5324:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5335:6:5",
														"nodeType": "YulTypedName",
														"src": "5335:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5346:4:5",
														"nodeType": "YulTypedName",
														"src": "5346:4:5",
														"type": ""
													}
												],
												"src": "5254:177:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        let value := mload(add(headStart, 96))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value3 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 128))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value4 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610c4c380380610c4c83398101604081905261002f9161029c565b8484600361003d83826103d3565b50600461004a82826103d3565b50505080151560010361006657610061828461007a565b610070565b610070308461007a565b50505050506104b8565b6001600160a01b0382166100a95760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6100b5600083836100b9565b5050565b6001600160a01b0383166100e45780600260008282546100d99190610491565b909155506101569050565b6001600160a01b038316600090815260208190526040902054818110156101375760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100a0565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661017257600280548290039055610191565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516101d691815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261020a57600080fd5b81516001600160401b03811115610223576102236101e3565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610251576102516101e3565b60405281815283820160200185101561026957600080fd5b60005b828110156102885760208186018101518383018201520161026c565b506000918101602001919091529392505050565b600080600080600060a086880312156102b457600080fd5b85516001600160401b038111156102ca57600080fd5b6102d6888289016101f9565b602088015190965090506001600160401b038111156102f457600080fd5b610300888289016101f9565b60408801516060890151919650945090506001600160a01b038116811461032657600080fd5b6080870151909250801515811461033c57600080fd5b809150509295509295909350565b600181811c9082168061035e57607f821691505b60208210810361037e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103ce57806000526020600020601f840160051c810160208510156103ab5750805b601f840160051c820191505b818110156103cb57600081556001016103b7565b50505b505050565b81516001600160401b038111156103ec576103ec6101e3565b610400816103fa845461034a565b84610384565b6020601f821160018114610434576000831561041c5750848201515b600019600385901b1c1916600184901b1784556103cb565b600084815260208120601f198516915b828110156104645787850151825560209485019460019092019101610444565b50848210156104825786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156104b257634e487b7160e01b600052601160045260246000fd5b92915050565b610785806104c76000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461011857806370a082311461012d57806395d89b4114610156578063a9059cbb1461015e578063dd62ed3e1461017157600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd146100f6578063313ce56714610109575b600080fd5b6100ab6101aa565b6040516100b891906105ce565b60405180910390f35b6100d46100cf366004610638565b61023c565b60405190151581526020016100b8565b6002545b6040519081526020016100b8565b6100d4610104366004610662565b610256565b604051601281526020016100b8565b61012b610126366004610638565b61027a565b005b6100e861013b36600461069f565b6001600160a01b031660009081526020819052604090205490565b6100ab610288565b6100d461016c366004610638565b610297565b6100e861017f3660046106c1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101b9906106f4565b80601f01602080910402602001604051908101604052809291908181526020018280546101e5906106f4565b80156102325780601f1061020757610100808354040283529160200191610232565b820191906000526020600020905b81548152906001019060200180831161021557829003601f168201915b5050505050905090565b60003361024a8185856102a5565b60019150505b92915050565b6000336102648582856102b7565b61026f85858561033a565b506001949350505050565b6102848282610399565b5050565b6060600480546101b9906106f4565b60003361024a81858561033a565b6102b283838360016103cf565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610334578181101561032557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b610334848484840360006103cf565b50505050565b6001600160a01b03831661036457604051634b637e8f60e11b81526000600482015260240161031c565b6001600160a01b03821661038e5760405163ec442f0560e01b81526000600482015260240161031c565b6102b28383836104a4565b6001600160a01b0382166103c35760405163ec442f0560e01b81526000600482015260240161031c565b610284600083836104a4565b6001600160a01b0384166103f95760405163e602df0560e01b81526000600482015260240161031c565b6001600160a01b03831661042357604051634a1406b160e11b81526000600482015260240161031c565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561033457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161049691815260200190565b60405180910390a350505050565b6001600160a01b0383166104cf5780600260008282546104c4919061072e565b909155506105419050565b6001600160a01b038316600090815260208190526040902054818110156105225760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161031c565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661055d5760028054829003905561057c565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105c191815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156105fc57602081860181015160408684010152016105df565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461063357600080fd5b919050565b6000806040838503121561064b57600080fd5b6106548361061c565b946020939093013593505050565b60008060006060848603121561067757600080fd5b6106808461061c565b925061068e6020850161061c565b929592945050506040919091013590565b6000602082840312156106b157600080fd5b6106ba8261061c565b9392505050565b600080604083850312156106d457600080fd5b6106dd8361061c565b91506106eb6020840161061c565b90509250929050565b600181811c9082168061070857607f821691505b60208210810361072857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561025057634e487b7160e01b600052601160045260246000fdfea2646970667358221220ab34bedbd060678663cbf940c6c389c5c714e65ded28079781f69830456fb3d464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC4C CODESIZE SUB DUP1 PUSH2 0xC4C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x29C JUMP JUMPDEST DUP5 DUP5 PUSH1 0x3 PUSH2 0x3D DUP4 DUP3 PUSH2 0x3D3 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x4A DUP3 DUP3 PUSH2 0x3D3 JUMP JUMPDEST POP POP POP DUP1 ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x66 JUMPI PUSH2 0x61 DUP3 DUP5 PUSH2 0x7A JUMP JUMPDEST PUSH2 0x70 JUMP JUMPDEST PUSH2 0x70 ADDRESS DUP5 PUSH2 0x7A JUMP JUMPDEST POP POP POP POP POP PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x491 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x156 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x137 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x172 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x191 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x223 JUMPI PUSH2 0x223 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x251 JUMPI PUSH2 0x251 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x26C JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D6 DUP9 DUP3 DUP10 ADD PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD SWAP1 SWAP7 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x300 DUP9 DUP3 DUP10 ADD PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP2 SWAP7 POP SWAP5 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP8 ADD MLOAD SWAP1 SWAP3 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x35E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x37E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3CE JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3AB JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3B7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3EC JUMPI PUSH2 0x3EC PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x400 DUP2 PUSH2 0x3FA DUP5 SLOAD PUSH2 0x34A JUMP JUMPDEST DUP5 PUSH2 0x384 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x434 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x41C JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x464 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x444 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x482 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x785 DUP1 PUSH2 0x4C7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x662 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x288 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1B9 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E5 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x232 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x207 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x232 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x215 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x24A DUP2 DUP6 DUP6 PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x264 DUP6 DUP3 DUP6 PUSH2 0x2B7 JUMP JUMPDEST PUSH2 0x26F DUP6 DUP6 DUP6 PUSH2 0x33A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x284 DUP3 DUP3 PUSH2 0x399 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1B9 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x24A DUP2 DUP6 DUP6 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x2B2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x334 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x325 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x334 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x3CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x364 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH2 0x2B2 DUP4 DUP4 DUP4 PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH2 0x284 PUSH1 0x0 DUP4 DUP4 PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x334 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4CF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x72E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x541 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x55D JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x5DF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x654 DUP4 PUSH2 0x61C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x680 DUP5 PUSH2 0x61C JUMP JUMPDEST SWAP3 POP PUSH2 0x68E PUSH1 0x20 DUP6 ADD PUSH2 0x61C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BA DUP3 PUSH2 0x61C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DD DUP4 PUSH2 0x61C JUMP JUMPDEST SWAP2 POP PUSH2 0x6EB PUSH1 0x20 DUP5 ADD PUSH2 0x61C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x708 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x728 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x250 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB CALLVALUE 0xBE 0xDB 0xD0 PUSH1 0x67 DUP7 PUSH4 0xCBF940C6 0xC3 DUP10 0xC5 0xC7 EQ 0xE6 TSTORE 0xED 0x28 SMOD SWAP8 DUP2 0xF6 SWAP9 ADDRESS GASLIMIT PUSH16 0xB3D464736F6C634300081A0033000000 ",
							"sourceMap": "149:998:3:-:0;;;192:443;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;370:5;377:7;686:5:0;:13;370:5:3;686::0;:13;:::i;:::-;-1:-1:-1;709:7:0;:17;719:7;709;:17;:::i;:::-;-1:-1:-1;;;478:18:3;::::1;;492:4;478:18:::0;475:154:::1;;507:35;513:13:::0;528;507:5:::1;:35::i;:::-;475:154;;;583:35;597:4;604:13:::0;583:5:::1;:35::i;:::-;192:443:::0;;;;;149:998;;937:208;-1:-1:-1;;;;;1007:21:3;;1003:91;;1051:32;;-1:-1:-1;;;1051:32:3;;1080:1;1051:32;;;4615:51:5;4588:18;;1051:32:3;;;;;;;;1003:91;1103:35;1119:1;1123:7;1132:5;1103:7;:35::i;:::-;937:208;;:::o;2414:706:0:-;-1:-1:-1;;;;;2503:18:0;;2499:359;;2553:5;2537:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;2499:359:0;;-1:-1:-1;2499:359:0;;-1:-1:-1;;;;;2611:15:0;;2589:19;2611:15;;;;;;;;;;;2644:19;;;2640:115;;;2690:50;;-1:-1:-1;;;2690:50:0;;-1:-1:-1;;;;;5124:32:5;;2690:50:0;;;5106:51:5;5173:18;;;5166:34;;;5216:18;;;5209:34;;;5079:18;;2690:50:0;4904:345:5;2640:115:0;-1:-1:-1;;;;;2796:15:0;;:9;:15;;;;;;;;;;2814:19;;;;2796:37;;2499:359;-1:-1:-1;;;;;2872:16:0;;2868:205;;2932:12;:21;;;;;;;2868:205;;;-1:-1:-1;;;;;3026:13:0;;:9;:13;;;;;;;;;;:22;;;;;;2868:205;3103:2;-1:-1:-1;;;;;3088:25:0;3097:4;-1:-1:-1;;;;;3088:25:0;;3107:5;3088:25;;;;5400::5;;5388:2;5373:18;;5254:177;3088:25:0;;;;;;;;2414:706;;;:::o;14:127:5:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:5;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:5;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:5;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:5;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:5;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:5:o;985:970::-;1108:6;1116;1124;1132;1140;1193:3;1181:9;1172:7;1168:23;1164:33;1161:53;;;1210:1;1207;1200:12;1161:53;1237:16;;-1:-1:-1;;;;;1265:30:5;;1262:50;;;1308:1;1305;1298:12;1262:50;1331:61;1384:7;1375:6;1364:9;1360:22;1331:61;:::i;:::-;1438:2;1423:18;;1417:25;1321:71;;-1:-1:-1;1417:25:5;-1:-1:-1;;;;;;1454:32:5;;1451:52;;;1499:1;1496;1489:12;1451:52;1522:63;1577:7;1566:8;1555:9;1551:24;1522:63;:::i;:::-;1625:2;1610:18;;1604:25;1672:2;1657:18;;1651:25;1512:73;;-1:-1:-1;1604:25:5;-1:-1:-1;1651:25:5;-1:-1:-1;;;;;;1705:31:5;;1695:42;;1685:70;;1751:1;1748;1741:12;1685:70;1845:3;1830:19;;1824:26;1774:5;;-1:-1:-1;1888:15:5;;1881:23;1869:36;;1859:64;;1919:1;1916;1909:12;1859:64;1942:7;1932:17;;;985:970;;;;;;;;:::o;1960:380::-;2039:1;2035:12;;;;2082;;;2103:61;;2157:4;2149:6;2145:17;2135:27;;2103:61;2210:2;2202:6;2199:14;2179:18;2176:38;2173:161;;2256:10;2251:3;2247:20;2244:1;2237:31;2291:4;2288:1;2281:15;2319:4;2316:1;2309:15;2173:161;;1960:380;;;:::o;2471:518::-;2573:2;2568:3;2565:11;2562:421;;;2609:5;2606:1;2599:16;2653:4;2650:1;2640:18;2723:2;2711:10;2707:19;2704:1;2700:27;2694:4;2690:38;2759:4;2747:10;2744:20;2741:47;;;-1:-1:-1;2782:4:5;2741:47;2837:2;2832:3;2828:12;2825:1;2821:20;2815:4;2811:31;2801:41;;2892:81;2910:2;2903:5;2900:13;2892:81;;;2969:1;2955:16;;2936:1;2925:13;2892:81;;;2896:3;;2562:421;2471:518;;;:::o;3165:1299::-;3285:10;;-1:-1:-1;;;;;3307:30:5;;3304:56;;;3340:18;;:::i;:::-;3369:97;3459:6;3419:38;3451:4;3445:11;3419:38;:::i;:::-;3413:4;3369:97;:::i;:::-;3515:4;3546:2;3535:14;;3563:1;3558:649;;;;4251:1;4268:6;4265:89;;;-1:-1:-1;4320:19:5;;;4314:26;4265:89;-1:-1:-1;;3122:1:5;3118:11;;;3114:24;3110:29;3100:40;3146:1;3142:11;;;3097:57;4367:81;;3528:930;;3558:649;2418:1;2411:14;;;2455:4;2442:18;;-1:-1:-1;;3594:20:5;;;3712:222;3726:7;3723:1;3720:14;3712:222;;;3808:19;;;3802:26;3787:42;;3915:4;3900:20;;;;3868:1;3856:14;;;;3742:12;3712:222;;;3716:3;3962:6;3953:7;3950:19;3947:201;;;4023:19;;;4017:26;-1:-1:-1;;4106:1:5;4102:14;;;4118:3;4098:24;4094:37;4090:42;4075:58;4060:74;;3947:201;-1:-1:-1;;;;4194:1:5;4178:14;;;4174:22;4161:36;;-1:-1:-1;3165:1299:5:o;4677:222::-;4742:9;;;4763:10;;;4760:133;;;4815:10;4810:3;4806:20;4803:1;4796:31;4850:4;4847:1;4840:15;4878:4;4875:1;4868:15;4760:133;4677:222;;;;:::o;5254:177::-;149:998:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_330": {
									"entryPoint": 677,
									"id": 330,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_389": {
									"entryPoint": 975,
									"id": 389,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_628": {
									"entryPoint": 921,
									"id": 628,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_436": {
									"entryPoint": 695,
									"id": 436,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_237": {
									"entryPoint": 826,
									"id": 237,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_313": {
									"entryPoint": 1188,
									"id": 313,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_135": {
									"entryPoint": 572,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_94": {
									"entryPoint": null,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_596": {
									"entryPoint": 634,
									"id": 596,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_54": {
									"entryPoint": 426,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_63": {
									"entryPoint": 648,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_81": {
									"entryPoint": null,
									"id": 81,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_167": {
									"entryPoint": 598,
									"id": 167,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_191": {
									"entryPoint": 663,
									"id": 191,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3594:5",
										"nodeType": "YulBlock",
										"src": "0:3594:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:406:5",
													"nodeType": "YulBlock",
													"src": "135:406:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:5",
																		"nodeType": "YulLiteral",
																		"src": "163:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:5"
																},
																"nativeSrc": "145:21:5",
																"nodeType": "YulFunctionCall",
																"src": "145:21:5"
															},
															"nativeSrc": "145:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:5"
														},
														{
															"nativeSrc": "175:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:5"
																},
																"nativeSrc": "189:13:5",
																"nodeType": "YulFunctionCall",
																"src": "189:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:5",
																	"nodeType": "YulTypedName",
																	"src": "179:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:5",
																				"nodeType": "YulLiteral",
																				"src": "233:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:5"
																		},
																		"nativeSrc": "218:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:5"
																},
																"nativeSrc": "211:34:5",
																"nodeType": "YulFunctionCall",
																"src": "211:34:5"
															},
															"nativeSrc": "211:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:5"
														},
														{
															"nativeSrc": "254:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "254:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "263:1:5",
																"nodeType": "YulLiteral",
																"src": "263:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "258:1:5",
																	"nodeType": "YulTypedName",
																	"src": "258:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "323:90:5",
																"nodeType": "YulBlock",
																"src": "323:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "352:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "352:9:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "363:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "363:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "348:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "348:3:5"
																							},
																							"nativeSrc": "348:17:5",
																							"nodeType": "YulFunctionCall",
																							"src": "348:17:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "367:2:5",
																							"nodeType": "YulLiteral",
																							"src": "367:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "344:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "344:3:5"
																					},
																					"nativeSrc": "344:26:5",
																					"nodeType": "YulFunctionCall",
																					"src": "344:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "386:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "386:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "394:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "394:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "382:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "382:3:5"
																									},
																									"nativeSrc": "382:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "382:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "398:2:5",
																									"nodeType": "YulLiteral",
																									"src": "398:2:5",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "378:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "378:3:5"
																							},
																							"nativeSrc": "378:23:5",
																							"nodeType": "YulFunctionCall",
																							"src": "378:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "372:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "372:5:5"
																					},
																					"nativeSrc": "372:30:5",
																					"nodeType": "YulFunctionCall",
																					"src": "372:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "337:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "337:6:5"
																			},
																			"nativeSrc": "337:66:5",
																			"nodeType": "YulFunctionCall",
																			"src": "337:66:5"
																		},
																		"nativeSrc": "337:66:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "337:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "284:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "284:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "287:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "287:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "281:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "281:2:5"
																},
																"nativeSrc": "281:13:5",
																"nodeType": "YulFunctionCall",
																"src": "281:13:5"
															},
															"nativeSrc": "273:140:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "295:19:5",
																"nodeType": "YulBlock",
																"src": "295:19:5",
																"statements": [
																	{
																		"nativeSrc": "297:15:5",
																		"nodeType": "YulAssignment",
																		"src": "297:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "306:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "306:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "309:2:5",
																					"nodeType": "YulLiteral",
																					"src": "309:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "302:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "302:3:5"
																			},
																			"nativeSrc": "302:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "302:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "297:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "297:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "277:3:5",
																"nodeType": "YulBlock",
																"src": "277:3:5",
																"statements": []
															},
															"src": "273:140:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "437:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "437:9:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "448:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "448:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "433:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "433:3:5"
																				},
																				"nativeSrc": "433:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "433:22:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "457:2:5",
																				"nodeType": "YulLiteral",
																				"src": "457:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "429:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "429:3:5"
																		},
																		"nativeSrc": "429:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "429:31:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "462:1:5",
																		"nodeType": "YulLiteral",
																		"src": "462:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "422:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "422:6:5"
																},
																"nativeSrc": "422:42:5",
																"nodeType": "YulFunctionCall",
																"src": "422:42:5"
															},
															"nativeSrc": "422:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "422:42:5"
														},
														{
															"nativeSrc": "473:62:5",
															"nodeType": "YulAssignment",
															"src": "473:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "489:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "489:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "508:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "508:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "516:2:5",
																								"nodeType": "YulLiteral",
																								"src": "516:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "504:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "504:3:5"
																						},
																						"nativeSrc": "504:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "504:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "525:2:5",
																								"nodeType": "YulLiteral",
																								"src": "525:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "521:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "521:3:5"
																						},
																						"nativeSrc": "521:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "521:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "500:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "500:3:5"
																				},
																				"nativeSrc": "500:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "500:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "485:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:5"
																		},
																		"nativeSrc": "485:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "485:45:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "532:2:5",
																		"nodeType": "YulLiteral",
																		"src": "532:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:5"
																},
																"nativeSrc": "481:54:5",
																"nodeType": "YulFunctionCall",
																"src": "481:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:527:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:5",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:5",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:5",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:527:5"
											},
											{
												"body": {
													"nativeSrc": "595:124:5",
													"nodeType": "YulBlock",
													"src": "595:124:5",
													"statements": [
														{
															"nativeSrc": "605:29:5",
															"nodeType": "YulAssignment",
															"src": "605:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "627:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "627:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "614:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "614:12:5"
																},
																"nativeSrc": "614:20:5",
																"nodeType": "YulFunctionCall",
																"src": "614:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "605:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "605:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "697:16:5",
																"nodeType": "YulBlock",
																"src": "697:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "706:1:5",
																					"nodeType": "YulLiteral",
																					"src": "706:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "709:1:5",
																					"nodeType": "YulLiteral",
																					"src": "709:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "699:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "699:6:5"
																			},
																			"nativeSrc": "699:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "699:12:5"
																		},
																		"nativeSrc": "699:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "699:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "667:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "667:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "682:3:5",
																										"nodeType": "YulLiteral",
																										"src": "682:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "687:1:5",
																										"nodeType": "YulLiteral",
																										"src": "687:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "678:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "678:3:5"
																								},
																								"nativeSrc": "678:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "678:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "691:1:5",
																								"nodeType": "YulLiteral",
																								"src": "691:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "674:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:5"
																						},
																						"nativeSrc": "674:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "674:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "663:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "663:3:5"
																				},
																				"nativeSrc": "663:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "663:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "653:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "653:2:5"
																		},
																		"nativeSrc": "653:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "653:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "646:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "646:6:5"
																},
																"nativeSrc": "646:50:5",
																"nodeType": "YulFunctionCall",
																"src": "646:50:5"
															},
															"nativeSrc": "643:70:5",
															"nodeType": "YulIf",
															"src": "643:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "546:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "574:6:5",
														"nodeType": "YulTypedName",
														"src": "574:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "585:5:5",
														"nodeType": "YulTypedName",
														"src": "585:5:5",
														"type": ""
													}
												],
												"src": "546:173:5"
											},
											{
												"body": {
													"nativeSrc": "811:213:5",
													"nodeType": "YulBlock",
													"src": "811:213:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "857:16:5",
																"nodeType": "YulBlock",
																"src": "857:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "866:1:5",
																					"nodeType": "YulLiteral",
																					"src": "866:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "869:1:5",
																					"nodeType": "YulLiteral",
																					"src": "869:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "859:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "859:6:5"
																			},
																			"nativeSrc": "859:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "859:12:5"
																		},
																		"nativeSrc": "859:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "859:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "832:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "832:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "841:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "841:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "828:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "828:3:5"
																		},
																		"nativeSrc": "828:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "828:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "853:2:5",
																		"nodeType": "YulLiteral",
																		"src": "853:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "824:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:5"
																},
																"nativeSrc": "824:32:5",
																"nodeType": "YulFunctionCall",
																"src": "824:32:5"
															},
															"nativeSrc": "821:52:5",
															"nodeType": "YulIf",
															"src": "821:52:5"
														},
														{
															"nativeSrc": "882:39:5",
															"nodeType": "YulAssignment",
															"src": "882:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "911:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "911:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "892:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "892:18:5"
																},
																"nativeSrc": "892:29:5",
																"nodeType": "YulFunctionCall",
																"src": "892:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "882:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "882:6:5"
																}
															]
														},
														{
															"nativeSrc": "930:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "930:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "943:1:5",
																"nodeType": "YulLiteral",
																"src": "943:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "934:5:5",
																	"nodeType": "YulTypedName",
																	"src": "934:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "953:41:5",
															"nodeType": "YulAssignment",
															"src": "953:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "979:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "979:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "990:2:5",
																				"nodeType": "YulLiteral",
																				"src": "990:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "975:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:5"
																		},
																		"nativeSrc": "975:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "975:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "962:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "962:12:5"
																},
																"nativeSrc": "962:32:5",
																"nodeType": "YulFunctionCall",
																"src": "962:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "953:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "953:5:5"
																}
															]
														},
														{
															"nativeSrc": "1003:15:5",
															"nodeType": "YulAssignment",
															"src": "1003:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1013:5:5",
																"nodeType": "YulIdentifier",
																"src": "1013:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1003:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "724:300:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "769:9:5",
														"nodeType": "YulTypedName",
														"src": "769:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "780:7:5",
														"nodeType": "YulTypedName",
														"src": "780:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "792:6:5",
														"nodeType": "YulTypedName",
														"src": "792:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "800:6:5",
														"nodeType": "YulTypedName",
														"src": "800:6:5",
														"type": ""
													}
												],
												"src": "724:300:5"
											},
											{
												"body": {
													"nativeSrc": "1124:92:5",
													"nodeType": "YulBlock",
													"src": "1124:92:5",
													"statements": [
														{
															"nativeSrc": "1134:26:5",
															"nodeType": "YulAssignment",
															"src": "1134:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1146:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1146:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1157:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1157:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1142:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:5"
																},
																"nativeSrc": "1142:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1142:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1134:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1134:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1176:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1176:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1201:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1201:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1194:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1194:6:5"
																				},
																				"nativeSrc": "1194:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1194:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1187:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1187:6:5"
																		},
																		"nativeSrc": "1187:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1187:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1169:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1169:6:5"
																},
																"nativeSrc": "1169:41:5",
																"nodeType": "YulFunctionCall",
																"src": "1169:41:5"
															},
															"nativeSrc": "1169:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "1169:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1029:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1093:9:5",
														"nodeType": "YulTypedName",
														"src": "1093:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1104:6:5",
														"nodeType": "YulTypedName",
														"src": "1104:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1115:4:5",
														"nodeType": "YulTypedName",
														"src": "1115:4:5",
														"type": ""
													}
												],
												"src": "1029:187:5"
											},
											{
												"body": {
													"nativeSrc": "1322:76:5",
													"nodeType": "YulBlock",
													"src": "1322:76:5",
													"statements": [
														{
															"nativeSrc": "1332:26:5",
															"nodeType": "YulAssignment",
															"src": "1332:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1344:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1344:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1355:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1340:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1340:3:5"
																},
																"nativeSrc": "1340:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1340:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1332:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1332:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1374:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1374:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1385:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1385:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1367:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1367:6:5"
																},
																"nativeSrc": "1367:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1367:25:5"
															},
															"nativeSrc": "1367:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "1367:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1221:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1291:9:5",
														"nodeType": "YulTypedName",
														"src": "1291:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1302:6:5",
														"nodeType": "YulTypedName",
														"src": "1302:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1313:4:5",
														"nodeType": "YulTypedName",
														"src": "1313:4:5",
														"type": ""
													}
												],
												"src": "1221:177:5"
											},
											{
												"body": {
													"nativeSrc": "1507:270:5",
													"nodeType": "YulBlock",
													"src": "1507:270:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1553:16:5",
																"nodeType": "YulBlock",
																"src": "1553:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1562:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1562:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1565:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1565:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1555:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1555:6:5"
																			},
																			"nativeSrc": "1555:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1555:12:5"
																		},
																		"nativeSrc": "1555:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1555:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1528:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1528:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1537:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1537:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1524:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1524:3:5"
																		},
																		"nativeSrc": "1524:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1524:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1549:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1549:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1520:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1520:3:5"
																},
																"nativeSrc": "1520:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1520:32:5"
															},
															"nativeSrc": "1517:52:5",
															"nodeType": "YulIf",
															"src": "1517:52:5"
														},
														{
															"nativeSrc": "1578:39:5",
															"nodeType": "YulAssignment",
															"src": "1578:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1607:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1607:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1588:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1588:18:5"
																},
																"nativeSrc": "1588:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1588:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1578:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1578:6:5"
																}
															]
														},
														{
															"nativeSrc": "1626:48:5",
															"nodeType": "YulAssignment",
															"src": "1626:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1659:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1659:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1670:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1670:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1655:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1655:3:5"
																		},
																		"nativeSrc": "1655:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1655:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1636:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1636:18:5"
																},
																"nativeSrc": "1636:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1636:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1626:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1626:6:5"
																}
															]
														},
														{
															"nativeSrc": "1683:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1683:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1696:1:5",
																"nodeType": "YulLiteral",
																"src": "1696:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1687:5:5",
																	"nodeType": "YulTypedName",
																	"src": "1687:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1706:41:5",
															"nodeType": "YulAssignment",
															"src": "1706:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1732:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1732:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1743:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1743:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1728:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1728:3:5"
																		},
																		"nativeSrc": "1728:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1728:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1715:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1715:12:5"
																},
																"nativeSrc": "1715:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1715:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1706:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1706:5:5"
																}
															]
														},
														{
															"nativeSrc": "1756:15:5",
															"nodeType": "YulAssignment",
															"src": "1756:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1766:5:5",
																"nodeType": "YulIdentifier",
																"src": "1766:5:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1756:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1756:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1403:374:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1457:9:5",
														"nodeType": "YulTypedName",
														"src": "1457:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1468:7:5",
														"nodeType": "YulTypedName",
														"src": "1468:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1480:6:5",
														"nodeType": "YulTypedName",
														"src": "1480:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1488:6:5",
														"nodeType": "YulTypedName",
														"src": "1488:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1496:6:5",
														"nodeType": "YulTypedName",
														"src": "1496:6:5",
														"type": ""
													}
												],
												"src": "1403:374:5"
											},
											{
												"body": {
													"nativeSrc": "1879:87:5",
													"nodeType": "YulBlock",
													"src": "1879:87:5",
													"statements": [
														{
															"nativeSrc": "1889:26:5",
															"nodeType": "YulAssignment",
															"src": "1889:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1901:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1901:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1912:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1912:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1897:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1897:3:5"
																},
																"nativeSrc": "1897:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1897:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1889:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1889:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1931:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1931:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1946:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1946:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1954:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1954:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1942:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1942:3:5"
																		},
																		"nativeSrc": "1942:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1942:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1924:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:5"
																},
																"nativeSrc": "1924:36:5",
																"nodeType": "YulFunctionCall",
																"src": "1924:36:5"
															},
															"nativeSrc": "1924:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "1924:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1782:184:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1848:9:5",
														"nodeType": "YulTypedName",
														"src": "1848:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1859:6:5",
														"nodeType": "YulTypedName",
														"src": "1859:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1870:4:5",
														"nodeType": "YulTypedName",
														"src": "1870:4:5",
														"type": ""
													}
												],
												"src": "1782:184:5"
											},
											{
												"body": {
													"nativeSrc": "2041:116:5",
													"nodeType": "YulBlock",
													"src": "2041:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2087:16:5",
																"nodeType": "YulBlock",
																"src": "2087:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2096:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2096:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2099:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2099:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2089:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2089:6:5"
																			},
																			"nativeSrc": "2089:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2089:12:5"
																		},
																		"nativeSrc": "2089:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2089:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2062:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2062:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2071:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2071:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2058:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2058:3:5"
																		},
																		"nativeSrc": "2058:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2058:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2083:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2083:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2054:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2054:3:5"
																},
																"nativeSrc": "2054:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2054:32:5"
															},
															"nativeSrc": "2051:52:5",
															"nodeType": "YulIf",
															"src": "2051:52:5"
														},
														{
															"nativeSrc": "2112:39:5",
															"nodeType": "YulAssignment",
															"src": "2112:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2141:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2141:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2122:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2122:18:5"
																},
																"nativeSrc": "2122:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2122:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2112:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1971:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2007:9:5",
														"nodeType": "YulTypedName",
														"src": "2007:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2018:7:5",
														"nodeType": "YulTypedName",
														"src": "2018:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2030:6:5",
														"nodeType": "YulTypedName",
														"src": "2030:6:5",
														"type": ""
													}
												],
												"src": "1971:186:5"
											},
											{
												"body": {
													"nativeSrc": "2249:173:5",
													"nodeType": "YulBlock",
													"src": "2249:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2295:16:5",
																"nodeType": "YulBlock",
																"src": "2295:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2304:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2304:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2307:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2307:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2297:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2297:6:5"
																			},
																			"nativeSrc": "2297:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2297:12:5"
																		},
																		"nativeSrc": "2297:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2297:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2270:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2270:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2279:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2279:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2266:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2266:3:5"
																		},
																		"nativeSrc": "2266:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2266:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2291:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2291:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2262:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2262:3:5"
																},
																"nativeSrc": "2262:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2262:32:5"
															},
															"nativeSrc": "2259:52:5",
															"nodeType": "YulIf",
															"src": "2259:52:5"
														},
														{
															"nativeSrc": "2320:39:5",
															"nodeType": "YulAssignment",
															"src": "2320:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2349:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2349:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2330:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2330:18:5"
																},
																"nativeSrc": "2330:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2330:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2320:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2320:6:5"
																}
															]
														},
														{
															"nativeSrc": "2368:48:5",
															"nodeType": "YulAssignment",
															"src": "2368:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2401:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2401:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2412:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2412:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2397:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2397:3:5"
																		},
																		"nativeSrc": "2397:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2397:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2378:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2378:18:5"
																},
																"nativeSrc": "2378:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2378:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2368:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2368:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2162:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2207:9:5",
														"nodeType": "YulTypedName",
														"src": "2207:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2218:7:5",
														"nodeType": "YulTypedName",
														"src": "2218:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2230:6:5",
														"nodeType": "YulTypedName",
														"src": "2230:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2238:6:5",
														"nodeType": "YulTypedName",
														"src": "2238:6:5",
														"type": ""
													}
												],
												"src": "2162:260:5"
											},
											{
												"body": {
													"nativeSrc": "2482:325:5",
													"nodeType": "YulBlock",
													"src": "2482:325:5",
													"statements": [
														{
															"nativeSrc": "2492:22:5",
															"nodeType": "YulAssignment",
															"src": "2492:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2506:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2506:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2509:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2509:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2502:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2502:3:5"
																},
																"nativeSrc": "2502:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2502:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2492:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2492:6:5"
																}
															]
														},
														{
															"nativeSrc": "2523:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2523:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2553:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2553:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2559:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2559:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2549:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2549:3:5"
																},
																"nativeSrc": "2549:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2549:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2527:18:5",
																	"nodeType": "YulTypedName",
																	"src": "2527:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2600:31:5",
																"nodeType": "YulBlock",
																"src": "2600:31:5",
																"statements": [
																	{
																		"nativeSrc": "2602:27:5",
																		"nodeType": "YulAssignment",
																		"src": "2602:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2616:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2616:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2624:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2624:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2612:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2612:3:5"
																			},
																			"nativeSrc": "2612:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2612:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2602:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2602:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2580:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2580:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2573:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2573:6:5"
																},
																"nativeSrc": "2573:26:5",
																"nodeType": "YulFunctionCall",
																"src": "2573:26:5"
															},
															"nativeSrc": "2570:61:5",
															"nodeType": "YulIf",
															"src": "2570:61:5"
														},
														{
															"body": {
																"nativeSrc": "2690:111:5",
																"nodeType": "YulBlock",
																"src": "2690:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2711:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2711:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2718:3:5",
																							"nodeType": "YulLiteral",
																							"src": "2718:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2723:10:5",
																							"nodeType": "YulLiteral",
																							"src": "2723:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2714:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2714:3:5"
																					},
																					"nativeSrc": "2714:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2714:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2704:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2704:6:5"
																			},
																			"nativeSrc": "2704:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2704:31:5"
																		},
																		"nativeSrc": "2704:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2704:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2755:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2755:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2758:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2758:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2748:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2748:6:5"
																			},
																			"nativeSrc": "2748:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2748:15:5"
																		},
																		"nativeSrc": "2748:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2748:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2783:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2783:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2786:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2786:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2776:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2776:6:5"
																			},
																			"nativeSrc": "2776:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2776:15:5"
																		},
																		"nativeSrc": "2776:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2776:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2646:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2646:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2669:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2669:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2677:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2677:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2666:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2666:2:5"
																		},
																		"nativeSrc": "2666:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2666:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2643:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2643:2:5"
																},
																"nativeSrc": "2643:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2643:38:5"
															},
															"nativeSrc": "2640:161:5",
															"nodeType": "YulIf",
															"src": "2640:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2427:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2462:4:5",
														"nodeType": "YulTypedName",
														"src": "2462:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2471:6:5",
														"nodeType": "YulTypedName",
														"src": "2471:6:5",
														"type": ""
													}
												],
												"src": "2427:380:5"
											},
											{
												"body": {
													"nativeSrc": "2969:188:5",
													"nodeType": "YulBlock",
													"src": "2969:188:5",
													"statements": [
														{
															"nativeSrc": "2979:26:5",
															"nodeType": "YulAssignment",
															"src": "2979:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2991:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2991:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3002:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3002:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2987:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2987:3:5"
																},
																"nativeSrc": "2987:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2987:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2979:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2979:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3021:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3021:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3036:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3036:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3052:3:5",
																								"nodeType": "YulLiteral",
																								"src": "3052:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3057:1:5",
																								"nodeType": "YulLiteral",
																								"src": "3057:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3048:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3048:3:5"
																						},
																						"nativeSrc": "3048:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3048:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3061:1:5",
																						"nodeType": "YulLiteral",
																						"src": "3061:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3044:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3044:3:5"
																				},
																				"nativeSrc": "3044:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3044:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3032:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3032:3:5"
																		},
																		"nativeSrc": "3032:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3032:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3014:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3014:6:5"
																},
																"nativeSrc": "3014:51:5",
																"nodeType": "YulFunctionCall",
																"src": "3014:51:5"
															},
															"nativeSrc": "3014:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "3014:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3085:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3085:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3096:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3096:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3081:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3081:3:5"
																		},
																		"nativeSrc": "3081:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3081:18:5"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3101:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3101:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3074:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3074:6:5"
																},
																"nativeSrc": "3074:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3074:34:5"
															},
															"nativeSrc": "3074:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3074:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3128:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3128:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3139:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3139:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3124:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3124:3:5"
																		},
																		"nativeSrc": "3124:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3124:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3144:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3144:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3117:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3117:6:5"
																},
																"nativeSrc": "3117:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3117:34:5"
															},
															"nativeSrc": "3117:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3117:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2812:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2922:9:5",
														"nodeType": "YulTypedName",
														"src": "2922:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2933:6:5",
														"nodeType": "YulTypedName",
														"src": "2933:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2941:6:5",
														"nodeType": "YulTypedName",
														"src": "2941:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2949:6:5",
														"nodeType": "YulTypedName",
														"src": "2949:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2960:4:5",
														"nodeType": "YulTypedName",
														"src": "2960:4:5",
														"type": ""
													}
												],
												"src": "2812:345:5"
											},
											{
												"body": {
													"nativeSrc": "3263:102:5",
													"nodeType": "YulBlock",
													"src": "3263:102:5",
													"statements": [
														{
															"nativeSrc": "3273:26:5",
															"nodeType": "YulAssignment",
															"src": "3273:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3285:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3285:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3296:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3296:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3281:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3281:3:5"
																},
																"nativeSrc": "3281:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3281:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3273:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3273:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3315:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3315:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3330:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3330:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3346:3:5",
																								"nodeType": "YulLiteral",
																								"src": "3346:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3351:1:5",
																								"nodeType": "YulLiteral",
																								"src": "3351:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3342:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3342:3:5"
																						},
																						"nativeSrc": "3342:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3342:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3355:1:5",
																						"nodeType": "YulLiteral",
																						"src": "3355:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3338:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3338:3:5"
																				},
																				"nativeSrc": "3338:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3338:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3326:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3326:3:5"
																		},
																		"nativeSrc": "3326:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3326:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3308:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3308:6:5"
																},
																"nativeSrc": "3308:51:5",
																"nodeType": "YulFunctionCall",
																"src": "3308:51:5"
															},
															"nativeSrc": "3308:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "3308:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3162:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3232:9:5",
														"nodeType": "YulTypedName",
														"src": "3232:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3243:6:5",
														"nodeType": "YulTypedName",
														"src": "3243:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3254:4:5",
														"nodeType": "YulTypedName",
														"src": "3254:4:5",
														"type": ""
													}
												],
												"src": "3162:203:5"
											},
											{
												"body": {
													"nativeSrc": "3418:174:5",
													"nodeType": "YulBlock",
													"src": "3418:174:5",
													"statements": [
														{
															"nativeSrc": "3428:16:5",
															"nodeType": "YulAssignment",
															"src": "3428:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3439:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3439:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3442:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3442:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3435:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3435:3:5"
																},
																"nativeSrc": "3435:9:5",
																"nodeType": "YulFunctionCall",
																"src": "3435:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3428:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3428:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3475:111:5",
																"nodeType": "YulBlock",
																"src": "3475:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3496:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3496:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3503:3:5",
																							"nodeType": "YulLiteral",
																							"src": "3503:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3508:10:5",
																							"nodeType": "YulLiteral",
																							"src": "3508:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3499:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3499:3:5"
																					},
																					"nativeSrc": "3499:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3499:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3489:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3489:6:5"
																			},
																			"nativeSrc": "3489:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3489:31:5"
																		},
																		"nativeSrc": "3489:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3489:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3540:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3540:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3543:4:5",
																					"nodeType": "YulLiteral",
																					"src": "3543:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3533:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3533:6:5"
																			},
																			"nativeSrc": "3533:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3533:15:5"
																		},
																		"nativeSrc": "3533:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3533:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3568:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3568:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3571:4:5",
																					"nodeType": "YulLiteral",
																					"src": "3571:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3561:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3561:6:5"
																			},
																			"nativeSrc": "3561:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3561:15:5"
																		},
																		"nativeSrc": "3561:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3561:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3459:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3459:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3462:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3462:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3456:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3456:2:5"
																},
																"nativeSrc": "3456:10:5",
																"nodeType": "YulFunctionCall",
																"src": "3456:10:5"
															},
															"nativeSrc": "3453:133:5",
															"nodeType": "YulIf",
															"src": "3453:133:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3370:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3401:1:5",
														"nodeType": "YulTypedName",
														"src": "3401:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3404:1:5",
														"nodeType": "YulTypedName",
														"src": "3404:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3410:3:5",
														"nodeType": "YulTypedName",
														"src": "3410:3:5",
														"type": ""
													}
												],
												"src": "3370:222:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461011857806370a082311461012d57806395d89b4114610156578063a9059cbb1461015e578063dd62ed3e1461017157600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd146100f6578063313ce56714610109575b600080fd5b6100ab6101aa565b6040516100b891906105ce565b60405180910390f35b6100d46100cf366004610638565b61023c565b60405190151581526020016100b8565b6002545b6040519081526020016100b8565b6100d4610104366004610662565b610256565b604051601281526020016100b8565b61012b610126366004610638565b61027a565b005b6100e861013b36600461069f565b6001600160a01b031660009081526020819052604090205490565b6100ab610288565b6100d461016c366004610638565b610297565b6100e861017f3660046106c1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101b9906106f4565b80601f01602080910402602001604051908101604052809291908181526020018280546101e5906106f4565b80156102325780601f1061020757610100808354040283529160200191610232565b820191906000526020600020905b81548152906001019060200180831161021557829003601f168201915b5050505050905090565b60003361024a8185856102a5565b60019150505b92915050565b6000336102648582856102b7565b61026f85858561033a565b506001949350505050565b6102848282610399565b5050565b6060600480546101b9906106f4565b60003361024a81858561033a565b6102b283838360016103cf565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610334578181101561032557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b610334848484840360006103cf565b50505050565b6001600160a01b03831661036457604051634b637e8f60e11b81526000600482015260240161031c565b6001600160a01b03821661038e5760405163ec442f0560e01b81526000600482015260240161031c565b6102b28383836104a4565b6001600160a01b0382166103c35760405163ec442f0560e01b81526000600482015260240161031c565b610284600083836104a4565b6001600160a01b0384166103f95760405163e602df0560e01b81526000600482015260240161031c565b6001600160a01b03831661042357604051634a1406b160e11b81526000600482015260240161031c565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561033457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161049691815260200190565b60405180910390a350505050565b6001600160a01b0383166104cf5780600260008282546104c4919061072e565b909155506105419050565b6001600160a01b038316600090815260208190526040902054818110156105225760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161031c565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661055d5760028054829003905561057c565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105c191815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156105fc57602081860181015160408684010152016105df565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461063357600080fd5b919050565b6000806040838503121561064b57600080fd5b6106548361061c565b946020939093013593505050565b60008060006060848603121561067757600080fd5b6106808461061c565b925061068e6020850161061c565b929592945050506040919091013590565b6000602082840312156106b157600080fd5b6106ba8261061c565b9392505050565b600080604083850312156106d457600080fd5b6106dd8361061c565b91506106eb6020840161061c565b90509250929050565b600181811c9082168061070857607f821691505b60208210810361072857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561025057634e487b7160e01b600052601160045260246000fdfea2646970667358221220ab34bedbd060678663cbf940c6c389c5c714e65ded28079781f69830456fb3d464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x662 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x288 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1B9 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E5 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x232 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x207 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x232 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x215 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x24A DUP2 DUP6 DUP6 PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x264 DUP6 DUP3 DUP6 PUSH2 0x2B7 JUMP JUMPDEST PUSH2 0x26F DUP6 DUP6 DUP6 PUSH2 0x33A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x284 DUP3 DUP3 PUSH2 0x399 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1B9 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x24A DUP2 DUP6 DUP6 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x2B2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x334 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x325 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x334 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x3CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x364 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH2 0x2B2 DUP4 DUP4 DUP4 PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH2 0x284 PUSH1 0x0 DUP4 DUP4 PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x334 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4CF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x72E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x541 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x55D JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x5DF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x654 DUP4 PUSH2 0x61C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x680 DUP5 PUSH2 0x61C JUMP JUMPDEST SWAP3 POP PUSH2 0x68E PUSH1 0x20 DUP6 ADD PUSH2 0x61C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BA DUP3 PUSH2 0x61C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DD DUP4 PUSH2 0x61C JUMP JUMPDEST SWAP2 POP PUSH2 0x6EB PUSH1 0x20 DUP5 ADD PUSH2 0x61C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x708 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x728 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x250 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB CALLVALUE 0xBE 0xDB 0xD0 PUSH1 0x67 DUP7 PUSH4 0xCBF940C6 0xC3 DUP10 0xC5 0xC7 EQ 0xE6 TSTORE 0xED 0x28 SMOD SWAP8 DUP2 0xF6 SWAP9 ADDRESS GASLIMIT PUSH16 0xB3D464736F6C634300081A0033000000 ",
							"sourceMap": "149:998:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1447:193;;;;;;:::i;:::-;;:::i;:::-;;;1194:14:5;;1187:22;1169:41;;1157:2;1142:18;1447:193:0;1029:187:5;1048:106:0;1135:12;;1048:106;;;1367:25:5;;;1355:2;1340:18;1048:106:0;1221:177:5;1646:251:0;;;;;;:::i;:::-;;:::i;951:91::-;;;1033:2;1924:36:5;;1912:2;1897:18;951:91:0;1782:184:5;740:161:3;;;;;;:::i;:::-;;:::i;:::-;;1160:125:0;;;;;;:::i;:::-;-1:-1:-1;;;;;1260:18:0;1234:7;1260:18;;;;;;;;;;;;1160:125;843:102;;;:::i;1904:185::-;;;;;;:::i;:::-;;:::i;1292:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1407:18:0;;;1381:7;1407:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;1292:149;739:98;793:13;825:5;818:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:98;:::o;1447:193::-;1529:4;1561:10;1581:31;1561:10;1597:7;1606:5;1581:8;:31::i;:::-;1629:4;1622:11;;;1447:193;;;;;:::o;1646:251::-;1742:4;1776:10;1796:37;1812:4;1776:10;1827:5;1796:15;:37::i;:::-;1843:26;1853:4;1859:2;1863:5;1843:9;:26::i;:::-;-1:-1:-1;1886:4:0;;1646:251;-1:-1:-1;;;;1646:251:0:o;740:161:3:-;873:21;879:7;888:5;873;:21::i;:::-;740:161;;:::o;843:102:0:-;899:13;931:7;924:14;;;;;:::i;1904:185::-;1982:4;2014:10;2034:27;2014:10;2051:2;2055:5;2034:9;:27::i;3127:128::-;3211:37;3220:5;3227:7;3236:5;3243:4;3211:8;:37::i;:::-;3127:128;;;:::o;3699:477::-;-1:-1:-1;;;;;1407:18:0;;;3798:24;1407:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;3864:37:0;;3860:310;;3940:5;3921:16;:24;3917:130;;;3972:60;;-1:-1:-1;;;3972:60:0;;-1:-1:-1;;;;;3032:32:5;;3972:60:0;;;3014:51:5;3081:18;;;3074:34;;;3124:18;;;3117:34;;;2987:18;;3972:60:0;;;;;;;;3917:130;4088:57;4097:5;4104:7;4132:5;4113:16;:24;4139:5;4088:8;:57::i;:::-;3788:388;3699:477;;;:::o;2098:309::-;-1:-1:-1;;;;;2189:18:0;;2185:86;;2230:30;;-1:-1:-1;;;2230:30:0;;2257:1;2230:30;;;3308:51:5;3281:18;;2230:30:0;3162:203:5;2185:86:0;-1:-1:-1;;;;;2284:16:0;;2280:86;;2323:32;;-1:-1:-1;;;2323:32:0;;2352:1;2323:32;;;3308:51:5;3281:18;;2323:32:0;3162:203:5;2280:86:0;2376:24;2384:4;2390:2;2394:5;2376:7;:24::i;937:208:3:-;-1:-1:-1;;;;;1007:21:3;;1003:91;;1051:32;;-1:-1:-1;;;1051:32:3;;1080:1;1051:32;;;3308:51:5;3281:18;;1051:32:3;3162:203:5;1003:91:3;1103:35;1119:1;1123:7;1132:5;1103:7;:35::i;3261:432:0:-;-1:-1:-1;;;;;3373:19:0;;3369:89;;3415:32;;-1:-1:-1;;;3415:32:0;;3444:1;3415:32;;;3308:51:5;3281:18;;3415:32:0;3162:203:5;3369:89:0;-1:-1:-1;;;;;3471:21:0;;3467:90;;3515:31;;-1:-1:-1;;;3515:31:0;;3543:1;3515:31;;;3308:51:5;3281:18;;3515:31:0;3162:203:5;3467:90:0;-1:-1:-1;;;;;3566:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;3611:76;;;;3661:7;-1:-1:-1;;;;;3645:31:0;3654:5;-1:-1:-1;;;;;3645:31:0;;3670:5;3645:31;;;;1367:25:5;;1355:2;1340:18;;1221:177;3645:31:0;;;;;;;;3261:432;;;;:::o;2414:706::-;-1:-1:-1;;;;;2503:18:0;;2499:359;;2553:5;2537:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;2499:359:0;;-1:-1:-1;2499:359:0;;-1:-1:-1;;;;;2611:15:0;;2589:19;2611:15;;;;;;;;;;;2644:19;;;2640:115;;;2690:50;;-1:-1:-1;;;2690:50:0;;-1:-1:-1;;;;;3032:32:5;;2690:50:0;;;3014:51:5;3081:18;;;3074:34;;;3124:18;;;3117:34;;;2987:18;;2690:50:0;2812:345:5;2640:115:0;-1:-1:-1;;;;;2796:15:0;;:9;:15;;;;;;;;;;2814:19;;;;2796:37;;2499:359;-1:-1:-1;;;;;2872:16:0;;2868:205;;2932:12;:21;;;;;;;2868:205;;;-1:-1:-1;;;;;3026:13:0;;:9;:13;;;;;;;;;;:22;;;;;;2868:205;3103:2;-1:-1:-1;;;;;3088:25:0;3097:4;-1:-1:-1;;;;;3088:25:0;;3107:5;3088:25;;;;1367::5;;1355:2;1340:18;;1221:177;3088:25:0;;;;;;;;2414:706;;;:::o;14:527:5:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;532:2;525;521:7;516:2;508:6;504:15;500:29;489:9;485:45;481:54;473:62;;;14:527;;;;:::o;546:173::-;614:20;;-1:-1:-1;;;;;663:31:5;;653:42;;643:70;;709:1;706;699:12;643:70;546:173;;;:::o;724:300::-;792:6;800;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;892:29;911:9;892:29;:::i;:::-;882:39;990:2;975:18;;;;962:32;;-1:-1:-1;;;724:300:5:o;1403:374::-;1480:6;1488;1496;1549:2;1537:9;1528:7;1524:23;1520:32;1517:52;;;1565:1;1562;1555:12;1517:52;1588:29;1607:9;1588:29;:::i;:::-;1578:39;;1636:38;1670:2;1659:9;1655:18;1636:38;:::i;:::-;1403:374;;1626:48;;-1:-1:-1;;;1743:2:5;1728:18;;;;1715:32;;1403:374::o;1971:186::-;2030:6;2083:2;2071:9;2062:7;2058:23;2054:32;2051:52;;;2099:1;2096;2089:12;2051:52;2122:29;2141:9;2122:29;:::i;:::-;2112:39;1971:186;-1:-1:-1;;;1971:186:5:o;2162:260::-;2230:6;2238;2291:2;2279:9;2270:7;2266:23;2262:32;2259:52;;;2307:1;2304;2297:12;2259:52;2330:29;2349:9;2330:29;:::i;:::-;2320:39;;2378:38;2412:2;2401:9;2397:18;2378:38;:::i;:::-;2368:48;;2162:260;;;;;:::o;2427:380::-;2506:1;2502:12;;;;2549;;;2570:61;;2624:4;2616:6;2612:17;2602:27;;2570:61;2677:2;2669:6;2666:14;2646:18;2643:38;2640:161;;2723:10;2718:3;2714:20;2711:1;2704:31;2758:4;2755:1;2748:15;2786:4;2783:1;2776:15;2640:161;;2427:380;;;:::o;3370:222::-;3435:9;;;3456:10;;;3453:133;;;3508:10;3503:3;3499:20;3496:1;3489:31;3543:4;3540:1;3533:15;3571:4;3568:1;3561:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "385000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22639",
								"balanceOf(address)": "1262",
								"decimals()": "266",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1026",
								"transfer(address,uint256)": "44488",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 149,
									"end": 1147,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 149,
									"end": 1147,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 149,
									"end": 1147,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 635,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 635,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 635,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 635,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 635,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 192,
									"end": 635,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 192,
									"end": 635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 192,
									"end": 635,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 370,
									"end": 375,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 377,
									"end": 384,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 686,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 370,
									"end": 375,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 686,
									"end": 691,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 686,
									"end": 699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 686,
									"end": 699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 686,
									"end": 699,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 709,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 719,
									"end": 726,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 709,
									"end": 716,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 709,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 709,
									"end": 726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 709,
									"end": 726,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 709,
									"end": 726,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 478,
									"end": 496,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 478,
									"end": 496,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 478,
									"end": 496,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 492,
									"end": 496,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 478,
									"end": 496,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 475,
									"end": 629,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 475,
									"end": 629,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 507,
									"end": 542,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 513,
									"end": 526,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 528,
									"end": 541,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 507,
									"end": 512,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 507,
									"end": 542,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 507,
									"end": 542,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 507,
									"end": 542,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 475,
									"end": 629,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 475,
									"end": 629,
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 475,
									"end": 629,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 475,
									"end": 629,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 583,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 597,
									"end": 601,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 604,
									"end": 617,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 583,
									"end": 588,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 583,
									"end": 618,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 583,
									"end": 618,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 583,
									"end": 618,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 192,
									"end": 635,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 149,
									"end": 1147,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 149,
									"end": 1147,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 937,
									"end": 1145,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 937,
									"end": 1145,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1007,
									"end": 1028,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1007,
									"end": 1028,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1003,
									"end": 1094,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1003,
									"end": 1094,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4615,
									"end": 4666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4588,
									"end": 4606,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4588,
									"end": 4606,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1083,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1003,
									"end": 1094,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1003,
									"end": 1094,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1103,
									"end": 1138,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1119,
									"end": 1120,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1123,
									"end": 1130,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1137,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1103,
									"end": 1110,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1103,
									"end": 1138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1103,
									"end": 1138,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1103,
									"end": 1138,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 937,
									"end": 1145,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 937,
									"end": 1145,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 937,
									"end": 1145,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2414,
									"end": 3120,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 2414,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2503,
									"end": 2521,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2503,
									"end": 2521,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2858,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2499,
									"end": 2858,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2553,
									"end": 2558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2537,
									"end": 2549,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2537,
									"end": 2549,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2537,
									"end": 2558,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2537,
									"end": 2558,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2537,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2537,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 2537,
									"end": 2558,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2537,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2537,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 2537,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2537,
									"end": 2558,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 2537,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2537,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2537,
									"end": 2558,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2537,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2499,
									"end": 2858,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 2499,
									"end": 2858,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2499,
									"end": 2858,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2858,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2499,
									"end": 2858,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2589,
									"end": 2608,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2644,
									"end": 2663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2644,
									"end": 2663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2644,
									"end": 2663,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 2640,
									"end": 2755,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2640,
									"end": 2755,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 2640,
									"end": 2755,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2690,
									"end": 2740,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2690,
									"end": 2740,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2690,
									"end": 2740,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2690,
									"end": 2740,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5124,
									"end": 5156,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 5124,
									"end": 5156,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2690,
									"end": 2740,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2690,
									"end": 2740,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2690,
									"end": 2740,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5106,
									"end": 5157,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5173,
									"end": 5191,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 5173,
									"end": 5191,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5173,
									"end": 5191,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5166,
									"end": 5200,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5166,
									"end": 5200,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5166,
									"end": 5200,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5216,
									"end": 5234,
									"name": "PUSH",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 5216,
									"end": 5234,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5216,
									"end": 5234,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5209,
									"end": 5243,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5209,
									"end": 5243,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5209,
									"end": 5243,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5079,
									"end": 5097,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 5079,
									"end": 5097,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2690,
									"end": 2740,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 4904,
									"end": 5249,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2640,
									"end": 2755,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 2640,
									"end": 2755,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2796,
									"end": 2811,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2796,
									"end": 2811,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2796,
									"end": 2805,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2796,
									"end": 2811,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2796,
									"end": 2811,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2796,
									"end": 2811,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2796,
									"end": 2811,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2796,
									"end": 2811,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2796,
									"end": 2811,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2796,
									"end": 2811,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2796,
									"end": 2811,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2796,
									"end": 2811,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2796,
									"end": 2811,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2814,
									"end": 2833,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2814,
									"end": 2833,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2814,
									"end": 2833,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2814,
									"end": 2833,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2796,
									"end": 2833,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2796,
									"end": 2833,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2858,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 2499,
									"end": 2858,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2872,
									"end": 2888,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2872,
									"end": 2888,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2868,
									"end": 3073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 2868,
									"end": 3073,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2932,
									"end": 2944,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2932,
									"end": 2953,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2932,
									"end": 2953,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2932,
									"end": 2953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2932,
									"end": 2953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2932,
									"end": 2953,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2932,
									"end": 2953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2932,
									"end": 2953,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2868,
									"end": 3073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 2868,
									"end": 3073,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2868,
									"end": 3073,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 2868,
									"end": 3073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3026,
									"end": 3039,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3039,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3026,
									"end": 3039,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3039,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3039,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3039,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3026,
									"end": 3039,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3039,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3039,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3039,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3026,
									"end": 3039,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3039,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3048,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3048,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3048,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3048,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2868,
									"end": 3073,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 2868,
									"end": 3073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3103,
									"end": 3105,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3097,
									"end": 3101,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 3107,
									"end": 3112,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5400,
									"end": 5425,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5400,
									"end": 5425,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5388,
									"end": 5390,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5373,
									"end": 5391,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5373,
									"end": 5391,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5254,
									"end": 5431,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3113,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2414,
									"end": 3120,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2414,
									"end": 3120,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2414,
									"end": 3120,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2414,
									"end": 3120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 980,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 146,
									"end": 980,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 771,
									"end": 777,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 768,
									"end": 769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 765,
									"end": 778,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 883,
									"end": 887,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 867,
									"end": 881,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 863,
									"end": 888,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 863,
									"end": 888,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 857,
									"end": 889,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 830,
									"end": 855,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 830,
									"end": 855,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 823,
									"end": 890,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 786,
									"end": 798,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 948,
									"end": 949,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 939,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 920,
									"end": 939,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 920,
									"end": 939,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 941,
									"end": 945,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 946,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 924,
									"end": 930,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 146,
									"end": 980,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1955,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 985,
									"end": 1955,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 1122,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1130,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1140,
									"end": 1146,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1193,
									"end": 1196,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 1181,
									"end": 1190,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1172,
									"end": 1179,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1168,
									"end": 1191,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1164,
									"end": 1197,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1214,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1214,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1161,
									"end": 1214,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1210,
									"end": 1211,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 1208,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1200,
									"end": 1212,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1214,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1161,
									"end": 1214,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1237,
									"end": 1253,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1237,
									"end": 1253,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1265,
									"end": 1295,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 1295,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1262,
									"end": 1312,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1262,
									"end": 1312,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1262,
									"end": 1312,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1306,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1298,
									"end": 1310,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1262,
									"end": 1312,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1262,
									"end": 1312,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1384,
									"end": 1391,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1375,
									"end": 1381,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1373,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 1360,
									"end": 1382,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1331,
									"end": 1392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1392,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1331,
									"end": 1392,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1438,
									"end": 1440,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1423,
									"end": 1441,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1423,
									"end": 1441,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1417,
									"end": 1442,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1392,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1392,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1417,
									"end": 1442,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1454,
									"end": 1486,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1454,
									"end": 1486,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1451,
									"end": 1503,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1451,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1451,
									"end": 1503,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1499,
									"end": 1500,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1496,
									"end": 1497,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1489,
									"end": 1501,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1451,
									"end": 1503,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1451,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1522,
									"end": 1585,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1577,
									"end": 1584,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1566,
									"end": 1574,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1555,
									"end": 1564,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 1551,
									"end": 1575,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1522,
									"end": 1585,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1522,
									"end": 1585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1522,
									"end": 1585,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1522,
									"end": 1585,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1625,
									"end": 1627,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1610,
									"end": 1628,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1628,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1604,
									"end": 1629,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1672,
									"end": 1674,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1657,
									"end": 1675,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 1657,
									"end": 1675,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1676,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1512,
									"end": 1585,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1512,
									"end": 1585,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1604,
									"end": 1629,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1651,
									"end": 1676,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1705,
									"end": 1736,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1705,
									"end": 1736,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1695,
									"end": 1737,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1695,
									"end": 1737,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1755,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1685,
									"end": 1755,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1751,
									"end": 1752,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1749,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1741,
									"end": 1753,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1755,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1685,
									"end": 1755,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1845,
									"end": 1848,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1830,
									"end": 1849,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1830,
									"end": 1849,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1824,
									"end": 1850,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1779,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1779,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1888,
									"end": 1903,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1888,
									"end": 1903,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1881,
									"end": 1904,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1869,
									"end": 1905,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1869,
									"end": 1905,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1859,
									"end": 1923,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1859,
									"end": 1923,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1920,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1916,
									"end": 1917,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1909,
									"end": 1921,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1859,
									"end": 1923,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1859,
									"end": 1923,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1942,
									"end": 1949,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1955,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1955,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1955,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1955,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1955,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1955,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1955,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1955,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1955,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1960,
									"end": 2340,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1960,
									"end": 2340,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2039,
									"end": 2040,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2035,
									"end": 2047,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2035,
									"end": 2047,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2035,
									"end": 2047,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2035,
									"end": 2047,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2082,
									"end": 2094,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2082,
									"end": 2094,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2082,
									"end": 2094,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2103,
									"end": 2164,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 2103,
									"end": 2164,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2157,
									"end": 2161,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 2149,
									"end": 2155,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2145,
									"end": 2162,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2135,
									"end": 2162,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2135,
									"end": 2162,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2103,
									"end": 2164,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 2103,
									"end": 2164,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2210,
									"end": 2212,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2202,
									"end": 2208,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2199,
									"end": 2213,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2179,
									"end": 2197,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2176,
									"end": 2214,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2173,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2173,
									"end": 2334,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2256,
									"end": 2266,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 2251,
									"end": 2254,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 2247,
									"end": 2267,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2244,
									"end": 2245,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2237,
									"end": 2268,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2291,
									"end": 2295,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 2288,
									"end": 2289,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2281,
									"end": 2296,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2319,
									"end": 2323,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2316,
									"end": 2317,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2309,
									"end": 2324,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2173,
									"end": 2334,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2173,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2173,
									"end": 2334,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1960,
									"end": 2340,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1960,
									"end": 2340,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1960,
									"end": 2340,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1960,
									"end": 2340,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2471,
									"end": 2989,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2471,
									"end": 2989,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2573,
									"end": 2575,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2568,
									"end": 2571,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2565,
									"end": 2576,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2562,
									"end": 2983,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2562,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2562,
									"end": 2983,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2609,
									"end": 2614,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2606,
									"end": 2607,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2599,
									"end": 2615,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2653,
									"end": 2657,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2650,
									"end": 2651,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2640,
									"end": 2658,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2723,
									"end": 2725,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2711,
									"end": 2721,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2707,
									"end": 2726,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2704,
									"end": 2705,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2700,
									"end": 2727,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2690,
									"end": 2728,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2759,
									"end": 2763,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2747,
									"end": 2757,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2744,
									"end": 2764,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2741,
									"end": 2788,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2741,
									"end": 2788,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 2741,
									"end": 2788,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2782,
									"end": 2786,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2741,
									"end": 2788,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 2741,
									"end": 2788,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2837,
									"end": 2839,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2832,
									"end": 2835,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2828,
									"end": 2840,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2825,
									"end": 2826,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2821,
									"end": 2841,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2815,
									"end": 2819,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2811,
									"end": 2842,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2801,
									"end": 2842,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2801,
									"end": 2842,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2892,
									"end": 2973,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2892,
									"end": 2973,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2910,
									"end": 2912,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2903,
									"end": 2908,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2900,
									"end": 2913,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2892,
									"end": 2973,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2892,
									"end": 2973,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 2892,
									"end": 2973,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2969,
									"end": 2970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2955,
									"end": 2971,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2955,
									"end": 2971,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2936,
									"end": 2937,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2925,
									"end": 2938,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2892,
									"end": 2973,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2892,
									"end": 2973,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2892,
									"end": 2973,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 2892,
									"end": 2973,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 2899,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 2899,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2562,
									"end": 2983,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2562,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2471,
									"end": 2989,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2471,
									"end": 2989,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2471,
									"end": 2989,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2471,
									"end": 2989,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3165,
									"end": 4464,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 3165,
									"end": 4464,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3285,
									"end": 3295,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3285,
									"end": 3295,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3307,
									"end": 3337,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3307,
									"end": 3337,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3304,
									"end": 3360,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3304,
									"end": 3360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 3304,
									"end": 3360,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3340,
									"end": 3358,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 3340,
									"end": 3358,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 3340,
									"end": 3358,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3340,
									"end": 3358,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 3340,
									"end": 3358,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3369,
									"end": 3466,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3459,
									"end": 3465,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3419,
									"end": 3457,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3451,
									"end": 3455,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3445,
									"end": 3456,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3419,
									"end": 3457,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 3419,
									"end": 3457,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3419,
									"end": 3457,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3419,
									"end": 3457,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3413,
									"end": 3417,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3369,
									"end": 3466,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 3369,
									"end": 3466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3369,
									"end": 3466,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3369,
									"end": 3466,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3515,
									"end": 3519,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3546,
									"end": 3548,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3535,
									"end": 3549,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3535,
									"end": 3549,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3563,
									"end": 3564,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3558,
									"end": 4207,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3558,
									"end": 4207,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3558,
									"end": 4207,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 3558,
									"end": 4207,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4251,
									"end": 4252,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4268,
									"end": 4274,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4265,
									"end": 4354,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4265,
									"end": 4354,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 4265,
									"end": 4354,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4320,
									"end": 4339,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4320,
									"end": 4339,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4320,
									"end": 4339,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4314,
									"end": 4340,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4265,
									"end": 4354,
									"name": "tag",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 4265,
									"end": 4354,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3122,
									"end": 3123,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3118,
									"end": 3129,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3118,
									"end": 3129,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3118,
									"end": 3129,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3114,
									"end": 3138,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3110,
									"end": 3139,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3100,
									"end": 3140,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3146,
									"end": 3147,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3142,
									"end": 3153,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3142,
									"end": 3153,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3142,
									"end": 3153,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3097,
									"end": 3154,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4367,
									"end": 4448,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4367,
									"end": 4448,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3528,
									"end": 4458,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3528,
									"end": 4458,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3558,
									"end": 4207,
									"name": "tag",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 3558,
									"end": 4207,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2418,
									"end": 2419,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2411,
									"end": 2425,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2411,
									"end": 2425,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2411,
									"end": 2425,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2455,
									"end": 2459,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2442,
									"end": 2460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2442,
									"end": 2460,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3594,
									"end": 3614,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3594,
									"end": 3614,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3594,
									"end": 3614,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3712,
									"end": 3934,
									"name": "tag",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 3712,
									"end": 3934,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3726,
									"end": 3733,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3723,
									"end": 3724,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3720,
									"end": 3734,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3712,
									"end": 3934,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3712,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 3712,
									"end": 3934,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3808,
									"end": 3827,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3808,
									"end": 3827,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3808,
									"end": 3827,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3802,
									"end": 3828,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3787,
									"end": 3829,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3787,
									"end": 3829,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3915,
									"end": 3919,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3900,
									"end": 3920,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3900,
									"end": 3920,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3900,
									"end": 3920,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3900,
									"end": 3920,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3868,
									"end": 3869,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3742,
									"end": 3754,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3712,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 3712,
									"end": 3934,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3712,
									"end": 3934,
									"name": "tag",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 3712,
									"end": 3934,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3716,
									"end": 3719,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3962,
									"end": 3968,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3953,
									"end": 3960,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3950,
									"end": 3969,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3947,
									"end": 4148,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3947,
									"end": 4148,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 3947,
									"end": 4148,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4023,
									"end": 4042,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 4023,
									"end": 4042,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4023,
									"end": 4042,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4017,
									"end": 4043,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4106,
									"end": 4107,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 4102,
									"end": 4116,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 4102,
									"end": 4116,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4102,
									"end": 4116,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 4118,
									"end": 4121,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 4098,
									"end": 4122,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4094,
									"end": 4131,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 4090,
									"end": 4132,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 4075,
									"end": 4133,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4060,
									"end": 4134,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4060,
									"end": 4134,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3947,
									"end": 4148,
									"name": "tag",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 3947,
									"end": 4148,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4194,
									"end": 4195,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4178,
									"end": 4192,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4178,
									"end": 4192,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4178,
									"end": 4192,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 4174,
									"end": 4196,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4161,
									"end": 4197,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4161,
									"end": 4197,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3165,
									"end": 4464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4677,
									"end": 4899,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 4677,
									"end": 4899,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4742,
									"end": 4751,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4742,
									"end": 4751,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4742,
									"end": 4751,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4763,
									"end": 4773,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4763,
									"end": 4773,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4763,
									"end": 4773,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 4760,
									"end": 4893,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4760,
									"end": 4893,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 4760,
									"end": 4893,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4815,
									"end": 4825,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 4810,
									"end": 4813,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 4806,
									"end": 4826,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 4803,
									"end": 4804,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4796,
									"end": 4827,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4854,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 4847,
									"end": 4848,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 4840,
									"end": 4855,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4878,
									"end": 4882,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4875,
									"end": 4876,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4868,
									"end": 4883,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4760,
									"end": 4893,
									"name": "tag",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 4760,
									"end": 4893,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4677,
									"end": 4899,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4677,
									"end": 4899,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4677,
									"end": 4899,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4677,
									"end": 4899,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4677,
									"end": 4899,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5254,
									"end": 5431,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 5254,
									"end": 5431,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 149,
									"end": 1147,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 1147,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 149,
									"end": 1147,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 1147,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 1147,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 149,
									"end": 1147,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 1147,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab34bedbd060678663cbf940c6c389c5c714e65ded28079781f69830456fb3d464736f6c634300081a0033",
									".code": [
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 1147,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 739,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 739,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 739,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 739,
											"end": 837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 739,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 739,
											"end": 837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 739,
											"end": 837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 739,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1447,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1447,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1208,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1209,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1210,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1159,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1142,
											"end": 1160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1029,
											"end": 1216,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1154,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1048,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1154,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1048,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1221,
											"end": 1398,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1646,
											"end": 1897,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1646,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1646,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1646,
											"end": 1897,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1897,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1646,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1646,
											"end": 1897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1897,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1646,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1646,
											"end": 1897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1042,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 951,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 1042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 951,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1782,
											"end": 1966,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 740,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 740,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 740,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 740,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 740,
											"end": 901,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 740,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 740,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 740,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 740,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 740,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 740,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 740,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 740,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 740,
											"end": 901,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1160,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1285,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 843,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 843,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 843,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 843,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1904,
											"end": 2089,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1904,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1904,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1904,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1904,
											"end": 2089,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1904,
											"end": 2089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1904,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1904,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1904,
											"end": 2089,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1904,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1904,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1904,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1441,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1292,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1292,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1292,
											"end": 1441,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1441,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1292,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1292,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1441,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1292,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1441,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 739,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 825,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 818,
											"end": 830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 818,
											"end": 830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 739,
											"end": 837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1571,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1561,
											"end": 1571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1611,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1581,
											"end": 1612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1581,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1629,
											"end": 1633,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1622,
											"end": 1633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1897,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1646,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1786,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1812,
											"end": 1816,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1786,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1796,
											"end": 1833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1833,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1796,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1853,
											"end": 1857,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1859,
											"end": 1861,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1868,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1843,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1886,
											"end": 1890,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1886,
											"end": 1890,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1646,
											"end": 1897,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 740,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 873,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 879,
											"end": 886,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 888,
											"end": 893,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 873,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 873,
											"end": 894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 873,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 873,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 740,
											"end": 901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 740,
											"end": 901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 740,
											"end": 901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 843,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 843,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 899,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 931,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 924,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 924,
											"end": 938,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 924,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 924,
											"end": 938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 924,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 924,
											"end": 938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1904,
											"end": 2089,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1904,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2024,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2014,
											"end": 2024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2051,
											"end": 2053,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2060,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2034,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3255,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3127,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3211,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3234,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3211,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3211,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3211,
											"end": 3248,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3211,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 4176,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3699,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3864,
											"end": 3901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 3901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3860,
											"end": 4170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3940,
											"end": 3945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 3937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 3945,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3917,
											"end": 4047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3917,
											"end": 4047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3917,
											"end": 4047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3032,
											"end": 3064,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3065,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3099,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3081,
											"end": 3099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3099,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3151,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3151,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3917,
											"end": 4047,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3917,
											"end": 4047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4088,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4097,
											"end": 4102,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4111,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4137,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4129,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4088,
											"end": 4145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4088,
											"end": 4145,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4088,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3788,
											"end": 4176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 4176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 4176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 4176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 4176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2407,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2098,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2185,
											"end": 2271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 2260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2230,
											"end": 2260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3308,
											"end": 3359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2230,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3162,
											"end": 3365,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2271,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2185,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2300,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2280,
											"end": 2366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2352,
											"end": 2353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3308,
											"end": 3359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3162,
											"end": 3365,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2280,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2384,
											"end": 2388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2376,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 937,
											"end": 1145,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 937,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1007,
											"end": 1028,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1003,
											"end": 1094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1083,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1083,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1051,
											"end": 1083,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1083,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1083,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1051,
											"end": 1083,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1083,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3308,
											"end": 3359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3162,
											"end": 3365,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1094,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1003,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1119,
											"end": 1120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1130,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1103,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3261,
											"end": 3693,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3261,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3373,
											"end": 3392,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3415,
											"end": 3447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3415,
											"end": 3447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3415,
											"end": 3447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3308,
											"end": 3359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3162,
											"end": 3365,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3471,
											"end": 3492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3467,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3467,
											"end": 3557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3515,
											"end": 3546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3515,
											"end": 3546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3308,
											"end": 3359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3515,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3162,
											"end": 3365,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3557,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3467,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3577,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3593,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3593,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3593,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3601,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3611,
											"end": 3687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 3670,
											"end": 3675,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1398,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2414,
											"end": 3120,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2414,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2503,
											"end": 2521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2499,
											"end": 2858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2549,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2537,
											"end": 2549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2537,
											"end": 2558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2499,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2499,
											"end": 2858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2499,
											"end": 2858,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2858,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2499,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2611,
											"end": 2626,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 2626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2611,
											"end": 2626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2626,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2755,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2640,
											"end": 2755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2690,
											"end": 2740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2740,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3032,
											"end": 3064,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2690,
											"end": 2740,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3065,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3099,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3081,
											"end": 3099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3099,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3151,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3151,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2812,
											"end": 3157,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2755,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2640,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2833,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2858,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2499,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 2888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2872,
											"end": 2888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2868,
											"end": 3073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2932,
											"end": 2953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 2953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 2953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 2953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 2953,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 2953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 2953,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2868,
											"end": 3073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 3073,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2868,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 3073,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2868,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3101,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3107,
											"end": 3112,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1398,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2414,
											"end": 3120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2414,
											"end": 3120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2414,
											"end": 3120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2414,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 541,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 14,
											"end": 541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 287,
											"end": 293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 284,
											"end": 285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 294,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 273,
											"end": 413,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 398,
											"end": 400,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 382,
											"end": 396,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 378,
											"end": 401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 378,
											"end": 401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 372,
											"end": 402,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 367,
											"end": 369,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 348,
											"end": 365,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 344,
											"end": 370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 337,
											"end": 403,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 302,
											"end": 312,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 277,
											"end": 280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 462,
											"end": 463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 454,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 437,
											"end": 446,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 429,
											"end": 460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 532,
											"end": 534,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 527,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 521,
											"end": 528,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 504,
											"end": 519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 529,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 489,
											"end": 498,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 485,
											"end": 530,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 481,
											"end": 535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 473,
											"end": 535,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 473,
											"end": 535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 473,
											"end": 535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 541,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14,
											"end": 541,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 546,
											"end": 719,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 546,
											"end": 719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 614,
											"end": 634,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 614,
											"end": 634,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 663,
											"end": 694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 663,
											"end": 694,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 653,
											"end": 695,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 653,
											"end": 695,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 643,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 643,
											"end": 713,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 709,
											"end": 710,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 707,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 699,
											"end": 711,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 643,
											"end": 713,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 643,
											"end": 713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 546,
											"end": 719,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 546,
											"end": 719,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 546,
											"end": 719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 546,
											"end": 719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 724,
											"end": 1024,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 724,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 792,
											"end": 798,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 806,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 832,
											"end": 839,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 828,
											"end": 851,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 824,
											"end": 856,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 821,
											"end": 873,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 821,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 821,
											"end": 873,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 869,
											"end": 870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 867,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 871,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 821,
											"end": 873,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 821,
											"end": 873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 892,
											"end": 921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 892,
											"end": 921,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 882,
											"end": 921,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 990,
											"end": 992,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 975,
											"end": 993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 975,
											"end": 993,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 975,
											"end": 993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 962,
											"end": 994,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 962,
											"end": 994,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 724,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1777,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1403,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1551,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1535,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1552,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1563,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1567,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1607,
											"end": 1616,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1588,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1617,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1588,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1617,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1670,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 1668,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1636,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1674,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1636,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1777,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1777,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1674,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1674,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1743,
											"end": 1745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1715,
											"end": 1747,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1715,
											"end": 1747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2157,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1971,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2085,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2071,
											"end": 2080,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2069,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2054,
											"end": 2086,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2101,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2141,
											"end": 2150,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2122,
											"end": 2151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2151,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2122,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2151,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2157,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2422,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2162,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2230,
											"end": 2236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2293,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2288,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2270,
											"end": 2277,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2289,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2305,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2309,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2349,
											"end": 2358,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2330,
											"end": 2359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2359,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2330,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2320,
											"end": 2359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2320,
											"end": 2359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2412,
											"end": 2414,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2378,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2416,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2378,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2422,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2422,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2807,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2427,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2507,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2561,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2570,
											"end": 2631,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2628,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2616,
											"end": 2622,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2612,
											"end": 2629,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2631,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2570,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2679,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2669,
											"end": 2675,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2646,
											"end": 2664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2681,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2640,
											"end": 2801,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2733,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2714,
											"end": 2734,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2712,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2735,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2758,
											"end": 2762,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2755,
											"end": 2756,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2748,
											"end": 2763,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2790,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2791,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2801,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2640,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2807,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3592,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3370,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3466,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3466,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3466,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3453,
											"end": 3586,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3453,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3453,
											"end": 3586,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 3518,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3499,
											"end": 3519,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3543,
											"end": 3547,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3540,
											"end": 3541,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3533,
											"end": 3548,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3575,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3568,
											"end": 3569,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3576,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contract/token/ERC20/CorssCToken.sol",
								"contract/token/ERC20/IERC20.sol",
								"contract/token/ERC20/extensions/IERC20Metadata.sol",
								"contract/token/ERC20/implementation.sol",
								"contract/token/interfaces/draft-IERC6093.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"minterAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"ismainChain\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/token/ERC20/implementation.sol\":\"tokenLaunch\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/token/ERC20/CorssCToken.sol\":{\"keccak256\":\"0xa3f5f4360f6dcda75bd70b32f3bce6e591fd53b292cd75041e7e51c5fd6e0103\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://459c988ee5e12aaa85c0767b342f55357472aa386ce09132c70bb045801d649f\",\"dweb:/ipfs/QmchEwjWWF8cXYoCxetDEv3sZd75uSRJxuXnBoYjHf64Qe\"]},\"contract/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contract/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"contract/token/ERC20/implementation.sol\":{\"keccak256\":\"0x9b0c38436afb69bac040c1f9257e8b62cc18c4c0b2b1cc9c30089e87fbbc3574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18ed8ffc61668b0c6af33549b13b94ff64db7dc5a2a58233e6a85ba01a70c6e9\",\"dweb:/ipfs/QmZQTvEPfbKX9jSqtZpbVWAB3wE1K6wXF8yR9R1KbpE7YT\"]},\"contract/token/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 17,
								"contract": "contract/token/ERC20/implementation.sol:tokenLaunch",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 23,
								"contract": "contract/token/ERC20/implementation.sol:tokenLaunch",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 25,
								"contract": "contract/token/ERC20/implementation.sol:tokenLaunch",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 27,
								"contract": "contract/token/ERC20/implementation.sol:tokenLaunch",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 29,
								"contract": "contract/token/ERC20/implementation.sol:tokenLaunch",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract/token/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/token/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/token/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/token/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/token/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/token/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/token/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contract/token/ERC20/CorssCToken.sol": {
				"ast": {
					"absolutePath": "contract/token/ERC20/CorssCToken.sol",
					"exportedSymbols": {
						"CrossCToken": [
							437
						],
						"IERC20": [
							515
						],
						"IERC20Errors": [
							671
						],
						"IERC20Metadata": [
							541
						]
					},
					"id": 438,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "contract/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 438,
							"sourceUnit": 516,
							"src": "58:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 515,
										"src": "66:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contract/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 438,
							"sourceUnit": 542,
							"src": "95:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 541,
										"src": "103:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contract/token/interfaces/draft-IERC6093.sol",
							"file": "contract/token/interfaces/draft-IERC6093.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 438,
							"sourceUnit": 767,
							"src": "230:74:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 671,
										"src": "238:12:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nameLocations": [
											"340:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 515,
										"src": "340:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "340:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nameLocations": [
											"348:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 541,
										"src": "348:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "348:14:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IERC20Errors",
										"nameLocations": [
											"364:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 671,
										"src": "364:12:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "364:12:0"
								}
							],
							"canonicalName": "CrossCToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 437,
							"linearizedBaseContracts": [
								437,
								671,
								541,
								515
							],
							"name": "CrossCToken",
							"nameLocation": "324:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "427:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 437,
									"src": "383:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 16,
										"keyName": "account",
										"keyNameLocation": "399:7:0",
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "391:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "383:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 15,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "410:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "514:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 437,
									"src": "442:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 22,
										"keyName": "account",
										"keyNameLocation": "458:7:0",
										"keyType": {
											"id": 18,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "450:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "442:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 21,
											"keyName": "spender",
											"keyNameLocation": "485:7:0",
											"keyType": {
												"id": 19,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "477:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "469:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 20,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "496:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "547:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 437,
									"src": "531:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "531:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "580:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 437,
									"src": "565:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "565:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "606:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 437,
									"src": "591:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 28,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "591:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "676:57:0",
										"statements": [
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 36,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "686:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 37,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "694:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "686:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "686:13:0"
											},
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 40,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 41,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "719:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "709:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "709:17:0"
											}
										]
									},
									"id": 45,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "646:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "632:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 30,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "632:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "667:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "653:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 32,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "653:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:44:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "676:0:0"
									},
									"scope": 437,
									"src": "620:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										528
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "808:29:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "818:12:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "748:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "775:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "752:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "793:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "793:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:15:0"
									},
									"scope": 437,
									"src": "739:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										534
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "914:31:0",
										"statements": [
											{
												"expression": {
													"id": 60,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "931:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 59,
												"id": 61,
												"nodeType": "Return",
												"src": "924:14:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "852:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 56,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "881:8:0"
									},
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "899:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 57,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "899:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:15:0"
									},
									"scope": 437,
									"src": "843:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										540
									],
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1016:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1033:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 68,
												"id": 70,
												"nodeType": "Return",
												"src": "1026:9:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "960:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 65,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "991:8:0"
									},
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1009:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 66,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1009:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:7:0"
									},
									"scope": 437,
									"src": "951:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										464
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "1118:36:0",
										"statements": [
											{
												"expression": {
													"id": 78,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "1135:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 77,
												"id": 79,
												"nodeType": "Return",
												"src": "1128:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1057:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1091:8:0"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1068:2:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1109:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:9:0"
									},
									"scope": 437,
									"src": "1048:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										472
									],
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "1243:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 89,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1260:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 91,
													"indexExpression": {
														"id": 90,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "1270:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1260:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 88,
												"id": 92,
												"nodeType": "Return",
												"src": "1253:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1169:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 85,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1216:8:0"
									},
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1187:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1179:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:17:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1234:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:9:0"
									},
									"scope": 437,
									"src": "1160:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										492
									],
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "1390:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 104,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1407:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 106,
														"indexExpression": {
															"id": 105,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "1419:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1407:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 108,
													"indexExpression": {
														"id": 107,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "1426:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1407:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 103,
												"id": 109,
												"nodeType": "Return",
												"src": "1400:34:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1301:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 100,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1363:8:0"
									},
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1319:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1311:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:32:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1381:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:9:0"
									},
									"scope": 437,
									"src": "1292:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										502
									],
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "1535:105:0",
										"statements": [
											{
												"assignments": [
													122
												],
												"declarations": [
													{
														"constant": false,
														"id": 122,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "1553:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 134,
														"src": "1545:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 121,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1545:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 125,
												"initialValue": {
													"expression": {
														"id": 123,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1561:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1565:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1561:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1545:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 127,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1590:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 128,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1597:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 129,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "1606:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 126,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															330,
															389
														],
														"referencedDeclaration": 330,
														"src": "1581:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1581:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "1581:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1629:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 120,
												"id": 133,
												"nodeType": "Return",
												"src": "1622:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1456:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 117,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1511:8:0"
									},
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1472:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1464:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1489:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1481:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1463:32:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1529:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1529:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:6:0"
									},
									"scope": 437,
									"src": "1447:193:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										514
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "1748:149:0",
										"statements": [
											{
												"assignments": [
													148
												],
												"declarations": [
													{
														"constant": false,
														"id": 148,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "1766:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 166,
														"src": "1758:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 147,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1758:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": {
													"expression": {
														"id": 149,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1776:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1780:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1776:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1758:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1812:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 154,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "1818:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 155,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1827:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 152,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "1796:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1796:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "1796:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 159,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1859:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 161,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1863:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 158,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "1843:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1843:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "1843:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1886:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 146,
												"id": 165,
												"nodeType": "Return",
												"src": "1879:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1655:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 143,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1724:8:0"
									},
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1690:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1702:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1694:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1667:41:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1742:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1742:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1741:6:0"
									},
									"scope": 437,
									"src": "1646:251:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "1988:101:0",
										"statements": [
											{
												"assignments": [
													178
												],
												"declarations": [
													{
														"constant": false,
														"id": 178,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2006:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 190,
														"src": "1998:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 177,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1998:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"expression": {
														"id": 179,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2014:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2018:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2014:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1998:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 183,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "2044:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 184,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "2051:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 185,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2055:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 182,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "2034:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2034:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "2034:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2078:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 176,
												"id": 189,
												"nodeType": "Return",
												"src": "2071:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1913:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1964:8:0"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1930:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1922:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1942:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1934:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:27:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1982:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1982:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1981:6:0"
									},
									"scope": 437,
									"src": "1904:185:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "2175:232:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2189:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2205:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2197:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 201,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2197:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2197:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2189:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 214,
												"nodeType": "IfStatement",
												"src": "2185:86:0",
												"trueBody": {
													"id": 213,
													"nodeType": "Block",
													"src": "2209:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2257:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2249:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 207,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2249:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2249:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 206,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "2230:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2230:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 212,
															"nodeType": "RevertStatement",
															"src": "2223:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "2284:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2298:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2290:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 216,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2290:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2290:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2284:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "IfStatement",
												"src": "2280:86:0",
												"trueBody": {
													"id": 228,
													"nodeType": "Block",
													"src": "2302:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2352:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2344:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 222,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2344:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2344:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 221,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "2323:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2323:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 227,
															"nodeType": "RevertStatement",
															"src": "2316:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "2384:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 232,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2390:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 233,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "2394:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 230,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "2376:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2376:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "2376:24:0"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "2107:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2125:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2117:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2139:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2131:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2143:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2116:41:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2175:0:0"
									},
									"scope": 437,
									"src": "2098:309:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "2489:631:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 246,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "2503:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2519:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2511:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 247,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2511:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2511:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2503:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 283,
													"nodeType": "Block",
													"src": "2575:283:0",
													"statements": [
														{
															"assignments": [
																258
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 258,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "2597:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 283,
																	"src": "2589:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 257,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2589:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 262,
															"initialValue": {
																"baseExpression": {
																	"id": 259,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "2611:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 261,
																"indexExpression": {
																	"id": 260,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "2621:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2611:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2589:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 263,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "2644:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "2658:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2644:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 273,
															"nodeType": "IfStatement",
															"src": "2640:115:0",
															"trueBody": {
																"id": 272,
																"nodeType": "Block",
																"src": "2665:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 267,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 239,
																					"src": "2715:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 268,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 258,
																					"src": "2721:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 269,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 243,
																					"src": "2734:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 266,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 641,
																				"src": "2690:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2690:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 271,
																		"nodeType": "RevertStatement",
																		"src": "2683:57:0"
																	}
																]
															}
														},
														{
															"id": 282,
															"nodeType": "UncheckedBlock",
															"src": "2768:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 274,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 17,
																				"src": "2796:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 276,
																			"indexExpression": {
																				"id": 275,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 239,
																				"src": "2806:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "2796:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 277,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "2814:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 278,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 243,
																				"src": "2828:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2814:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2796:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 281,
																	"nodeType": "ExpressionStatement",
																	"src": "2796:37:0"
																}
															]
														}
													]
												},
												"id": 284,
												"nodeType": "IfStatement",
												"src": "2499:359:0",
												"trueBody": {
													"id": 256,
													"nodeType": "Block",
													"src": "2523:46:0",
													"statements": [
														{
															"expression": {
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 252,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "2537:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 253,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "2553:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2537:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 255,
															"nodeType": "ExpressionStatement",
															"src": "2537:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 285,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2872:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2878:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 286,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2878:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2872:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "2984:89:0",
													"statements": [
														{
															"id": 303,
															"nodeType": "UncheckedBlock",
															"src": "2998:65:0",
															"statements": [
																{
																	"expression": {
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 297,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 17,
																				"src": "3026:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 299,
																			"indexExpression": {
																				"id": 298,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 241,
																				"src": "3036:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "3026:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 300,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "3043:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3026:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 302,
																	"nodeType": "ExpressionStatement",
																	"src": "3026:22:0"
																}
															]
														}
													]
												},
												"id": 305,
												"nodeType": "IfStatement",
												"src": "2868:205:0",
												"trueBody": {
													"id": 296,
													"nodeType": "Block",
													"src": "2890:88:0",
													"statements": [
														{
															"id": 295,
															"nodeType": "UncheckedBlock",
															"src": "2904:64:0",
															"statements": [
																{
																	"expression": {
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 291,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "2932:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 292,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "2948:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2932:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 294,
																	"nodeType": "ExpressionStatement",
																	"src": "2932:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 307,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3097:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "3103:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 309,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "3107:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 306,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "3088:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3088:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "EmitStatement",
												"src": "3083:30:0"
											}
										]
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2423:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2439:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2431:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2453:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2445:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2465:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2457:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:41:0"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 437,
									"src": "2414:706:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "3201:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 323,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "3220:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 324,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "3227:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 325,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "3236:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3243:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 322,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															330,
															389
														],
														"referencedDeclaration": 389,
														"src": "3211:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3211:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "3211:37:0"
											}
										]
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "3136:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3153:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "3145:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3168:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "3160:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3185:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "3177:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3144:47:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3201:0:0"
									},
									"scope": 437,
									"src": "3127:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "3359:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 341,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "3373:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3390:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3382:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 342,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3382:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3382:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3373:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 355,
												"nodeType": "IfStatement",
												"src": "3369:89:0",
												"trueBody": {
													"id": 354,
													"nodeType": "Block",
													"src": "3394:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3444:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3436:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 348,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3436:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3436:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 347,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "3415:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3415:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 353,
															"nodeType": "RevertStatement",
															"src": "3408:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 356,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "3471:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3490:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3482:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 357,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3482:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3482:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3471:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 370,
												"nodeType": "IfStatement",
												"src": "3467:90:0",
												"trueBody": {
													"id": 369,
													"nodeType": "Block",
													"src": "3494:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3543:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3535:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 363,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3535:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3535:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 362,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "3515:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3515:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 368,
															"nodeType": "RevertStatement",
															"src": "3508:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 371,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "3566:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 374,
															"indexExpression": {
																"id": 372,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "3578:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3566:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 375,
														"indexExpression": {
															"id": 373,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "3585:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3566:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 376,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "3596:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3566:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "3566:35:0"
											},
											{
												"condition": {
													"id": 379,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 338,
													"src": "3615:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 387,
												"nodeType": "IfStatement",
												"src": "3611:76:0",
												"trueBody": {
													"id": 386,
													"nodeType": "Block",
													"src": "3626:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 381,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "3654:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 382,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "3661:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 383,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 336,
																		"src": "3670:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 380,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "3645:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3645:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 385,
															"nodeType": "EmitStatement",
															"src": "3640:36:0"
														}
													]
												}
											}
										]
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "3270:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3287:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3279:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3302:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3319:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3311:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "3331:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3326:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:63:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3359:0:0"
									},
									"scope": 437,
									"src": "3261:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "3788:388:0",
										"statements": [
											{
												"assignments": [
													399
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "3806:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "3798:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3798:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "3835:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "3842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 400,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "3825:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3825:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3798:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 405,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "3864:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3889:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 407,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3889:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 406,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3884:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3884:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3898:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3884:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3864:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 434,
												"nodeType": "IfStatement",
												"src": "3860:310:0",
												"trueBody": {
													"id": 433,
													"nodeType": "Block",
													"src": "3903:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 412,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "3921:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 413,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "3940:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3921:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 422,
															"nodeType": "IfStatement",
															"src": "3917:130:0",
															"trueBody": {
																"id": 421,
																"nodeType": "Block",
																"src": "3947:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 416,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 393,
																					"src": "3999:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 417,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 399,
																					"src": "4008:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 418,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 395,
																					"src": "4026:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 415,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 660,
																				"src": "3972:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3972:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 420,
																		"nodeType": "RevertStatement",
																		"src": "3965:67:0"
																	}
																]
															}
														},
														{
															"id": 432,
															"nodeType": "UncheckedBlock",
															"src": "4060:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 424,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 391,
																				"src": "4097:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 425,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 393,
																				"src": "4104:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 426,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 399,
																					"src": "4113:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 427,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 395,
																					"src": "4132:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4113:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4139:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 423,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				330,
																				389
																			],
																			"referencedDeclaration": 389,
																			"src": "4088:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4088:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 431,
																	"nodeType": "ExpressionStatement",
																	"src": "4088:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "3708:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3732:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "3724:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3747:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "3739:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3764:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "3756:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3723:47:0"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3788:0:0"
									},
									"scope": 437,
									"src": "3699:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 438,
							"src": "306:3872:0",
							"usedErrors": [
								641,
								646,
								651,
								660,
								665,
								670
							],
							"usedEvents": [
								449,
								458
							]
						}
					],
					"src": "32:4147:0"
				},
				"id": 0
			},
			"contract/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "contract/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							515
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 439,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 440,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 449,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 458,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 515,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 515,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 515,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 515,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 515,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 515,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 516,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								449,
								458
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"contract/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "contract/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							515
						],
						"IERC20Metadata": [
							541
						]
					},
					"id": 542,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:2"
						},
						{
							"absolutePath": "contract/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 542,
							"sourceUnit": 516,
							"src": "151:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 518,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 515,
										"src": "159:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 521,
										"name": "IERC20",
										"nameLocations": [
											"305:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 515,
										"src": "305:6:2"
									},
									"id": 522,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 520,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 541,
							"linearizedBaseContracts": [
								541,
								515
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 525,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 541,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 531,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 541,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 537,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 541,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 542,
							"src": "277:405:2",
							"usedErrors": [],
							"usedEvents": [
								449,
								458
							]
						}
					],
					"src": "125:558:2"
				},
				"id": 2
			},
			"contract/token/ERC20/implementation.sol": {
				"ast": {
					"absolutePath": "contract/token/ERC20/implementation.sol",
					"exportedSymbols": {
						"CrossCToken": [
							437
						],
						"IERC20": [
							515
						],
						"IERC20Errors": [
							671
						],
						"IERC20Metadata": [
							541
						],
						"tokenLaunch": [
							629
						]
					},
					"id": 630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 543,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "contract/token/ERC20/CorssCToken.sol",
							"file": "contract/token/ERC20/CorssCToken.sol",
							"id": 544,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 438,
							"src": "58:46:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 545,
										"name": "CrossCToken",
										"nameLocations": [
											"173:11:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 437,
										"src": "173:11:3"
									},
									"id": 546,
									"nodeType": "InheritanceSpecifier",
									"src": "173:11:3"
								}
							],
							"canonicalName": "tokenLaunch",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 629,
							"linearizedBaseContracts": [
								629,
								437,
								671,
								541,
								515
							],
							"name": "tokenLaunch",
							"nameLocation": "158:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "386:249:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 563,
														"name": "ismainChain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "478:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "492:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "478:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 580,
													"nodeType": "Block",
													"src": "567:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 575,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "597:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_tokenLaunch_$629",
																					"typeString": "contract tokenLaunch"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_tokenLaunch_$629",
																					"typeString": "contract tokenLaunch"
																				}
																			],
																			"id": 574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "589:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 573,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "589:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "589:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 577,
																		"name": "initialSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 552,
																		"src": "604:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 572,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "583:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "583:35:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 579,
															"nodeType": "ExpressionStatement",
															"src": "583:35:3"
														}
													]
												},
												"id": 581,
												"nodeType": "IfStatement",
												"src": "475:154:3",
												"trueBody": {
													"id": 571,
													"nodeType": "Block",
													"src": "497:56:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 567,
																		"name": "minterAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "513:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 568,
																		"name": "initialSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 552,
																		"src": "528:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 566,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "507:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "507:35:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 570,
															"nodeType": "ExpressionStatement",
															"src": "507:35:3"
														}
													]
												}
											}
										]
									},
									"id": 583,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 559,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "370:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 560,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "377:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 561,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 558,
												"name": "CrossCToken",
												"nameLocations": [
													"358:11:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "358:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "358:27:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "227:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "213:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 547,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "213:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "256:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "242:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "242:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "281:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "273:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "minterAddress",
												"nameLocation": "312:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "304:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "ismainChain",
												"nameLocation": "340:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "335:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "335:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:154:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "386:0:3"
									},
									"scope": 629,
									"src": "192:443:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "793:108:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 591,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "879:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 592,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "888:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 590,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "873:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "873:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "873:21:3"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "749:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "762:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "754:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "779:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "771:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "753:32:3"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "793:0:3"
									},
									"scope": 629,
									"src": "740:161:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "993:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 603,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "1007:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1026:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1018:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 604,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1018:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1018:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1007:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 617,
												"nodeType": "IfStatement",
												"src": "1003:91:3",
												"trueBody": {
													"id": 616,
													"nodeType": "Block",
													"src": "1030:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1080:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1072:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 610,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1072:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1072:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 609,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "1051:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1051:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 615,
															"nodeType": "RevertStatement",
															"src": "1044:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1119:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1111:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 619,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1111:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1111:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "1123:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "1132:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 618,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "1103:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1103:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "1103:35:3"
											}
										]
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "946:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "960:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "952:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "977:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "969:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "951:32:3"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:0:3"
									},
									"scope": 629,
									"src": "937:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 630,
							"src": "149:998:3",
							"usedErrors": [
								641,
								646,
								651,
								660,
								665,
								670
							],
							"usedEvents": [
								449,
								458
							]
						}
					],
					"src": "32:1116:3"
				},
				"id": 3
			},
			"contract/token/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "contract/token/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							766
						],
						"IERC20Errors": [
							671
						],
						"IERC721Errors": [
							719
						]
					},
					"id": 767,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 631,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 632,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 671,
							"linearizedBaseContracts": [
								671
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 641,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "668:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:4"
									},
									"src": "621:80:4"
								},
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 646,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "889:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:4"
									},
									"src": "864:41:4"
								},
								{
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 651,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "1102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:4"
									},
									"src": "1075:45:4"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 660,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "1509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "1526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:4"
									},
									"src": "1476:85:4"
								},
								{
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 665,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:4"
									},
									"src": "1746:45:4"
								},
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 670,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "2023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:4"
									},
									"src": "1997:43:4"
								}
							],
							"scope": 767,
							"src": "278:1764:4",
							"usedErrors": [
								641,
								646,
								651,
								660,
								665,
								670
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 672,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 719,
							"linearizedBaseContracts": [
								719
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 677,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"src": "2440:40:4"
								},
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 682,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"src": "2623:46:4"
								},
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 691,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "2996:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "3012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "3029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:4"
									},
									"src": "2969:75:4"
								},
								{
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 696,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "3233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:4"
									},
									"src": "3207:42:4"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 701,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "3447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:4"
									},
									"src": "3419:46:4"
								},
								{
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 708,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "3756:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "3774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"src": "3723:68:4"
								},
								{
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 713,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4004:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:4"
									},
									"src": "3976:46:4"
								},
								{
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 718,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "4258:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:4"
									},
									"src": "4230:46:4"
								}
							],
							"scope": 767,
							"src": "2186:2092:4",
							"usedErrors": [
								677,
								682,
								691,
								696,
								701,
								708,
								713,
								718
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 720,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 766,
							"linearizedBaseContracts": [
								766
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 731,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "4854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "4870:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "4887:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "4903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:4"
									},
									"src": "4821:99:4"
								},
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 736,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "5110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:4"
									},
									"src": "5083:43:4"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 741,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "5325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:4"
									},
									"src": "5296:47:4"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 748,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "5645:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "5663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:4"
									},
									"src": "5610:68:4"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 753,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "5892:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:4"
									},
									"src": "5863:47:4"
								},
								{
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 758,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "6147:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:4"
									},
									"src": "6118:47:4"
								},
								{
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 765,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "6488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "6507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:4"
									},
									"src": "6456:73:4"
								}
							],
							"scope": 767,
							"src": "4424:2107:4",
							"usedErrors": [
								731,
								736,
								741,
								748,
								753,
								758,
								765
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:4"
				},
				"id": 4
			}
		}
	}
}